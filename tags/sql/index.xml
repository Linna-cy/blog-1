<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>SQL on Linner&#39;s Blog</title>
        <link>https://blog.linner.asia/tags/sql/</link>
        <description>Recent content in SQL on Linner&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh</language>
        <lastBuildDate>Sat, 22 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.linner.asia/tags/sql/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>数据库（软件设计师）</title>
        <link>https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/</link>
        <pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate>
        
        <guid>https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/</guid>
        <description>&lt;h1 id=&#34;数据库体系结构&#34;&gt;数据库体系结构&lt;/h1&gt;
&lt;p&gt;数据描述有两种形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;逻辑描述：指程序员或用户用以操作的数据形式，是抽象的概念化数据。&lt;/li&gt;
&lt;li&gt;物理描述：指数据在存储设备上的存储方式，物理数据是实际存放在存储设备上的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三级模式结构&#34;&gt;三级模式结构&lt;/h2&gt;
&lt;p&gt;实际上有许多不同的数据库产品，但它们的体系结构基本上都具有相同的特征，采用“三级模式和两级映像”：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681373319410.png&#34;
	width=&#34;486&#34;
	height=&#34;377&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681373319410_hu9b9f67605df5247fa6ccd5bd0d000f11_51804_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681373319410_hu9b9f67605df5247fa6ccd5bd0d000f11_51804_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;三级模式两级映像&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;128&#34;
		data-flex-basis=&#34;309px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;三级结构有3类数据模型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;外模型&lt;/strong&gt;：用户使用的&lt;strong&gt;数据视图&lt;/strong&gt;，是一种局部的逻辑数据视图，表示用户所理解的实体、实体属性和实体关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;概念模型&lt;/strong&gt;：全局的&lt;strong&gt;逻辑数据视图&lt;/strong&gt;，是数据库管理员所看到的实体、实体属性和实体之间的联系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内模型&lt;/strong&gt;：数据的物理&lt;strong&gt;存储模型&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;三个物理模型分别对应数据库系统的3层结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;外模式（子模式、用户模式）&lt;/strong&gt;：数据库用户的数据视图，是与某一应用程序有关的数据的逻辑表示。&lt;/p&gt;
&lt;p&gt;外模式用DBMS的外模式描述语言（外模式DDL)来定义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;概念模式（模式）&lt;/strong&gt;：所有用户的公共数据视图，与具体的应用程序和应用程序开发工具无关。&lt;/p&gt;
&lt;p&gt;概念模式用DBMS的模式描述语言（模式DDL)来定义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;内模式（物理模式、存储模式）&lt;/strong&gt;：是数据在数据库内部的表示方式。&lt;/p&gt;
&lt;p&gt;内模式由DBMS的内模式描述语言（内模式DDL)来描述，由设备介质语言来定义。&lt;/p&gt;
&lt;p&gt;定义&lt;u&gt;所有的&lt;strong&gt;内部记录类型&lt;/strong&gt;、&lt;strong&gt;索引&lt;/strong&gt;和&lt;strong&gt;文件&lt;/strong&gt;的组织方式&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;两级模式映象&#34;&gt;两级模式映象&lt;/h2&gt;
&lt;p&gt;数据库系统在三级模式之间提供了两级映像：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模式——内模式映像存在于&lt;u&gt;概念级和内部级&lt;/u&gt;之间，实现&lt;u&gt;概念模式和内模式&lt;/u&gt;间的相互转换。&lt;/li&gt;
&lt;li&gt;外模式——模式映像：存在于&lt;u&gt;外部级和概念级&lt;/u&gt;之间，实现了&lt;u&gt;外模式和概念模式&lt;/u&gt;之间的相互转换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据的独立性（指数据与程序独立）是由DBMS的二级映像功能来保证的。数据的独立性包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;物理独立性&lt;/strong&gt;：指当数据库的&lt;u&gt;内模式发生改变时，数据的逻辑结构不变&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;物理独立性可以保证，当数据的物理结构改变时，应用程序不用改变。&lt;/p&gt;
&lt;p&gt;但是，为了保证应用程序能够正确执行，&lt;u&gt;需要修改概念模式和内模式之间的映像&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;逻辑独立性&lt;/strong&gt;：指用户的&lt;u&gt;应用程序与数据库的逻辑结构是相互独立的&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;数据的逻辑结构发生变化后，用户程序也可以不修改。&lt;/p&gt;
&lt;p&gt;但是，为了保证应用程序能够正确执行，&lt;u&gt;需要修改外模式和概念模式之间的映像&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;数据模型&#34;&gt;数据模型&lt;/h1&gt;
&lt;p&gt;在数据库技术中，表示实体类型及实体类型间联系的模型称为数据模型。&lt;/p&gt;
&lt;p&gt;数据模型有以下类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念数据模型：从信息世界中抽象的数据模型；&lt;/li&gt;
&lt;li&gt;结构数据模型：从计算机世界中抽象出的DBMS支持的数据模型。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;概念数据模型&#34;&gt;概念数据模型&lt;/h2&gt;
&lt;p&gt;概念数据模型用于信息世界建模，一般采用实体-联系方法（E-R方法）。概念数据模型的常用术语有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实体&lt;/strong&gt;：客观存在并可以相互区别的事物称为实体。&lt;/p&gt;
&lt;p&gt;如一个单位、一个职工、一个部门或一个项目等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;属性&lt;/strong&gt;：描述实体的特性称为属性，一个实体可以由若干个属性来刻画。&lt;/p&gt;
&lt;p&gt;属性的具体取值称为属性值，用以表示一个具体实体。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;码&lt;/strong&gt;：&lt;u&gt;唯一标识&lt;/u&gt;实体的属性集称为码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;域&lt;/strong&gt;：属性的&lt;u&gt;取值范围&lt;/u&gt;称为该属性的域。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实体型&lt;/strong&gt;：具有相同属性的实体必然具有共同的特征和性质，用实体名及其属性名集合来抽象和刻画同类实体，称为实体型。&lt;/p&gt;
&lt;p&gt;例如，学生（学号，姓名，性别，班号）就是一个实体型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实体集&lt;/strong&gt;：同型实体的集合称为实体集。&lt;/p&gt;
&lt;p&gt;例如，全体学生就是一个实体集。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;联系&lt;/strong&gt;：实体（型）之间的对应关系称为联系。联系分为两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实体内部各属性之间的联系；&lt;/li&gt;
&lt;li&gt;实体之间的联系。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个实体型之间的联系有3种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一对一联系(1:1)；&lt;/li&gt;
&lt;li&gt;一对多联系(1:n)；&lt;/li&gt;
&lt;li&gt;多对多联系(m:n)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实体-联系方法表示的概念数据模型称为E-R图。E-R图是抽象和描述现实世界的有力工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;实体型&lt;/strong&gt;：用&lt;strong&gt;矩形&lt;/strong&gt;表示，矩形框内写明实体名；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;属性&lt;/strong&gt;：用&lt;strong&gt;椭圆形&lt;/strong&gt;表示，并用无向边将其与相应的实体连接起来；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;联系&lt;/strong&gt;：用&lt;strong&gt;菱形&lt;/strong&gt;表示，菱形框内写明联系名，并用无向边将其分别与有关实体连接起来，同时在无向边旁标上联系的类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681289395117.png&#34;
	width=&#34;240&#34;
	height=&#34;242&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681289395117_hube981d9754c37a567c83a04aad71de33_18088_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681289395117_hube981d9754c37a567c83a04aad71de33_18088_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;E-R图示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;99&#34;
		data-flex-basis=&#34;238px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;结构数据模型&#34;&gt;结构数据模型&lt;/h2&gt;
&lt;p&gt;结构数据模型是直接面向数据库的逻辑结构。这类模型涉及到计算机系统和数据库管理系统，所以称为结构数据模型。任何一个DBMS都以某个结构数据模型为基础，或者说支持某个结构数据模型。&lt;/p&gt;
&lt;p&gt;常用术语：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数据项&lt;/strong&gt;：又称&lt;strong&gt;字段&lt;/strong&gt;，是数据库中可以命名的最小逻辑数据单位。可以是一个数或个字符串，用它描述属性的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;记录&lt;/strong&gt;：是数据项的有序集，即一个记录是由若干个数据项或字段组成，用它描述实体。&lt;/p&gt;
&lt;p&gt;一般来说，数据只有被组成记录的形式才有实际意义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;：文件是一个具有符号名的一组同类记录的集合。文件包含记录的结构和记录的值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结构数据模型主要包括：层次、网状、关系和面向对象模型。&lt;/p&gt;
&lt;p&gt;关系模型是一种用二维表格结构快表示实体以及实体之间联系的数据模型。每个二维表由行、列组成，又可称为关系，关系模式是对关系的描述。因此可以说，关系模型是由关系模式组成的集合。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目前大多数数据库管理系统都是关系型的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;关系模型&#34;&gt;关系模型&lt;/h1&gt;
&lt;h2 id=&#34;术语&#34;&gt;术语&lt;/h2&gt;
&lt;p&gt;有关关系模型的术语：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关系&lt;/strong&gt;：一个关系就是一张&lt;strong&gt;二维表&lt;/strong&gt;，每个关系有一个关系名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;元组&lt;/strong&gt;：表中的一行即为一个&lt;strong&gt;元组&lt;/strong&gt;，对应存储文件中的一个&lt;strong&gt;记录值&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;属性&lt;/strong&gt;：表中的&lt;strong&gt;列&lt;/strong&gt;称为属性，每一列有一个属性名。&lt;/p&gt;
&lt;p&gt;属性值相当于记录中的数据项或者字段值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;域&lt;/strong&gt;：属性的&lt;strong&gt;取值范围&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关系模式&lt;/strong&gt;：对关系的&lt;strong&gt;描述&lt;/strong&gt;称为关系模式，由关系名和其属性集合构成，关系模式的格式为：关系名（属性名1，属性名2，…，属性名n）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;候选码&lt;/strong&gt;（候选健）：属性或属性组合其值能够&lt;strong&gt;唯一地标识&lt;/strong&gt;一个元组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;主码&lt;/strong&gt;（主键）：在一个关系中可能有&lt;u&gt;多个候选码，从中选择一个&lt;/u&gt;作为主码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;主属性&lt;/strong&gt;：所有候选键都称为主属性，其他的属性都称为&lt;strong&gt;非码属性&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;外码&lt;/strong&gt;（或外键）：如果一个关系中的属性或属性组并非该关系（二维表）的码，但它们是&lt;u&gt;另外一个关系（二维表）的码&lt;/u&gt;，则称其为该关系的外码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;全码&lt;/strong&gt;：关系模式的&lt;u&gt;所有属性组是这个关系模式的候选码&lt;/u&gt;，称为全码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;超码&lt;/strong&gt;（超键）：一个&lt;u&gt;包含码的属性集称为超码&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;例如学号是码，则（学号，姓名）就是一个超码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;完整性约束&#34;&gt;完整性约束&lt;/h2&gt;
&lt;p&gt;完整性规则保证用户对数据库做修改时不会破坏数据的一致性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实体完整性&lt;/strong&gt;（Entity Integrity，引用完整性）：规定基本关系R的主属性A不能取空值。&lt;/p&gt;
&lt;p&gt;即&lt;u&gt;主属性不能为空&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;参照完整性&lt;/strong&gt;（Referential Integrity）：若F是基本关系R的外码，它与基本关系S的主码K&lt;sub&gt;s&lt;/sub&gt;相对应（基本关系R和S不一定是不同的关系），则对于R中每个元组在F上的值可以取：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空值（F的每个属性值均为空值）；&lt;/li&gt;
&lt;li&gt;S中某个元组的主码值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即实体之间的关联可以变现为：关系R用外码F与关系S关联，外码F的值可以为空也可以为关系S中某个元组（记录）的主码值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;用户定义完整性&lt;/strong&gt;（User Defined Integrity）：针对某一具体的关系数据库的约束条件，反映某一具体应用所涉及的数据必须满足的语义要求，由应用的环境决定。&lt;/p&gt;
&lt;p&gt;例如，银行的用户账户规定必须大于等于100000、小于999999。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;关系代数运算符&#34;&gt;关系代数运算符&lt;/h2&gt;
&lt;p&gt;关系操作的特点是操作对象和操作结果都是集合，而非关系数据模型的数据操作方式则为一次一个记录的方式。&lt;/p&gt;
&lt;p&gt;关系数据语言分为三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关系代数语言；&lt;/li&gt;
&lt;li&gt;关系演算语言；&lt;/li&gt;
&lt;li&gt;具有关系代数和关系演算双重特点的语言。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系演算语言包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元组关系演算语言；&lt;/li&gt;
&lt;li&gt;域关系演算语言。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系代数运算符有4类：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681431891302.png&#34;
	width=&#34;735&#34;
	height=&#34;301&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681431891302_hu474e5e1683bfce1832772e13dcf3cc90_42174_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681431891302_hu474e5e1683bfce1832772e13dcf3cc90_42174_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;关系代数运算符&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;244&#34;
		data-flex-basis=&#34;586px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;基本关系代数运算是对两个具有&lt;u&gt;相同的关系模式&lt;/u&gt;的关系进行运算。关系$R$与$S$具有&lt;u&gt;相同的关系模式&lt;/u&gt;，即$R$与$S$的元数相同（结构相同）。&lt;/p&gt;
&lt;p&gt;基本关系代数运算包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;并&lt;/strong&gt;（Union）：关系$R$与$S$的并是由属于$R$或属于$S$的元组构成的集合，记作$R \cup S$，其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R \cup S = \{ t | (t \in R) \vee (t \in S) \}
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;式中$t$为元组变量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;差&lt;/strong&gt;（Difference）：关系$R$与$S$的差是由&lt;u&gt;属于$R$但不属于$S$&lt;/u&gt;的元组构成的集合，记作$R-S$，其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R-S = \{ t| (t \in R) \wedge (t \not\in S) \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;交&lt;/strong&gt;（Intersection）：关系$R$与$S$的交是由属于$R$同时又属于$S$的元组构成的集合，记作$R \cap S$,其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R \cap S = \{ t| (t \in R) \wedge (t \in S) \}
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$R \cap S = R-(R-S)$，或者$R \cap S = S-(S-R)$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扩展的关系代数运算可以从基本的关系运算中导出，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;广义笛卡儿积&lt;/strong&gt;（Extended Cartesian Product）：两个元组分别为$n$目和$m$目的关系$R$和$S$的广义笛卡儿积是一个$(n+m)$列的元组的集合。&lt;/p&gt;
&lt;p&gt;元组的前$n$列是关系$R$的一个元组，后$m$列是关系$S$的一个元组，记作$R \times S$，其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R \times S = \{ t| (t \ = \ &amp;lt;t^n, t^m&amp;gt;) \wedge (t^n \in R) \wedge (t^m \in S) \}
$$&lt;/p&gt;
&lt;p&gt;如果$R$和$S$中有相同的属性名，可在属性名前加关系名作为限定，以示区别。若$R$有$K_1$,个元组，$S$有$K_2$个元组，则$R$和$S$的广义笛卡儿积有$K_1 \times K2$个元组。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$&amp;lt;t^n, t^m&amp;gt;$是一个元组$t^n$和$t^m$拼接成的一个元组。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;投影&lt;/strong&gt;（Projection）：投影运算是从关系的&lt;u&gt;垂直方向&lt;/u&gt;进行运算，在关系$R$中选出若干属性列$A$组成新的关系，记作$\pi_A (R)$，其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
\pi_A (R) = \{ t[A]|t \in R \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;选择&lt;/strong&gt;（Selection）：选择运算是从关系的&lt;u&gt;水平方向&lt;/u&gt;进行运算，是从关系$R$中选择满足给定条件的诸元组，记作$\sigma_F (R)$其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
\sigma_A (R) = \{ t| (t \in R) \wedge F(t) = True \}
$$&lt;/p&gt;
&lt;p&gt;其中，$F(t)$中的运算对象可以是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;属性名（或列的序号）；&lt;/li&gt;
&lt;li&gt;常数；&lt;/li&gt;
&lt;li&gt;运算符；&lt;/li&gt;
&lt;li&gt;算术比较符（$&amp;lt;, \le, &amp;gt;, \ge, \neq$）；&lt;/li&gt;
&lt;li&gt;逻辑运算符（$\wedge, \vee, \neg$）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;连接&lt;/strong&gt;（Join）：连接运算是从两个关系$R$和$S$的笛卡儿积中选取满足条件的元组。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以认为笛卡儿积是无条件连接，其他的连接操作认为是有条件连接。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;$\theta$连接&lt;/strong&gt;：从$R$与$S$的笛卡儿积中选取属性间满足一定条件的元组。记作：&lt;/p&gt;
&lt;p&gt;$$
R \mathop{\Join}\limits_{X \theta Y} S = \{ t| (t=&amp;lt;t^n,t^m&amp;gt;) \wedge (t^n \in R) \wedge (t^m \in S) \wedge (t^n[X] \ \theta \ t^m[Y]) \}
$$&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$X \theta Y$：连接的条件；&lt;/li&gt;
&lt;li&gt;$\theta$：比较运算符；&lt;/li&gt;
&lt;li&gt;$X$和$Y$分别为$R$和$S$上度数相等且可比的属性组；&lt;/li&gt;
&lt;li&gt;$t^n\left[ X \right]$表示$R$中$t^n$元组的对应于属性$X$的一个分量；&lt;/li&gt;
&lt;li&gt;$t^m[Y]$表示$S$中$t^m$元组的对应于属性$Y$的一个分量。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$\theta$连接也可以表示为：&lt;/p&gt;
&lt;p&gt;$$
R \mathop{\Join}\limits_{i \theta j} S = \{ t| (t=&amp;lt;t^n,t^m&amp;gt;) \wedge (t^n \in R) \wedge (t^m \in S) \wedge (t^n[i] \ \theta \ t^m[j]) \}
$$&lt;/p&gt;
&lt;p&gt;其中，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$i=1,2,3,\cdots,n$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$j=1,2,3,\cdots,m$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$i \theta j$：&lt;/p&gt;
&lt;p&gt;从两个关系$R$和$S$中选取$R$的第$i$列和$S$的第$j$列之间满足$\theta$运算的元组进行连接。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$\theta$连接可以由基本的关系运算笛卡儿积和选取运算导出。因此，$\theta$连接可表示为：&lt;/p&gt;
&lt;p&gt;$$
R \mathop{\Join}\limits_{X \theta Y} S = \sigma_{X \theta Y}(R \times S)
$$&lt;/p&gt;
&lt;p&gt;或：&lt;/p&gt;
&lt;p&gt;$$
R \mathop{\Join}\limits_{i \theta j} S = \sigma_{i \theta j}(R \times S)
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;等值连接&lt;/strong&gt;：当$\theta$为“=”时，称之为等值连接，记为$R \mathop{\Join}\limits_{i = j} S$，其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R \mathop{\Join}\limits_{i = j} S = \{ t| (t=&amp;lt;t^n,t^m&amp;gt;) \wedge (t^n \in R) \wedge (t^m \in S) \wedge (t^n[i] = t^m[j]) \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$F$连接：从关系$R$和$S$的笛卡尔积中选取属性值满足某一公式$F$的元组，记为$\mathop{\Join}\limits_{F}$。&lt;/p&gt;
&lt;p&gt;$F$是形为$F_1 \wedge F_2 \wedge \cdots \wedge F_n$的公式，每个$F_p$是形为$i \theta j$的式子。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自然连接&lt;/strong&gt;：自然连接是一种特殊的等值连接，它要求两个关系中&lt;u&gt;进行比较的分量必须是相同的属性组&lt;/u&gt;，并且在结果集中&lt;u&gt;将重复属性列去掉&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;若：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$t^n \in R$，$t^m \in S$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$R$和$S$具有相同的属性组$B$，且$B=(B_1,B_2,,B_k)$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假定$R$关系的属性：&lt;/p&gt;
&lt;p&gt;$$
A_1,A_2,\cdots,A_{n-k},B_1,B_2,\cdots,B_k
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$S$关系的属性：&lt;/p&gt;
&lt;p&gt;$$
B_1,B2,\cdots,B_k,B_{k+1},B_{k+2},\cdots,B_m
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自然连接可以记为$R \Join S$,其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R \Join S = \{ t| (t = &amp;lt;t^n, t^m&amp;gt;) \wedge (t^n \in R) \wedge (t^m \in S) \wedge (R.B_1 = S.B_1) \wedge (R.B_2 = S.B_2) \wedge \cdots \wedge (R.B_k = S.B_k) \}
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一般连接是从关系的水平方向运算，而自然连接&lt;u&gt;不仅要从关系的水平方向运算，而且要从关系的垂直方向运算&lt;/u&gt;（去掉重复属性）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;外连接&lt;/strong&gt;（Outer Jion）：外连接运算是连接运算的扩展，可以处理由于连接运算而缺失的信息。&lt;/p&gt;
&lt;p&gt;外连接运算有3种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;左外连接&lt;/strong&gt;（Left Outer Jion，⟕）：取出左侧关系中所有与右侧关系中任一元组都不匹配的元组，用空值$null$充填所有来自右侧关系的属性，构成新的元组，将其加入自然连接的结果中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;右外连接&lt;/strong&gt;（Right Outer Jion，⟖）：取出右侧关系中所有与左侧关系中任一元组都不匹配的元组，用空值$null$填充所有来自左侧关系的属性，构成新的元组，将其加入自然连接的结果中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;全外连接&lt;/strong&gt;（Full Outer Jion，⟗）。完成左外连接和右外连接的操作。即填充左侧关系中所有与右侧关系中任一元组都不匹配的元组，并填充右侧关系中所有与左侧关系中任一元组都不匹配的元组，将产生的新元组加入自然连接的结果中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681454087063.png&#34;
	width=&#34;762&#34;
	height=&#34;575&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681454087063_hud13edc09469e2a4b2eff4fd4a8bf7c0a_99173_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681454087063_hud13edc09469e2a4b2eff4fd4a8bf7c0a_99173_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;318px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;除&lt;/strong&gt;（Division）：给定关系$R(X,Y)$和$S(Y,Z)$，$X、Y、Z$为属性组。$R \div S$应当满足元组在$X$上的分量值$x$的象集$Y_x$包含关系$S$在属性组$Y$上投影的集合。其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R \div S = \{ t^n[X] | (t^n \in R) \wedge (\pi_y (S) \subseteq Y_x) \}
$$&lt;/p&gt;
&lt;p&gt;其中，$Y_x$为$x$在$R$中的象集，$x=t^n[X]$，且$R \div S$的结果集的属性组为$X$。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;除运算是同时从关系的水平方向和垂直方向进行运算。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;sql-语句&#34;&gt;SQL 语句&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;SQL&lt;/strong&gt;（&lt;strong&gt;Structured Query Language&lt;/strong&gt;，发音为 sequal）是一种专门用来与数据库沟通的语言。通过 SQL，用户可以对数据库进行各种操作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;标准 SQL 由 ANSI 标准委员会管理，从而称为 ANSISQL。&lt;/p&gt;
&lt;p&gt;查看更多 &lt;a class=&#34;link&#34; href=&#34;../sql-%e8%af%ad%e5%8f%a5&#34; &gt;SQL语句&lt;/a&gt; 相关内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;分类&#34;&gt;分类&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DDL&lt;/strong&gt;（&lt;strong&gt;Data Definition Language&lt;/strong&gt;，&lt;strong&gt;数据定义语言&lt;/strong&gt;）：用来定义数据库对象：数据库，表，列等。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;CREATE&lt;/code&gt;、&lt;code&gt;DROP&lt;/code&gt;、&lt;code&gt;ALTER&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DML&lt;/strong&gt;（&lt;strong&gt;Data Manipulation Language&lt;/strong&gt;，&lt;strong&gt;数据操作语言&lt;/strong&gt;）：用来对数据库中表的数据进行增删改。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;INSERT&lt;/code&gt;、&lt;code&gt;DELETE&lt;/code&gt;、&lt;code&gt;UPDATE&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DQL&lt;/strong&gt;（&lt;strong&gt;Data Query Language&lt;/strong&gt;，&lt;strong&gt;数据查询语言&lt;/strong&gt;）：用来查询数据库中表的记录。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;SELECT&lt;/code&gt;等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DCL&lt;/strong&gt;（&lt;strong&gt;Data Control Language&lt;/strong&gt;，&lt;strong&gt;数据控制语言&lt;/strong&gt;）：用来定义数据库的访问权限和安全级别，及创建用户。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;数据定义语言ddl&#34;&gt;数据定义语言（DDL）&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;CREATE&lt;/code&gt;——创建：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;建立数据库：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;数据库名&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立基本表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;数据类型&lt;/span&gt; [&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列级完整性约束条件&lt;/span&gt;],
    ...
    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表级完整性约束条件&lt;/span&gt;,
    ...
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;完整性约束有3种子句：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PRIMARY KEY&lt;/code&gt;：主键约束；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CHECK&lt;/code&gt;：检查约束；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FOREIGN KEY&lt;/code&gt;：外键约束；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NOT NULL&lt;/code&gt;：非空约束；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UNIQUE&lt;/code&gt;：唯一约束；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DEFAULT&lt;/code&gt;：默认约束。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;定义列时使用的基本数据类型如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NTEGER&lt;/code&gt;：整数（也可写成&lt;code&gt;INT&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FLOAT(n)&lt;/code&gt;：浮点数，精度至少为n位数字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NUMERIC(p,d)&lt;/code&gt;：定点数，由p位数字（不包括符号、小数点）组成，小数点后面有d位数字（也可写成&lt;code&gt;DECIMAL(p,d)&lt;/code&gt;或&lt;code&gt;DEC(p,d)&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CHAR(n)&lt;/code&gt;：长度为n的定长字符串。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DATETIME&lt;/code&gt;：日期时间型。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ALTER TABLE&lt;/code&gt;——修改表结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;增加新列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;类型&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改列的定义：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COLUMN&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;新类型&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COLUMN&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;DROP TABLE&lt;/code&gt;——删除基本表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;数据操纵语言dml&#34;&gt;数据操纵语言（DML）&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;INSERT INTO&lt;/code&gt;——插入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;直接插入元组值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名（列名序列）&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;元组值&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;序列&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;元组值&lt;/span&gt;), (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;元组值&lt;/span&gt;), ...)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;插入一个查询的结果值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名序列&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;查询语句&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;DELETE FROM&lt;/code&gt;——删除：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;条件表达式&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;UPDATE&lt;/code&gt;——修改：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;值表达式&lt;/span&gt;[, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;值表达式&lt;/span&gt;...]
[WHERE条件表达式]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;数据查询语言dql&#34;&gt;数据查询语言（DQL）&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;SELECT&lt;/code&gt;——查询：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;目标表的列名或列表达式序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;
[&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;行条件表达式&lt;/span&gt;]
[&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名序列&lt;/span&gt;
[&lt;span style=&#34;color:#66d9ef&#34;&gt;HAVING&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;组条件表达式&lt;/span&gt;]]
[&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt;[&lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;]...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;where-条件查询&#34;&gt;WHERE 条件查询&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;目标表的列名或列表达式序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;行条件表达式&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运算符：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 或 &lt;code&gt;!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大于等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不大于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小于等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BETWEEN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;范围在指定的两个值之间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;!&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不小于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;IS NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;为 NULL 的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;IS NOT NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不为 NULL 的值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;AND&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;逻辑与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;OR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;逻辑或&lt;/td&gt;
&lt;td&gt;&lt;code&gt;NOT&lt;/code&gt;逻辑非&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;IN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配包含在集合中的值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;NOT IN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定不包含在集合中的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LIKE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;字符模糊配对&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;LIKE&lt;/code&gt;字符模糊配对包含以下通配符：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;目标表的列名或列表达式序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;
WHRER &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_ABC%&amp;#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%&lt;/code&gt;：表示任何字符出现任意次数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_&lt;/code&gt;：表示匹配单个任意字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;order-by-排序数据&#34;&gt;ORDER BY 排序数据&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ORDER BY&lt;/code&gt;可以指定多个列来排序，排序规则有：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;关键字&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;规则说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;ASC&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;升序排序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;DESC&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;降序排序&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;目标表的列名或列表达式序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;
[...]
[&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;] ...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;ORDER BY子句必须是SELECT命令中的最后一个子句。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;group-by-分组数据&#34;&gt;GROUP BY 分组数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;目标表的列名或列表达式序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;
[&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名序列&lt;/span&gt;
[&lt;span style=&#34;color:#66d9ef&#34;&gt;HAVING&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;组条件表达式&lt;/span&gt;]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HAVING&lt;/code&gt;是&lt;code&gt;GROUP BY&lt;/code&gt;的分组条件控制语句。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HAVING&lt;/code&gt;的操作符和&lt;code&gt;WHERE&lt;/code&gt;相同。&lt;/li&gt;
&lt;li&gt;被&lt;code&gt;WHERE&lt;/code&gt;过滤掉的记录并不会出现在分组中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;聚合函数&#34;&gt;聚合函数&lt;/h3&gt;
&lt;p&gt;聚合函数实现数据统计等功能。&lt;/p&gt;
&lt;p&gt;函数名|功能
&lt;code&gt;AVG&lt;/code&gt;|计算一个数值型表达式的平均值
&lt;code&gt;COUNT&lt;/code&gt;|计算指定表达式中选择的项数，&lt;code&gt;COUNT(*)&lt;/code&gt;统计查询输出的行数
&lt;code&gt;MIN&lt;/code&gt;|计算指定表达式中的最小值
&lt;code&gt;MAX&lt;/code&gt;|计算指定表达式中的最大值
&lt;code&gt;SUM&lt;/code&gt;|计算指定表达式中的数值总和
&lt;code&gt;STDEV&lt;/code&gt;|计算指定表达式中所有数据的标准差
&lt;code&gt;STDEVP&lt;/code&gt;|计算总体标准差&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;目标表的列名或列表达式序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;使用了聚合函数的条件判断&lt;/span&gt;
[ ... ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;聚合函数&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;聚合函数可以使用算数运算符。&lt;/p&gt;
&lt;p&gt;聚合函数常与&lt;code&gt;GROUP BY&lt;/code&gt;子句一起使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;连接&#34;&gt;连接&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;连接符号&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;INNER JOIN&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;内连接（默认）。&lt;br&gt;内连接又包括等值连接、非等值连接和自连接。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;OUTER JOIN&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;外连接。&lt;br&gt;又包括：&lt;br&gt;&lt;code&gt;LEFT OUTER JOIN&lt;/code&gt;（左外连接）；&lt;br&gt;&lt;code&gt;RIGHT OUTER JOIN&lt;/code&gt;（右外连接）；&lt;br&gt;&lt;code&gt;FULL OUTER JOIN&lt;/code&gt;（全外连接）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;子查询&#34;&gt;子查询&lt;/h3&gt;
&lt;p&gt;子查询是指将&lt;code&gt;SELECT&lt;/code&gt;作为其它语句的子句使用。例如在&lt;code&gt;WHERE&lt;/code&gt;、&lt;code&gt;FROM&lt;/code&gt;中使用&lt;code&gt;SELECT&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;数据控制语言dcl&#34;&gt;数据控制语言（DCL）&lt;/h2&gt;
&lt;p&gt;数据控制控制的是&lt;strong&gt;用户对数据的存储访问权力&lt;/strong&gt;，是由DBA决定的。但是，某个用户对某类数据具有何种权利，是个&lt;strong&gt;政策问题&lt;/strong&gt;而不是技术问题。&lt;/p&gt;
&lt;p&gt;授权语句格式（&lt;code&gt;GRANT&lt;/code&gt;）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;权限&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;[, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;权限&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;] ...
[&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;对象类型&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;对象名&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;TO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;用户&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;[, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;用户&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;]...
[&lt;span style=&#34;color:#66d9ef&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OPTION&lt;/span&gt;];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不同类型的操作对象有不同的操作权限，常见的操作权限如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;对象&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;对象类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;操作权限&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;属性列&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;TABLE&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;SELECT&lt;/code&gt;、&lt;br&gt;&lt;code&gt;INSERT&lt;/code&gt;、&lt;br&gt;&lt;code&gt;UPDATE&lt;/code&gt;、&lt;br&gt;&lt;code&gt;DELETE&lt;/code&gt;、&lt;br&gt;&lt;code&gt;ALL PRIVILEGES&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;视图&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;TABLE&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;SELECT&lt;/code&gt;、&lt;br&gt;&lt;code&gt;INSERT&lt;/code&gt;、&lt;br&gt;&lt;code&gt;UPDATE&lt;/code&gt;、&lt;br&gt;&lt;code&gt;DELETE&lt;/code&gt;、&lt;br&gt;&lt;code&gt;ALL PRIVILEGES&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;基本表&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;TABLE&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;SELECT&lt;/code&gt;、&lt;br&gt;&lt;code&gt;INSERT&lt;/code&gt;、&lt;br&gt;&lt;code&gt;UPDATE&lt;/code&gt;、&lt;br&gt;&lt;code&gt;DELETE&lt;/code&gt;、&lt;br&gt;&lt;code&gt;ALTER&lt;/code&gt;、&lt;br&gt;&lt;code&gt;INDEX&lt;/code&gt;、&lt;br&gt;&lt;code&gt;ALL PRIVILEGES&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;数据库&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;DATABASE&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;CREATETAB&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;建立表的权限，可由DBA授予普通用户；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WITH GRANT OPTION&lt;/code&gt;：表示获得了这些权限的用户还可以将权限赋给其他用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;收回权限语句格式（&lt;code&gt;REVOKE&lt;/code&gt;）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;REVOKE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;权限&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;[, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;权限&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;]...
[&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;对象类型&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;对象名&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;用户&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;[, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;用户&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;视图&#34;&gt;视图&lt;/h2&gt;
&lt;p&gt;视图是从一个或者多个基本表或视图中导出的虚拟表。&lt;/p&gt;
&lt;p&gt;创建视图：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;视图名&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列表名&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;查询子句&lt;/span&gt;
[&lt;span style=&#34;color:#66d9ef&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OPTION&lt;/span&gt;];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;子查询可以是任意复杂的&lt;code&gt;SELECT&lt;/code&gt;语句，但通常不允许含有&lt;code&gt;ORDER BY&lt;/code&gt;子句和&lt;code&gt;DISTINCT&lt;/code&gt;短语。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WITH CHECK OPTION&lt;/code&gt;：表示对&lt;code&gt;UPDATE&lt;/code&gt;、&lt;code&gt;INSERT&lt;/code&gt;、&lt;code&gt;DELETE&lt;/code&gt;操作时保证更新、插入或删除的行满足视图定义中的谓词条件（即子查询中的条件表达式）。&lt;/li&gt;
&lt;li&gt;组成视图的属性列名或者全部省略或者全部指定。如果省略属性列名，则隐含该视图由&lt;code&gt;SELECT&lt;/code&gt;子查询目标列的主属性组成。&lt;/li&gt;
&lt;li&gt;对视图进行的增改操作实际上是对基本表进行操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;删除视图：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;视图名&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;索引&#34;&gt;索引&lt;/h2&gt;
&lt;p&gt;数据库中的索引是&lt;u&gt;某个表中一列或者若干列值的集合&lt;/u&gt;和&lt;u&gt;相应的指向表中物理标识这些值的数据页的逻辑指针清单&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;索引分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;聚集索引：指索引表中索引项的顺序与表中记录的物理顺序一致的索引；&lt;/li&gt;
&lt;li&gt;非聚集索引。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;对数据库表创建和删除索引，修改的是数据库的内模式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;关系数据库的规范化&#34;&gt;关系数据库的规范化&lt;/h1&gt;
&lt;h2 id=&#34;关系模式&#34;&gt;关系模式&lt;/h2&gt;
&lt;p&gt;一个关系模式应当是一个五元组（含关系名）：$R&amp;lt;U,D,dom,F&amp;gt;$。&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$R$：&lt;u&gt;关系名，是符号化的元祖语义；&lt;/u&gt;&lt;/li&gt;
&lt;li&gt;$U$：&lt;u&gt;一组属性名；&lt;/u&gt;&lt;/li&gt;
&lt;li&gt;$D$：属性组$U$中的属性来自域$D$；&lt;/li&gt;
&lt;li&gt;$dom$：属性到域的映射；&lt;/li&gt;
&lt;li&gt;$F$：&lt;u&gt;属性组$U$上的一组数据依赖（函数依赖）。&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$D$和$dom$对模式设计关系不大，通常将关系模式看作是一个三元组：$R&amp;lt;U,F&amp;gt;$。&lt;/p&gt;
&lt;p&gt;当且仅当$U$上的一个关系$r$满足$F$时，称$r$为关系模式$R&amp;lt;U,F&amp;gt;$的一个关系。&lt;/p&gt;
&lt;h2 id=&#34;函数依赖&#34;&gt;函数依赖&lt;/h2&gt;
&lt;p&gt;数据依赖是&lt;u&gt;通过一个关系中属性间值的相等与否&lt;/u&gt;体现出来的&lt;u&gt;数据间的相互关系&lt;/u&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;函数依赖&lt;/strong&gt;：设$R(U)$是属性集U上的关系模式，&lt;u&gt;$X$、$Y$是$U$的子集&lt;/u&gt;。若对$R(U)$的任何一个可能的关系$r$，$r$中不可能存在两个元组在$X$上的属性值相等，而在$Y$上的属性值不等（即，&lt;u&gt;在关系$r$中，元组在$X$上的属性值相等，那么在$Y$上的属性值也相等&lt;/u&gt;），则称&lt;strong&gt;X函数决定Y&lt;/strong&gt;或&lt;strong&gt;Y函数依赖于X&lt;/strong&gt;，记作$X \rightarrow Y$。&lt;/p&gt;
&lt;p&gt;如，学生表中，$学号 \rightarrow 姓名$。&lt;/p&gt;
&lt;p&gt;属性之间有3种关系，但并不是每一种都存在函数依赖。如果$X$和$Y$之间的对应关系是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$1-1$：存在函数依赖$X \rightarrow Y$和$Y \rightarrow Y$；&lt;/li&gt;
&lt;li&gt;$n:1$：存在函数依赖$X \rightarrow Y$；&lt;/li&gt;
&lt;li&gt;$n:m$：不存在函数依赖。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;非平凡的函数依赖&lt;/strong&gt;：$X \rightarrow Y$，但$Y \not\subseteq X$，则称$X \rightarrow Y$是非平凡的函数依赖。&lt;/p&gt;
&lt;p&gt;例如，$姓名 \not\subseteq 学号$，则$学号 \rightarrow 姓名$是一个非平凡的函数依赖。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;平凡的函数依赖&lt;/strong&gt;：如果$X \rightarrow Y$，但$Y \subseteq X$，则称$X \rightarrow Y$是平凡的函数依赖。&lt;/p&gt;
&lt;p&gt;例如，$学号 \subset (学号,课程号)$，则$(学号,课程号) \rightarrow 学号$是一个平凡的函数依赖。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;完全函数依赖&lt;/strong&gt;：在R(U)中，如果$X \rightarrow Y$，并且对于X的任何一个真子集$X&#39;$都有**$X&#39;$不能决定$Y$**，则称$Y$对$X$完全函数依赖，记作$X \stackrel{f}{\longrightarrow} Y$。&lt;/p&gt;
&lt;p&gt;即需要由$X$的所有属性才能决定$Y$的，才能称为完全函数依赖。&lt;/p&gt;
&lt;p&gt;如，$(学号,课程号) \rightarrow 成绩$。&lt;/p&gt;
&lt;p&gt;如果$X$仅包含一个属性，那么此时必为完全函数依赖。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;部分函数依赖&lt;/strong&gt;：如果$X \rightarrow Y$，但&lt;strong&gt;Y不完全函数依赖于X&lt;/strong&gt;，则称Y对X部分函数依赖，记作$X \stackrel{P}{\longrightarrow} Y$。部分函数依赖也称为局部函数依赖。&lt;/p&gt;
&lt;p&gt;如，（学号，班级代号） $\rightarrow$ 姓名，因为学号 $\rightarrow$ 姓名，所以（学号，班级代号） $\stackrel{P}{\longrightarrow}$ 姓名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;传递依赖&lt;/strong&gt;：在$R(U,F)$中（F是U上的一组函数依赖），如果$X \rightarrow Y,\ Y \not\subseteq X,\ Y \rightarrow Z$，则称&lt;strong&gt;Z对X传递依赖&lt;/strong&gt;（$X \rightarrow Z$）。&lt;/p&gt;
&lt;p&gt;即$X \stackrel{f}{\longrightarrow} Y$，且$Y \rightarrow Z$，则$X \rightarrow Z$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;码&lt;/strong&gt;：设$K$为$R(U,F)$中属性的组合，若$K \rightarrow U$，且对于$K$的任何一个真子集$K&#39;$都有$K&#39;$不能决定$U$，则$K$为$R$的候选码。&lt;/p&gt;
&lt;p&gt;即$K \stackrel{f}{\rightarrow} U$，那么K是R的候选码。&lt;/p&gt;
&lt;p&gt;若有多个候选码，则选一个作为主码（主键，主关键字）。候选码通常也称为&lt;strong&gt;候选关键字&lt;/strong&gt;（候选键，键）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;主属性&lt;/strong&gt;和&lt;strong&gt;非主属性&lt;/strong&gt;：&lt;strong&gt;包含在任何一个候选码中&lt;/strong&gt;的属性称为主属性，否则称为非主属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;外码&lt;/strong&gt;：若$R(U)$中的属性或属性组&lt;u&gt;$X$非$R$的码，但$X$是另一个关系的码&lt;/u&gt;，则称$X$为外码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;函数依赖的公理系统&lt;/strong&gt;（Armstrong公理系统）：&lt;/p&gt;
&lt;p&gt;设关系模式$R(U,F)$，其中$U$为属性集，$F是$U$上的一组函数依赖，那么有以下推理规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自反律&lt;/strong&gt;（A1）：若$Y \subseteq X \subseteq U$，则$X \rightarrow Y$为$F$所蕴涵（蕴含）。&lt;/p&gt;
&lt;p&gt;如，（学号，姓名） $\rightarrow$ 姓名是函数依赖所蕴涵的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;增广律&lt;/strong&gt;（A2）：若$X \rightarrow Y$为F所蕴涵，且$Z \subseteq U$,则$XZ \rightarrow YZ$为$F$所蕴涵。&lt;/p&gt;
&lt;p&gt;如，学号 $\rightarrow$ 姓名，班级 $\subseteq$ 学生表，那么（学号，班级） $\rightarrow$ （姓名，班级）是函数依赖所蕴涵的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;传递律&lt;/strong&gt;（A3）：若$X \rightarrow Y,\ Y \rightarrow Z$为$F$所蕴涵，则$X \rightarrow Z$为$F$所蕴涵。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据上述3条推理规则又可推出下述3条推理规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;合并规则&lt;/strong&gt;：若$X \rightarrow Y,\ X \rightarrow Z$，则$X \rightarrow YZ$为F所蕴涵。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;伪传递律&lt;/strong&gt;：若$X \rightarrow Y,\ WY \rightarrow Z$，则$XW \rightarrow Z$为F所蕴涵。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分解规则&lt;/strong&gt;：若$X \rightarrow Y,\ Z \subseteq Y$，则$X \rightarrow Z$为F所蕴涵。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;合并规则和分解规则是两个互逆的规则。即$X \rightarrow Y,\ X \rightarrow Z$，可得$X \rightarrow YZ$；那么$X \rightarrow YZ$，也可得$X \rightarrow Y,\ X \rightarrow Z$（因为$Y,Z \sub YZ$）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;名称&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;条件&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;结论&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;函数依赖&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;元组在$X$上的属性值相等，那么在$Y$上的属性值也相等&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X$函数决定$Y$或$Y$函数依赖于$X$，记作$X \rightarrow Y$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;非平凡的函数依赖&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$，$Y \not\subseteq X$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$是非平凡的函数依赖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;平凡的函数依赖&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$，$Y \subseteq X$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$是平凡的函数依赖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;完全函数依赖&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$，$X&#39; \subset X$，$X&#39; \not\rightarrow Y$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$Y$对$X$完全函数依赖，记作$X \stackrel{f}{\longrightarrow} Y$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;部分函数依赖（局部函数依赖）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$，$X \stackrel{f}{\not\longrightarrow} Y$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$Y$对$X$部分函数依赖，记作$X \stackrel{P}{\longrightarrow} Y$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;传递依赖&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$，$Y \not\subseteq X$，$Y \rightarrow Z$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$Z$对$X$传递依赖&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;名称&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;定义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;码（候选码，候选关键字）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;若$K \stackrel{f}{\rightarrow} U$，则$K$为$R$的候选码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;主属性&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;包含在任何一个候选码中的属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;非主属性&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;不包含在任何一个候选码中的属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;外码&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X$非$R$的码，但$X$是另一个关系的码，则称$X$为外码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Armstrong公理系统：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;定律&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;条件&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;F蕴含&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;自反律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$Y \subseteq X \subseteq U$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;增广律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$，$Z \subseteq U$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$XZ \rightarrow XZ$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;传递律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y,\ Y \rightarrow Z$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Z$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;规则&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;条件&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;F蕴含&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;合并规则&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y,\ X \rightarrow Z$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow YZ$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;伪传递律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y,\ WY \rightarrow Z$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$XW \rightarrow Z$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;分解规则&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y,\ Z \subseteq Y$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Z$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;闭包计算&#34;&gt;闭包计算&lt;/h2&gt;
&lt;p&gt;设关系模式$R&amp;lt;U,F&amp;gt;$，其中$U$为属性集，$F$是$U$上的一组函数依赖。称所有用Armstrong公理从F推出的函数依赖$X \rightarrow A_i$中，$A_i(X,A_i \subseteq U)$的属性集合为$X$的属性闭包，记为$X^{+}_{F}$或$X^{+}$。&lt;/p&gt;
&lt;p&gt;定理：&lt;/p&gt;
&lt;p&gt;设关系模式$R&amp;lt;U,F&amp;gt;$，其中$F$为函数依赖集，$X,Y \subseteq U$，则从$F$推出$X \rightarrow Y$的充要条件是$Y \subseteq X^{+}$。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;属性的闭包计算用于求主键。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如，给定关系$R(U,F)$，其中$U={A,B,C,D,E,H}$，$F={A \rightarrow B, B \rightarrow DH, A \rightarrow H, C \rightarrow E }$。&lt;/p&gt;
&lt;p&gt;先根据$F$选取仅在$\rightarrow$左边出现的属性集（例如，$A$、$C$和$AC$）。根据选取的属性集进行闭包运算（先对$A$进行运算）：&lt;/p&gt;
&lt;p&gt;$$
(A)^{+} \rightarrow (A \ BH)^{+} \rightarrow (AB \ D \ H)^{+} \rightarrow (ABDH)
$$&lt;/p&gt;
&lt;p&gt;此时，$(ABDH)^{+}$无论再怎么推，结果都是$(ABDH)$，说明对$A$的闭包计算已经结束了，结果就是$(ABDH)$。&lt;/p&gt;
&lt;p&gt;而$(ABDH) \neq U$，说明$A$并不是关系$R$的主键。&lt;/p&gt;
&lt;p&gt;而对于$C$的函数依赖仅有$C \rightarrow E$，所以此时应该对$(AC)$进行闭包运算：&lt;/p&gt;
&lt;p&gt;$$
(AC)^{+} \rightarrow (ABDH \ CE)^{+} \rightarrow (ABCDEH)
$$&lt;/p&gt;
&lt;p&gt;此时对$(AC)$的闭包计算结果$(ABCDEH) = U$，说明$(AC)$是关系$R$的主键。&lt;/p&gt;
&lt;h2 id=&#34;关系模式的分解&#34;&gt;关系模式的分解&lt;/h2&gt;
&lt;p&gt;对存在&lt;strong&gt;数据冗余&lt;/strong&gt;、&lt;strong&gt;插入异常&lt;/strong&gt;、&lt;strong&gt;删除异常&lt;/strong&gt;问题的关系模式，应采取&lt;u&gt;将一个关系模式分解为多个关系模式的方法进行处理&lt;/u&gt;（原来存储在一个二维表内的数据就要分散到多个二维表中）。要求是分解后的二维表不能丢失分解前二维表的信息。&lt;/p&gt;
&lt;p&gt;为使分解后的模式保持原模式所满足的特性，其基本要求是模式分解具有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无损连接性；&lt;/li&gt;
&lt;li&gt;保持函数依赖性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;无损连接&#34;&gt;无损连接&lt;/h3&gt;
&lt;p&gt;无损连接性指的是对关系模式分解时，原关系模式下，任一合法的关系实例，在&lt;u&gt;分解之后应能通过&lt;strong&gt;自然连接&lt;/strong&gt;运算恢复&lt;/u&gt;起来。&lt;/p&gt;
&lt;p&gt;设$\rho = \{ R_1&amp;lt;U_1,F_1&amp;gt;,\ R_2&amp;lt;U_2,F_2&amp;gt;,\ \cdots,\ R_k&amp;lt;U_k,F_k&amp;gt; \}$是关系模式$R&amp;lt;U,F&amp;gt;$的一个分解，如果对于$R$的任一满足$F$的关系$r$都有：&lt;/p&gt;
&lt;p&gt;$$
r = \pi_{R1}(r) \Join \pi_{R2}(r) \Join \cdots \Join \pi_{Rk}(r)
$$&lt;/p&gt;
&lt;p&gt;则称这个分解$\rho$是满足依赖集$F$的无损连接。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$\pi()$运算是投影运算。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;例如$\pi_{R1}(r)$，表示关系$r$在$R_1$上的投影。
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\Join$运算是自然连接运算。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;个人理解：&lt;/p&gt;
&lt;p&gt;无损连接性就是指，关系模式拆分后（分成若干个小的关系模式，即$\rho$），$\rho$中的关系模式从总体上看，保持着与$R$一致的连接。$\rho$中的关系模式通过自然连接保持着原本的关系模式。&lt;u&gt;重要的是$rho$中的关系模式可以通过&lt;strong&gt;自然连接&lt;/strong&gt;恢复到原关系模式。&lt;/u&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;验证无损连接的充要条件：&lt;/p&gt;
&lt;p&gt;如果$R$的分解为$\rho = \{R_1,R_2\}$，$F$为$R$所满足的函数依赖集合，则分解$\rho$具有无损连接性的充分必要条件为：&lt;/p&gt;
&lt;p&gt;$$
R_1 \cap R_2 \rightarrow (R_1 - R_2) \\
或 \\
R_1 \cap R_2 \rightarrow (R_2 - R_1)
$$&lt;/p&gt;
&lt;p&gt;无损连接的判定算法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;构造一个$k$行$n$列的表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每一列对应一个属性$A_j$；&lt;/li&gt;
&lt;li&gt;每一行对应分解$rho$中的一个关系模式$R_i&amp;lt;U_i, F_i&amp;gt;$。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若属性$A_j$属于$U_i$，则在第$i$行第$j$列上放符号$a_j$，否则放符号$b_{ij}$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逐个检查$F$中的每一个函数依赖$FD_i$，并修改表中的元素：&lt;/p&gt;
&lt;p&gt;取$F$中一个函数依赖$X_i \rightarrow A_j$（$X_i$要属于$rho$中的任一关系），考虑这些行中第$j$列元素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若其中有$a_j$，则全部改为$a_j$；&lt;/li&gt;
&lt;li&gt;否则全部改为$b_{mj}$，$m$为这些行的行号最小值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若某一行变成了$(a_1, a_2, \cdots, a_n)$，则分解$rho$具有无损连接性，算法终止。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;比较扫描前后，表有无变化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如有变化，则返回第2步；&lt;/li&gt;
&lt;li&gt;否则算法终止，分解$rho$是有损连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例如，关系模式$R&amp;lt;U,F&amp;gt;$，其中，$U = \{ A, B, C \}$，$F = \{ A \rightarrow B, C \rightarrow B \}$。&lt;/p&gt;
&lt;p&gt;判断$\rho = \{ AC, BC \}$是否具有无损连接性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;构造初始表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$R_i$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$A$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$B$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$C$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;AC&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$b_{12}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;BC&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$b_{21}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_2$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_3$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;考察$A \rightarrow B$，将$AC$行的$B$列改为$a_2$：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$R_i$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$A$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$B$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$C$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;AC&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_2$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;BC&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$b_{21}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_2$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_3$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从上表中看出$AC$行为${a_1, a_2, a_3}$，所以判断该关系模式具有无损连接性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;保持函数依赖&#34;&gt;保持函数依赖&lt;/h3&gt;
&lt;p&gt;设有关系模式$R$，$F$是$R$的函数依赖集，$Z$是$R$的一个属性集合，则称$Z$所涉及到的$F^+$中所有函数依赖为$F$在$Z$上的投影，即为$\pi_Z(F)$，有：&lt;/p&gt;
&lt;p&gt;$$
\pi_Z(F) = \{ x \rightarrow y | (x \rightarrow y) \in F^+ 且 xy \subseteq z \}
$$&lt;/p&gt;
&lt;p&gt;设关系模式$R$的一个分解$\rho = \{ R_1&amp;lt;U_1,F_1&amp;gt;,\ R_2&amp;lt;U_2,F_2&amp;gt;,\ \cdots,\ R_k&amp;lt;U_k,F_k&amp;gt; \}$，$F$是$R$的依赖集，如果$F$等价于$\pi_{R1}(F) \cup \pi_{R2}(F) \cup \cdots \cup \pi_{Rk}(F)$，则称分解$\rho$具有依赖保持性。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;该定义中的&amp;quot;等价&amp;quot;并不代表相等，而是$F$中所包含的函数依赖在分解的函数依赖中也被包含，或者在分解的函数依赖中能被推出。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;一个无损连接分解不一定具有依赖保持性；&lt;/li&gt;
&lt;li&gt;一个依赖保持性分解不一定具有无损连接性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;范式&#34;&gt;范式&lt;/h2&gt;
&lt;p&gt;关系数据库中的&lt;u&gt;关系必须满足一定的规范化要求&lt;/u&gt;，对于不同的规范化程度可用范式来衡量。&lt;/p&gt;
&lt;p&gt;&lt;u&gt;范式是符合某一种级别的关系模式的集合&lt;/u&gt;，是衡量关系模式规范化程度的标准，达到范式的关系才是规范化的。&lt;/p&gt;
&lt;p&gt;一个低一级范式的关系模式，通过模式分解可以转换为若干个高一级范式的关系模式的集合，这个过程称为规范化。&lt;/p&gt;
&lt;p&gt;主要有6种范式，高一级范式是在低一级范式的基础上进一步满足一些要求，按要求从低到高分为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;第一范式（1NF）：若关系模式R的&lt;u&gt;每一个分量是不可再分的数据项&lt;/u&gt;，则关系模式R属于第一范式。&lt;/p&gt;
&lt;p&gt;如，关系模式$R&amp;lt;U,F&amp;gt;$：&lt;/p&gt;
&lt;p&gt;$$
U = \{ 学号,姓名,学院,院长,课程号,课程名,成绩 \} \\
F = \{ 学号 \rightarrow 姓名,学号 \rightarrow 学院,学院 \rightarrow 院长,课程号 \rightarrow 课程名,(学号,课程号) \rightarrow 成绩 \}
$$&lt;/p&gt;
&lt;p&gt;1NF可能存在的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数据冗余&lt;/strong&gt;：数据的冗余度大，R中可能出现多个元组在多个属性集中值相同；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;修改异常&lt;/strong&gt;：引起修改操作的不一致性，修改一条记录可能需要修改其他多条记录才能保持数据一致性（由数据冗余引起）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;插入异常&lt;/strong&gt;：主码不能取空值或部分空值，会出现插入异常；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;删除异常&lt;/strong&gt;：本该删除但又客观存在的元组，会出现删除异常。&lt;/p&gt;
&lt;p&gt;即，删除掉的数据可能包含着其他本不该被删除的属性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问题的原因是1NF中可能存在&lt;u&gt;部分函数依赖&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二范式（2NF）：若关系模式$R \in 1NF$，且&lt;u&gt;每一个非主属性完全依赖于码&lt;/u&gt;，则关系模式$R \in 2NF$。&lt;/p&gt;
&lt;p&gt;即当&lt;u&gt;1NF消除了对主键的部分函数依赖后就能满足2NF&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;例如，$学号 \rightarrow 学院$，即$(学号,课程号) \stackrel{P}{\rightarrow} 学院$（部分依赖于码），所以$R \not\in 2NF$。&lt;/p&gt;
&lt;p&gt;&lt;u&gt;模式的分解需要保持函数依赖。&lt;/u&gt;根据$F$，将$R$分解为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$R_1&amp;lt;U_1,F_1&amp;gt;$：&lt;/p&gt;
&lt;p&gt;$$
U_1 = \{ 学号,姓名,学院,院长 \} \\
F_1 = \{ 学号 \rightarrow 姓名,学号 \rightarrow 学院,学院 \rightarrow 院长 \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$R_2&amp;lt;U_2,F_2&amp;gt;$：&lt;/p&gt;
&lt;p&gt;$$
U_2 = \{ 课程号,课程名 \} \\
F_2 = \{ 课程号 \rightarrow 课程名 \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$R_3&amp;lt;U_3,F_3&amp;gt;$：&lt;/p&gt;
&lt;p&gt;$$
U_3 = \{ 学号,课程号,成绩 \} \\
F_3 = \{ (学号,课程号) \rightarrow 成绩 \}&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;则，$R1 \in 2NF$，$R2 \in 2NF$，$R3 \in 2NF$。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2NF可能依然会存在数据冗余、修改异常、插入异常删除异常等问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第三范式（3NF）：若关系模式$R(R \in 2NF)$中&lt;u&gt;任何一个非主属性都不传递函数依赖于码&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;若关系模式$R&amp;lt;U,F&amp;gt;$（$U$为关系集，$F$为函数依赖集）中不存在这样的码$X$，使得：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$X \rightarrow Y(Y \not\rightarrow X)$，&lt;/li&gt;
&lt;li&gt;$Y \rightarrow Z$，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;则关系模式$R \in 3NF$，其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$Y$为属性组，&lt;/li&gt;
&lt;li&gt;$Z(Z \not\subseteq Y)$为非主属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即当&lt;u&gt;2NF消除了非主属性对主键的传递函数依赖&lt;/u&gt;，则称为3NF。&lt;/p&gt;
&lt;p&gt;如，$R_1$中有$学号 \rightarrow 学院$，$学院 \rightarrow 院长$（非主属性&amp;quot;院长&amp;quot;传递依赖于主键&amp;quot;学号&amp;quot;）。可将$R_1$分解为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$R_{11}&amp;lt;U_{11},F_{11}&amp;gt;$：&lt;/p&gt;
&lt;p&gt;$$
U_{11} = \{ 学号,姓名,学院 \} \\
F_{11} = \{ 学号 \rightarrow 姓名, 学号 \rightarrow 学院 \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$R_{12}&amp;lt;U_{12},F_{12}&amp;gt;$：&lt;/p&gt;
&lt;p&gt;$$
U_{12} = \{ 学院,院长 \} \\
F_{12} = \{ 学院 \rightarrow 院长 \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BC范式（BCNF）：关系模式$R&amp;lt;U,F&amp;gt;$属于BCNF（$R$首先得满足3NF），当且仅当其$F$中&lt;u&gt;每个依赖的决定因素必定包含R的某个候选码&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;由BCNF的定义可以得到结论，一个满足BCNF的关系模式有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;满足3NF。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有&lt;u&gt;非主属性&lt;/u&gt;对每一个&lt;u&gt;码&lt;/u&gt;都是&lt;u&gt;完全函数依赖&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;$$
码 \stackrel{f}{\longrightarrow} 非主属性
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有的&lt;u&gt;主属性对每一个&lt;/u&gt;不包含它的码&lt;/u&gt;，也是&lt;u&gt;完全函数依赖&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;没有任何属性完全函数依赖于非码的任何一组属性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个满足BCNF的关系模式R己&lt;u&gt;消除了&lt;strong&gt;插入&lt;/strong&gt;和&lt;strong&gt;删除异常&lt;/strong&gt;&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第四范式（4NF）：&lt;/p&gt;
&lt;p&gt;多值依赖：&lt;/p&gt;
&lt;p&gt;给定的关系模式$R(U,F)$：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$X,Y,Z \subseteq U$，&lt;/li&gt;
&lt;li&gt;$Z=U-X-Y$（$Z$是$X \cup Y$的差集）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当且仅当对$R$的任一关系$r$，给定的一对$(x,z)$值，有一组$Y$的值，这组值仅仅决定于$x$值而与$z$值无关。则关系模式$R$中的多值依赖$X \rightarrow\rightarrow Y$成立。&lt;/p&gt;
&lt;p&gt;平凡的多值依赖：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$X \rightarrow\rightarrow Y$成立，&lt;/li&gt;
&lt;li&gt;$Z = \Phi$，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;则$X \rightarrow\rightarrow Y$为平凡的多值依赖。&lt;/p&gt;
&lt;p&gt;例如，课程$\rightarrow\rightarrow$任课老师，课程$\rightarrow\rightarrow$参考书。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681986736869.png&#34;
	width=&#34;401&#34;
	height=&#34;168&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681986736869_hub94b74037a183c6a89e4bcd8421bb42f_31992_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681986736869_hub94b74037a183c6a89e4bcd8421bb42f_31992_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;多值依赖表示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;238&#34;
		data-flex-basis=&#34;572px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;4NF定义：&lt;/p&gt;
&lt;p&gt;设有一关系模式$R(U,F)$是1NF，如果对于$R$的每个&lt;u&gt;非平凡多值依赖&lt;/u&gt;$X \rightarrow\rightarrow Y(Y \not\subseteq X)$，&lt;u&gt;$X$都包含了$R$的一个候选码&lt;/u&gt;，则称$R$是第四范式，记为4NF。&lt;/p&gt;
&lt;p&gt;例如，课程$\rightarrow\rightarrow$任课老师，课程$\rightarrow\rightarrow$参考书都是非平凡多值依赖，而课程不是码，所以不属于4NF。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第五范式（5NF）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;范式之间的关系：&lt;/p&gt;
&lt;p&gt;$$
5NF \sub 4NF \sub BCNF \sub 3NF \sub 2NF \sub 1NF
$$&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681894653450.png&#34;
	width=&#34;564&#34;
	height=&#34;309&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681894653450_hufd0c331a204cb2191b602cbf89c9254e_19807_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681894653450_hufd0c331a204cb2191b602cbf89c9254e_19807_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;规范化范式的包含关系&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;438px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;3NF和BCNE它们是进行规范化的主要目标。&lt;/p&gt;
&lt;p&gt;1NF到4NF之间的转换关系：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;范式&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;转换关系&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1NF&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;每一个分量是不可再分的数据项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2NF&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1NF消除了部分函数依赖后满足2NF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3NF&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2NF消除了非主属性对码的传递函数依赖后满足3NF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;BCNF&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;3NF消除了主属性对码的部分和传递函数依赖后满足BCNF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4NF&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;BCNF消除非平凡且非函数依赖的多值依赖后满足4NF&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681988070233.png&#34;
	width=&#34;288&#34;
	height=&#34;303&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681988070233_huc82f8c088bb0c067181a613d8b65e62c_36441_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1681988070233_huc82f8c088bb0c067181a613d8b65e62c_36441_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;规范化步骤&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;95&#34;
		data-flex-basis=&#34;228px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;几种范式及其分解的性质：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;性质&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;3NF&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;BCNF&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;4NF&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;消除函数依赖带来冗余&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;消除多值函数依赖带来冗余&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;保持函数依赖&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;保持多值函数依赖&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h1 id=&#34;数据库设计&#34;&gt;数据库设计&lt;/h1&gt;
&lt;p&gt;新奥尔良（New Orleans）法式目前公认的数据库设计方法，它将数据库设计分为以下几个阶段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户需求分析&lt;/li&gt;
&lt;li&gt;概念结构设计&lt;/li&gt;
&lt;li&gt;逻辑结构设计&lt;/li&gt;
&lt;li&gt;物理结构设计&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这几个阶段之后是与数据库建立和运行有关的阶段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据库实施&lt;/li&gt;
&lt;li&gt;数据库运行和维护&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682505975157.png&#34;
	width=&#34;382&#34;
	height=&#34;711&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682505975157_hu7950d0a7bbf6248186699719c01d30ad_79693_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682505975157_hu7950d0a7bbf6248186699719c01d30ad_79693_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;数据库设计步骤&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;53&#34;
		data-flex-basis=&#34;128px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;需求分析&#34;&gt;需求分析&lt;/h2&gt;
&lt;p&gt;需求分析是项目确定后，对数据库应用系统所要设计的&lt;u&gt;内容（数据）&lt;/u&gt;和&lt;u&gt;功能（行为）&lt;/u&gt;的整理和描述，是以用户的角度来认识系统。&lt;/p&gt;
&lt;p&gt;需求分析是后面几个阶段，&lt;u&gt;逻辑结构设计&lt;/u&gt;、&lt;u&gt;物理结构设计&lt;/u&gt;以及&lt;u&gt;应用程序设计&lt;/u&gt;的依据。&lt;/p&gt;
&lt;p&gt;需求分析将收集到的零碎的、局部的数据分析整理后，建立&lt;u&gt;需求说明文档&lt;/u&gt;、&lt;u&gt;数据字典&lt;/u&gt;和&lt;u&gt;数据流程图&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;需求分析还包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据流分析：是对事务处理所需的原始数据的收集，及经过处理后所得数据及其流向。&lt;/p&gt;
&lt;p&gt;使用数据流图（DFD）表示。DFD能指出数据的流向和需要进行的事物处理（不涉及如何处理）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据字典：是关于数据库中数据的描述，即元数据（不是数据本身）。&lt;/p&gt;
&lt;p&gt;数据字典包括5个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据项；&lt;/li&gt;
&lt;li&gt;数据结构；&lt;/li&gt;
&lt;li&gt;数据流；&lt;/li&gt;
&lt;li&gt;数据存储；&lt;/li&gt;
&lt;li&gt;加工。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;u&gt;系统需求说明书是需求分析阶段的成果&lt;/u&gt;，主要包括&lt;u&gt;数据流图&lt;/u&gt;、&lt;u&gt;数据字典&lt;/u&gt;、&lt;u&gt;各种说明性表格&lt;/u&gt;、&lt;u&gt;统计输出表和系统功能结构图&lt;/u&gt;等。&lt;/p&gt;
&lt;p&gt;需求分析阶段的工作：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682560887456.png&#34;
	width=&#34;646&#34;
	height=&#34;291&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682560887456_hub24d924f6ecdb59b0c05cde9f6a94c8c_58795_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682560887456_hub24d924f6ecdb59b0c05cde9f6a94c8c_58795_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;需求分析阶段的工作步骤&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;221&#34;
		data-flex-basis=&#34;532px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;概念结构设计&#34;&gt;概念结构设计&lt;/h2&gt;
&lt;p&gt;概念设计阶段的目标是产生整体数据库概念结构，即概念模型，它是与DBMS无关的。&lt;/p&gt;
&lt;p&gt;概念结构设计的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自顶向下&lt;/li&gt;
&lt;li&gt;自底向上&lt;/li&gt;
&lt;li&gt;逐步扩张&lt;/li&gt;
&lt;li&gt;混合策略（自顶向下和自底向上相结合）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;概念结构是对现实世界的一种抽象，从数据库设计角度看，主要是数据抽象，一般有如下3种数据抽象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分类&lt;/li&gt;
&lt;li&gt;聚集&lt;/li&gt;
&lt;li&gt;概括&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;局部视图设计就是对某个局部应用设计其分一R图，也称局部E-R图。其基本步骤如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682560993863.png&#34;
	width=&#34;717&#34;
	height=&#34;341&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682560993863_huf62446c235f8abd7d4a5d741b96b438b_65906_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682560993863_huf62446c235f8abd7d4a5d741b96b438b_65906_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;概念结构设计的工作步骤&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;210&#34;
		data-flex-basis=&#34;504px&#34;
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确定局部结构范围；&lt;/li&gt;
&lt;li&gt;定义实体；&lt;/li&gt;
&lt;li&gt;联系定义；&lt;/li&gt;
&lt;li&gt;属性分配。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;概念模型的建立采用E-R模型。&lt;/p&gt;
&lt;h3 id=&#34;e-r-模型&#34;&gt;E-R 模型&lt;/h3&gt;
&lt;p&gt;E-R模型用E-R图（ERD）表示，E-R图有以下几个成分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实体&lt;/strong&gt;：用&lt;strong&gt;矩形&lt;/strong&gt;表示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;联系&lt;/strong&gt;：用&lt;strong&gt;棱形&lt;/strong&gt;表示，并用无向边分别与有关实体连接起来，同时在无向边标注联系的类型（$1:1$，$1:n$ 或 $m:n$）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;属性&lt;/strong&gt;：用&lt;strong&gt;椭圆形&lt;/strong&gt;表示，并用无向边将其与相应的实体连接起来&lt;/p&gt;
&lt;p&gt;E-R模型中的属性有以下分类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;简单属性和复合属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单属性是原子的、不可再分的；&lt;/li&gt;
&lt;li&gt;复合属性可以细分为更小的部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单值属性和多值属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单值属性是一个属性对应一个值；&lt;/li&gt;
&lt;li&gt;多值属性是一个属性对应一组值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NULL属性：实体在某个属性上没有值或属性值未知时，使用NULL值表示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;派生属性：派生属性可以从其他属性得来（通过运算等方式求出）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扩充的E-R模型（用来表达更多具有特殊语义的成分）有以下成分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;弱实体&lt;/strong&gt;：使用&lt;strong&gt;双线矩形框&lt;/strong&gt;表示。将需要依赖其他实体存在的实体。&lt;/p&gt;
&lt;p&gt;实体间的所有（Ownership，拥有）关系代表一个实体对另一些实体具有很强的依赖关系，即一个实体的存在必须以另一个实体为前提。&lt;/p&gt;
&lt;p&gt;例如职工与家属的联系，家属总是属于某职工的（在关系模式中需要依赖职工而存在），所以家属是弱实体。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特殊化&lt;/strong&gt;：将一个实体集&lt;u&gt;按照某些特性区分为几个&lt;strong&gt;子实体&lt;/strong&gt;&lt;/u&gt;。这种从普遍到特殊的过程即为特殊化。&lt;/p&gt;
&lt;p&gt;子实体的图形表示如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1684564987147.png&#34;
	width=&#34;256&#34;
	height=&#34;145&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1684564987147_huad14f3e1152e9df0e94e04c64131c1cf_1087_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1684564987147_huad14f3e1152e9df0e94e04c64131c1cf_1087_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;子实体&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;176&#34;
		data-flex-basis=&#34;423px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;E-R图中的主要构件（包含扩充的E-R模型成分）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682508598814.png&#34;
	width=&#34;1035&#34;
	height=&#34;391&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682508598814_hub0bc3034b48557bb84109435ab8e458e_191424_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682508598814_hub0bc3034b48557bb84109435ab8e458e_191424_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;E-R图中的主要构件&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;264&#34;
		data-flex-basis=&#34;635px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;建立概念结构模型&#34;&gt;建立概念结构模型&lt;/h3&gt;
&lt;p&gt;建立概念结构模型的步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;选择局部应用：&lt;/p&gt;
&lt;p&gt;需求分析阶段得到的大量数据分散杂乱，许多数据会应用于不同的处理，数据与数据之间关联关系也较为复杂。要最终&lt;u&gt;确定实体、属性和联系，必须根据数据流图这一线索理清数据&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;数据流图是对业务处理过程从高层到底层的一级抽象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高层抽象流图一般反映系统的概貌，对数据的引用较为笼统；&lt;/li&gt;
&lt;li&gt;底层又可能过于细致，不能体现数据的关联关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此要&lt;u&gt;选择适当层次的数据流图，让这一层的每一部分对应一个局部应用，实现某一项功能。从这一层入手，就能很好地设计&lt;strong&gt;分E-R图&lt;/strong&gt;&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逐一设计分E-R图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;E-R图合并：&lt;/p&gt;
&lt;p&gt;根据局部应用设计好各局部E-R图之后，就可以对各分E-R图进行合并。&lt;/p&gt;
&lt;p&gt;合并的目的在于，在合并过程中解决分E-R图中相互存在的冲突。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;分E-R图之间的冲突主要有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;属性冲突&lt;/strong&gt;：同一属性在不同的分E-R图上的属性类型、取值范围和数据单位等可能会不一致。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;命名冲突&lt;/strong&gt;：相同意义的属性在不同的分E-R图上可能会有不同的命名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结构冲突&lt;/strong&gt;：同一实体在不同的分E-R图中可能会有不同的属性；同一对象在某一分E-R图中被抽象为实体，而在另一分E-R图中又可能被抽象为属性，反之亦然。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;逻辑结构设计&#34;&gt;逻辑结构设计&lt;/h2&gt;
&lt;p&gt;逻辑结构设计就是在概念结构设计的基础上进行数据模型设计，可以是层次模型、网状模型和关系模型。&lt;/p&gt;
&lt;p&gt;通常是把概念模型转换成为&lt;u&gt;某个具体的数据库管理系统所支持的结构数据模型&lt;/u&gt;（与DBMS有关）。即，将概念结构设计所得的E-R模型转换成关系模式。&lt;/p&gt;
&lt;p&gt;逻辑结构设计的工作步骤：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682577339219.png&#34;
	width=&#34;581&#34;
	height=&#34;296&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682577339219_hu0e28af6a5a7453a0a5eb6666d48c94c7_44563_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682577339219_hu0e28af6a5a7453a0a5eb6666d48c94c7_44563_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;逻辑结构设计的工作步骤&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;196&#34;
		data-flex-basis=&#34;471px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;e-r-模型转换关系模式&#34;&gt;E-R 模型转换关系模式&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;实体向关系模式的转换：&lt;/p&gt;
&lt;p&gt;将E-R图中的实体逐一转换成为一个关系模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实体名：对应关系模式的名称；&lt;/li&gt;
&lt;li&gt;实体的属性：转换成关系模式的属性；&lt;/li&gt;
&lt;li&gt;实体标识符：关系的码（键）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;联系向关系模式的转换：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一对一联系的转换：&lt;/p&gt;
&lt;p&gt;有两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;方式1：将联系转换成一个独立的关系模式，关系模式的名称取联系的名称，关系模式的属性包括该联系所关联的两个实体的码及联系的属性，关系的码取自任一方实体的码。&lt;/p&gt;
&lt;p&gt;那么一个一对一联系需要转换成三个关系模式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方式2（一般使用该方式）：将联系归并到关联的两个实体的任一方，给待归并的一方实体属性集中增加另一方实体的码和该联系的属性即可，归并后的实体码保持不变。&lt;/p&gt;
&lt;p&gt;一个一对一联系仅需转换成两个关系模式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682562445900.png&#34;
	width=&#34;304&#34;
	height=&#34;358&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682562445900_hu39b33fe28157809884f3b45df834a34e_28041_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682562445900_hu39b33fe28157809884f3b45df834a34e_28041_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;联系向关系模式的转换示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;84&#34;
		data-flex-basis=&#34;203px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;方式1：&lt;/p&gt;
&lt;p&gt;厂长（&lt;strong&gt;姓名&lt;/strong&gt;，性别，年龄）&lt;/p&gt;
&lt;p&gt;工厂（&lt;strong&gt;厂号&lt;/strong&gt;，厂名，地点）&lt;/p&gt;
&lt;p&gt;管理（（厂长）&lt;strong&gt;姓名&lt;/strong&gt;，厂号，任期）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;粗体代表该关系模式的码。管理的码可以为姓名或厂号。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方式2：&lt;/p&gt;
&lt;p&gt;厂长（姓名，性别，年龄）&lt;/p&gt;
&lt;p&gt;工厂（厂号，厂名，地点，（厂长）姓名，任期）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一对多联系的转换：&lt;/p&gt;
&lt;p&gt;两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方式1：将联系转换成一个独立的关系模式，关系模式的名称取联系的名称，关系模式的属性取该联系所关联的两个实体的码及联系的属性，&lt;u&gt;关系的码是多方实体的码&lt;/u&gt;；&lt;/li&gt;
&lt;li&gt;方式2（一般使用该方式）：将联系&lt;u&gt;归并到关联的两个实体的多方&lt;/u&gt;，给待归并的多方实体属性集中增加一方实体的码和该联系的属性即可，归并后的多方实体码保持不变。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682563544291.png&#34;
	width=&#34;315&#34;
	height=&#34;361&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682563544291_hue1cce8af0395e2bd704f6df0a3e3321e_30915_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682563544291_hue1cce8af0395e2bd704f6df0a3e3321e_30915_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;一对多联系转换的例子&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;87&#34;
		data-flex-basis=&#34;209px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;方式1:&lt;/p&gt;
&lt;p&gt;仓库（&lt;strong&gt;仓库号&lt;/strong&gt;，地点，面积）&lt;/p&gt;
&lt;p&gt;商品（&lt;strong&gt;货号&lt;/strong&gt;，商品名，价格）&lt;/p&gt;
&lt;p&gt;仓储（&lt;strong&gt;货号&lt;/strong&gt;，仓库号，数量）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方式2：&lt;/p&gt;
&lt;p&gt;仓库（&lt;strong&gt;仓库号&lt;/strong&gt;，地点，面积）&lt;/p&gt;
&lt;p&gt;商品（&lt;strong&gt;货号&lt;/strong&gt;，商品名，价格，仓库号，数量）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多对多联系的转换：&lt;/p&gt;
&lt;p&gt;多对多联系只能转换成一个独立的关系模式，关系模式的名称取联系的名称，关系模式的属性取该联系所关联的两个多方实体的码及联系的属性，关系的码是多方实体的码构成的属性组。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682564018777.png&#34;
	width=&#34;327&#34;
	height=&#34;373&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682564018777_hu8cf40dc2a076405a9cb5ca4646519d5e_36334_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/uTools_1682564018777_hu8cf40dc2a076405a9cb5ca4646519d5e_36334_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;多对多联系转换的示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;87&#34;
		data-flex-basis=&#34;210px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;转换成：&lt;/p&gt;
&lt;p&gt;学生（&lt;strong&gt;学号&lt;/strong&gt;，姓名，性别，年龄）&lt;/p&gt;
&lt;p&gt;课程（&lt;strong&gt;课程号&lt;/strong&gt;，课程名，学时）&lt;/p&gt;
&lt;p&gt;选修（&lt;strong&gt;（学号，课程号）&lt;/strong&gt;，成绩）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;关系模式的规范化&#34;&gt;关系模式的规范化&lt;/h3&gt;
&lt;p&gt;转换后的关系模式可能存在数据冗余、更新异常等问题，所以需要进一步的规范化处理。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;根据语义确定各关系模式的数据依赖（函数依赖）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据数据依赖确定关系模式的范式。判定关系模式是否达到了3NF或4NF。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果关系模式不符合要求，要根据关系模式的分解算法对其进行分解，达到3NF、BCNF或4NF。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关系模式的评价及修正。&lt;/p&gt;
&lt;p&gt;根据规范化理论对关系模式分解之后，就可以在理论上消除冗余和更新异常。但根据处理要求，可能还需要增加部分冗余以满足处理要求，这就需要做部分关系模式的处理，分解、合并或增加冗余属性，提高存储效率和处理效率。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;事务管理&#34;&gt;事务管理&lt;/h1&gt;
&lt;p&gt;事务是一个操作序列，这些操作“要么都做，要么都不做”。&lt;/p&gt;
&lt;p&gt;事务和程序是两个不同的概念，一般一个程序可包含多个事务。&lt;/p&gt;
&lt;p&gt;在SQL语言中，事务定义的语句有以下三条。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BEGIN TRANSACTION&lt;/code&gt;：事务开始。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;COMMIT&lt;/code&gt;：事务提交。&lt;/p&gt;
&lt;p&gt;该操作表示事务成功地结束，它将通知事务管理器该事务的&lt;u&gt;所有更新操作现在可以被提交或永久地保留&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ROLLBACK&lt;/code&gt;：事务回滚。&lt;/p&gt;
&lt;p&gt;该操作表示事务非成功地结束，它将通知事务管理器&lt;u&gt;出故障&lt;/u&gt;了，数据库可能处于不一致状态，该事务的&lt;u&gt;所有更新操作必须回滚或撤销&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;事务的ACID性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;原子性&lt;/strong&gt;（Atomicity）：事务是原子的，要么都做，要么都不做。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;一致性&lt;/strong&gt;（Consistency）：事务执行的结果必须保证数据库从一个一致性状态变到另一个一致性状态。&lt;/p&gt;
&lt;p&gt;因此，当数据库只包含成功事务提交的结果时，称数据库处于一致性状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;隔离性&lt;/strong&gt;（Isolation）：事务相互隔离。&lt;/p&gt;
&lt;p&gt;当多个事务并发执行时，任一事务的更新操作直到其成功提交的整个过程，对其他事务都是不可见的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;持久性&lt;/strong&gt;（Durability）：一旦事务成功提交，即使数据库崩溃，其对数据库的更新操作也将永久有效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;数据库故障&#34;&gt;数据库故障&lt;/h1&gt;
&lt;p&gt;在数据库的运行过程中，难免会出现计算机系统的软、硬件故障，这些故障会影响数据库中数据的正确性，甚至破坏数据库，使数据库中的全部或部分数据丢失。因此，数据库的关键技术在于建立冗余数据，即备份数据。如何在系统出现故障后能够及时地使数据库恢复到故障前的正确状态，就是数据库恢复技术。&lt;/p&gt;
&lt;p&gt;故障类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;事务内部故障&lt;/strong&gt;：有的可以通过事务程序本身发现；有的是非预期的，不能由事务程序处理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统故障&lt;/strong&gt;（软故障）：是指造成系统停止运行的任何事件，使得系统要重新启动，例如CPU故障、操作系统故障和突然停电等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;介质故障&lt;/strong&gt;（硬故障）：如磁盘损坏、磁头碰撞和瞬时强磁干扰。此类故障发生的几率小，但破坏性最大。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;计算机病毒&lt;/strong&gt;：计算机病毒是一种人为的故障和破坏，是在计算机程序中插入的破坏，计算机功能或者数据可以繁殖和传播的一组计算机指令或程序代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;备份方法&#34;&gt;备份方法&lt;/h2&gt;
&lt;p&gt;恢复的基本原理是“建立数据冗余”（重复存储）。建立冗余数据的方法是进行&lt;u&gt;数据转储&lt;/u&gt;和&lt;u&gt;登记日志文件&lt;/u&gt;，分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;静态转储和动态转储：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;静态转储&lt;/strong&gt;：在转储期间不允许对数据库进行任何存取、修改操作；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;动态转储&lt;/strong&gt;：在转储期间允许对数据库进行存取、修改操作。&lt;/p&gt;
&lt;p&gt;动态转储和用户事务可并发执行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;海量转储和增量转储：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;海量转储&lt;/strong&gt;：指每次转储全部数据；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;增量转储&lt;/strong&gt;：指每次只转储上次转储后更新过的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;日志文件&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;在事务处理的过程中，DBMS把以下操作写入日志文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;事务开始、事务结束；&lt;/li&gt;
&lt;li&gt;对数据库的插入、删除和修改。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一旦发生故障，DBMS的恢复子系统利用日志文件撤销事务对数据库的改变，回退到事务的初始状态。因此，DBMS利用日志文件来进行事务故障恢复和系统故障恢复，并可协助后备副本进行介质故障恢复。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;恢复&#34;&gt;恢复&lt;/h2&gt;
&lt;p&gt;事务恢复有以下3个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;反向扫描文件日志（即从最后向前扫描日志文件），查找该事务的更新操作。&lt;/li&gt;
&lt;li&gt;对事务的更新操作执行逆操作。&lt;/li&gt;
&lt;li&gt;继续反向扫描日志文件，查找该事务的其他更新操作，并做同样的处理，直到事务的开始标志。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;并发控制&#34;&gt;并发控制&lt;/h1&gt;
&lt;p&gt;所谓并发操作，是指在多用户共享的系统中许多用户可能同时对同一数据进行操作。并发操作带来的问题是数据的不一致性，主要有三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;丢失更新&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不可重复读&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;读脏数据&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其主要原因是事务的并发操作破坏了事务的隔离性。DBMS的并发控制子系统负责协调并发事务的执行，保证数据库的完整性不受破坏，避免用户得到不正确的数据。&lt;/p&gt;
&lt;h2 id=&#34;封锁&#34;&gt;封锁&lt;/h2&gt;
&lt;p&gt;并发控制的主要技术是封锁。基本封锁的类型有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;排它锁（X锁或写锁）：若事务T对数据对象A加上X锁，则&lt;u&gt;只允许T读取和修改A，其他事务都不能再对A加任何类型的锁&lt;/u&gt;，直到T释放A上的锁。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;共享锁（S锁或读锁）：若事务T对数据对象A加上S锁，则&lt;u&gt;只允许T读取A，但不能修改A，其他事务只能再对A加S锁&lt;/u&gt;，直到T释放A上的S锁。&lt;/p&gt;
&lt;p&gt;这就保证了其他事务可以读A，但在T释放A上的S锁之前不能对A进行任何修改。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;分布式数据库&#34;&gt;分布式数据库&lt;/h1&gt;
&lt;p&gt;分布式数据库系统是指数据存放在计算机网络的不同场地的计算机中，每一场地都有自治处理能力并能完成局部应用；而每一场地也参与（至少一种）全局应用程序的执行，全局应用程序可通过网络通信访问系统中多个场地的数据。其定义强调分布性和逻辑整体性两点。&lt;/p&gt;
&lt;p&gt;分布式数据库中有以下基本概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分片透明&lt;/strong&gt;：指用户或应用程序不需要知道逻辑上访问的表具体是怎么分块存储的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复制透明&lt;/strong&gt;：指采用复制技术的分布方法，用户不需要知道数据是复制到哪些节点，如何复制的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;位置透明&lt;/strong&gt;：指用户无须知道数据存放的物理位置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逻辑透明&lt;/strong&gt;：指用户或应用程序无需知道局部场地使用的是哪种数据模型。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具有以下性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;共享性&lt;/strong&gt;：数据存储在不同的结点数据共享。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自治性&lt;/strong&gt;：指每结点对本地数据都能独立管理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可用性&lt;/strong&gt;：指当某一场地故障时，系统可以使用其他场地上的副本而不至于使整个系统瘫痪。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布性&lt;/strong&gt;：指数据在不同场地上的存储。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;存储过程&#34;&gt;存储过程&lt;/h1&gt;
&lt;p&gt;存储过程（Stored Procedure）是在大型数据库系统中，一组为了完成特定功能的SQL语句集，它存储在数据库中，一次编译后永久有效，用户通过指定存储过程的名字并给出参数（如果该存储过程带有参数）来执行它。&lt;/p&gt;
&lt;p&gt;存储过程是数据库所提供的一种数据库对象，通过存储过程定义一段代码，提供给应用程序调用来执行。从安全性的角度考虑，更新数据时，通过提供存储过程正第三方调用，将需要更新的数据传入存储过程，而在存储过程内部用代码分别对需要的多个表进行更新，从而避免了向第三方提供系统的表结构，保证了系统的数据安全。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>MyBatisPlus</title>
        <link>https://blog.linner.asia/p/mybatisplus/</link>
        <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
        
        <guid>https://blog.linner.asia/p/mybatisplus/</guid>
        <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;MybatisPlus（简称MP）是基于MyBatis框架基础上开发的增强型工具（依然可以使用MyBatis里的工具），旨在简化开发、提供效率。更多详情请访问&lt;a class=&#34;link&#34; href=&#34;https://mp.baomidou.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MyBatisPlus官网&lt;/a&gt;（官网有两个地址，&lt;a class=&#34;link&#34; href=&#34;https://mp.baomidou.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mp.baomidou.com/&lt;/a&gt;或&lt;a class=&#34;link&#34; href=&#34;https://mybatis.plus&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mybatis.plus&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;基于Spring使用MybatisPlus，在构建Spring工程时需要勾选MySQL和MyBatis相关技术。由于Spring并未收录MP，所以需要手动导入坐标：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.baomidou&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mybatis-plus-boot-starter&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.4.1&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 可选： --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.alibaba&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;druid&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.1.16&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在&lt;code&gt;application.yml&lt;/code&gt;（配置文件）中配置数据库信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spring&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;datasource&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;com.alibaba.druid.pool.DruidDataSource&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;driver-class-name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;com.mysql.cj.jdbc.Driver&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jdbc:mysql://localhost:3306/mybatisplus_db?serverTimezone=Asia/Shanghai &lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;username&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;root&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;password&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;root&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;dao接口&#34;&gt;DAO接口&lt;/h1&gt;
&lt;p&gt;使用MP编写DAO接口，可以直接继承&lt;code&gt;BaseMapper&amp;lt;&amp;gt;&lt;/code&gt;（该接口内置了许多DAO方法）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Mapper&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserDao&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; BaseMapper&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;User&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;{&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;编写引导类：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MybatisplusApplication&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        SpringApplication&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;MybatisplusApplication&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;DAO接口要想被容器扫描到，有两种方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在DAO接口上添加&lt;code&gt;@Mapper&lt;/code&gt;注解，并且确保DAO处在引导类所在包或其子包中。&lt;/li&gt;
&lt;li&gt;在引导类上添加&lt;code&gt;@MapperScan&lt;/code&gt;注解，其属性为所要扫描的DAO所在包：&lt;code&gt;@MapperScan(&amp;quot;com.linner.dao&amp;quot;)&lt;/code&gt;（可以不写&lt;code&gt;@Mapper&lt;/code&gt;）。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>MyBatis</title>
        <link>https://blog.linner.asia/p/mybatis/</link>
        <pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate>
        
        <guid>https://blog.linner.asia/p/mybatis/</guid>
        <description>&lt;h1 id=&#34;mybatis-介绍&#34;&gt;MyBatis 介绍&lt;/h1&gt;
&lt;p&gt;MyBatis 是一款优秀的持久层框架，用于简化 JDBC 开发。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;持久层：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;是负责将数据到保存到数据库的那一层代码。即，操作数据库的Java代码为持久层。&lt;/p&gt;
&lt;p&gt;而Mybatis就是对JDBC代码进行了封装。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;持久层是JavaEE三层架构中的一层。&lt;/p&gt;
&lt;p&gt;JavaEE三层架构：表现层、业务层、持久层。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;框架：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;框架就是一个半成品软件，是一套可重用的、通用的、软件基础代码模型。&lt;/li&gt;
&lt;li&gt;使用框架的好处：在框架的基础之上构建软件编写更加高效、规范、通用、可扩展。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用JDBC存在以下问题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;硬编码&lt;/p&gt;
&lt;p&gt;手动注册驱动、获取连接、SQL语句等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作繁琐&lt;/p&gt;
&lt;p&gt;手动设置参数、封装结果集等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用Mybatis：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;硬编码可以配置到配置文件。&lt;/li&gt;
&lt;li&gt;操作繁琐的地方Mybatis都自动完成。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;配置-mybatis&#34;&gt;配置 Mybatis&lt;/h1&gt;
&lt;p&gt;使用Maven导入Mybatis。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;code&gt;pom.xml&lt;/code&gt; 配置文件中导入坐标：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--mybatis 依赖--&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.mybatis&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mybatis&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.5.5&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--mysql 驱动--&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mysql-connector-java&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.1.46&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编写 &lt;code&gt;mybatis-config.xml&lt;/code&gt; 文件：&lt;/p&gt;
&lt;p&gt;在模块下的 &lt;code&gt;resources&lt;/code&gt; 目录下创建Mybatis的配置文件 &lt;code&gt;mybatis-config.xml&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE configuration
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        PUBLIC &amp;#34;-//mybatis.org//DTD Config 3.0//EN&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        &amp;#34;http://mybatis.org/dtd/mybatis-3-config.dtd&amp;#34;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 需要注意配置标签的前后顺序(按照MyBatis官方文档目录中的顺序去定义) --&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 别名或包扫描 --&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;typeAliases&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- name属性的值是实体类所在包 --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 包扫描后,别名默认为类名(不区分大小写) --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 使用别名可以简化映射配置文件中 resultType 属性值的编写 --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;package.name.pojo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/typeAliases&amp;gt;&lt;/span&gt;

  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    environments:配置数据库的连接环境信息,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;      可以配置多个environment信息,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;      通过对应的default属性切换不同的environment
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;  --&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;environments&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;default=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;development&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 可以配置多个&amp;lt;environment&amp;gt; --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 使用 id 给每段环境起名 --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 在 &amp;lt;environments&amp;gt; 中使用 default=&amp;#39;environment-id&amp;#39; 来指定使用哪儿段配置 --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;environment&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;development&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;transactionManager&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JDBC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dataSource&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;POOLED&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;          数据库连接信息
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;          注意url、username和password
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        --&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;driver&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;com.mysql.jdbc.Driver&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jdbc:mysql:///mybatis1?useSSL=false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;root&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1234&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dataSource&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/environment&amp;gt;&lt;/span&gt;

    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;environment&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;transactionManager&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JDBC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dataSource&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;POOLED&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 数据库连接信息 --&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;driver&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;com.mysql.jdbc.Driver&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jdbc:mysql:///mybatis2?useSSL=false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;root&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1234&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dataSource&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/environment&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/environments&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mappers&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 加载映射文件 --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- ...... --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 在下节中讲解 --&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mappers&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;更多MyBatis配置请查看官方文档：&lt;a class=&#34;link&#34; href=&#34;https://mybatis.net.cn/configuration.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MyBatis文档——配置&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;使用-mybatis&#34;&gt;使用 Mybatis&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;编写 &lt;code&gt;Mapper&lt;/code&gt;类&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;java&lt;/code&gt; 目录下创建与 &lt;code&gt;pojo&lt;/code&gt; 对应的 &lt;code&gt;Mapper&lt;/code&gt;接口 &lt;code&gt;ClassNameMapper.java&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ClassNameMapper&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;// 方法
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编写 SQL 映射文件&lt;/p&gt;
&lt;p&gt;在模块的 &lt;code&gt;resources&lt;/code&gt; 目录下创建与 &lt;code&gt;pojo&lt;/code&gt; 对应的映射配置文件 &lt;code&gt;ClassNameMapper.xml&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE mapper PUBLIC &amp;#34;-//mybatis.org//DTD Mapper 3.0//EN&amp;#34; &amp;#34;http://mybatis.org/dtd/mybatis-3-mapper.dtd&amp;#34;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- namespace:名称空间 --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mapper&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;namespace=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;package.name.mapper&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 相应的SQL语句（XML映射） --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mapper&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在Myb
atis的配置文件 &lt;code&gt;mybatis-config.xml&lt;/code&gt; 中加载映射文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接加载映射文件：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mappers&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mapper&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resource=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;com/abc/mapper/ClassNameMapper.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mappers&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用这种方式加载映射文件，多个映射文件需要定义多个 &lt;code&gt;&amp;lt;mapper&amp;gt;&lt;/code&gt;，过于繁琐。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Mapper代理方式（推荐）：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果 &lt;code&gt;Mapper&lt;/code&gt;接口名称和SQL映射文件名称相同，并在同一目录下，则可以使用包扫描的方式简化SQL映射文件的加载。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mappers&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;com.abc.mapper&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mappers&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：使用Mapper代理方式加载映射文件，&lt;code&gt;Mapper&lt;/code&gt;接口与其对应的配置文件，它们的路径（包名）要相同。&lt;/p&gt;
&lt;p&gt;即，在java目录下的 &lt;code&gt;Mapper&lt;/code&gt;接口的包名，要和映射配置文件在 &lt;code&gt;resources&lt;/code&gt;下的路径要一致。&lt;/p&gt;
&lt;p&gt;如 &lt;code&gt;Mapper&lt;/code&gt;接口的包名为 &lt;code&gt;com.abc.mapper&lt;/code&gt;，那么其映射配置文件的路径则为 &lt;code&gt;com/abc/mapper&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;了解 &lt;code&gt;Maven&lt;/code&gt;项目结构，请查看：&lt;a class=&#34;link&#34; href=&#34;https://linna-cy.github.io/Maven/#maven%E6%A0%87%E5%87%86%E5%8C%96%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Maven标准化项目结构&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;实例&#34;&gt;实例&lt;/h2&gt;
&lt;p&gt;在 Mapper 接口中定义方法，方法名就是SQL映射文件中SQL语句的id，并保持参数类型和返回值类型一致。&lt;/p&gt;
&lt;p&gt;例如，为 &lt;code&gt;User&lt;/code&gt;对象定义 &lt;code&gt;selectAll()&lt;/code&gt;和 &lt;code&gt;selectById()&lt;/code&gt;方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;创建 &lt;code&gt;User&lt;/code&gt;表:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; mybatis;
USE mybatis;

&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EXISTS&lt;/span&gt; tb_user;

&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;table&lt;/span&gt; tb_user (
    id INT &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; AUTO_INCREMENT,
    username VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;),
    password VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;),
    gender CHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
    addr VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
);

&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tb_user &lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;zhangsan&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;男&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;北京&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tb_user &lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;李四&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;234&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;女&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;天津&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tb_user &lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;王五&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;11&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;男&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;西安&amp;#39;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pojo&lt;/code&gt;包下定义 &lt;code&gt;User&lt;/code&gt;实体类:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; com.linner.pojo&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; Integer id&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String username&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String password&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String gender&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String addr&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Integer &lt;span style=&#34;color:#a6e22e&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setId&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Integer id&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;getUsername&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; username&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setUsername&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String username&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;username&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; username&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;getPassword&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; password&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setPassword&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String password&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;password&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; password&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;getGender&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; gender&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setGender&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String gender&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;gender&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gender&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;getAddr&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; addr&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setAddr&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String addr&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; addr&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;User{&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, username=&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; username &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, password=&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; password &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, gender=&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; gender &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, addr=&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; addr &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mapper&lt;/code&gt;包下定义 &lt;code&gt;UserMapper&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; com.linner.pojo&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.linner.pojo.User&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.apache.ibatis.annotations.Select&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.List&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserMapper&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;User&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;selectAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    User &lt;span style=&#34;color:#a6e22e&#34;&gt;selectById&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;// 更多操作接口
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;code&gt;resources&lt;/code&gt;目录下创建与 &lt;code&gt;UserMapper&lt;/code&gt;包名对应的路径，并添加 &lt;code&gt;UserMapper.xml&lt;/code&gt;映射配置文件:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE mapper
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        PUBLIC &amp;#34;-//mybatis.org//DTD Mapper 3.0//EN&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        &amp;#34;http://mybatis.org/dtd/mybatis-3-mapper.dtd&amp;#34;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mapper&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;namespace=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;com.linner.mapper.UserMapper&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;      select语句使用&amp;lt;select&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        id          为对应Mapper类中的方法名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        resultType  为对应的实体类, 使用了&amp;lt;typeAliases&amp;gt;包扫描, 省略了包名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;select&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selectAll&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resultType=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
        SELECT *
        FROM tb_user;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;

    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;select&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selectById&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resultType=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
        SELECT *
        FROM tb_user
        WHERE id = #{id};
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 更多XML映射 --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mapper&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;resources&lt;/code&gt;目录下，配置 &lt;code&gt;mybatis-config.xml&lt;/code&gt;文件:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE configuration
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        PUBLIC &amp;#34;-//mybatis.org//DTD Config 3.0//EN&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        &amp;#34;http://mybatis.org/dtd/mybatis-3-config.dtd&amp;#34;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 别名或包扫描 --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 使用别名可以简化映射配置文件中 resultType 属性值的编写 --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;typeAliases&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;com.linner.pojo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/typeAliases&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;environments&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;default=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;development&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;environment&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;development&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;transactionManager&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JDBC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dataSource&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;POOLED&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 数据库连接信息 --&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;driver&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;com.mysql.jdbc.Driver&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jdbc:mysql:///mybatis?useSSL=false&amp;amp;useServerPerpStmts=true&amp;amp;characterEncoding=UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;root&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1234&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dataSource&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/environment&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/environments&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mappers&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Mapper代理方式--&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;com.linner.mapper&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mappers&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编写测试类:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; com.linner.test&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.linner.mapper.UserMapper&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.linner.pojo.User&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.apache.ibatis.io.Resources&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.apache.ibatis.session.SqlSession&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.apache.ibatis.session.SqlSessionFactory&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.apache.ibatis.session.SqlSessionFactoryBuilder&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.junit.Test&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.io.IOException&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.io.InputStream&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.List&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserMapperTest&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Test&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;testSelectAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; IOException &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 加载mybatis的核心配置文件,获取SqlSessionFactory
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String resource &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./mybatis-config.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
        InputStream inputStream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Resources&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getResourceAsStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;resource&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        SqlSessionFactory sqlSessionFactory &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; SqlSessionFactoryBuilder&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;inputStream&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 获取SqlSession对象,用它来执行SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        SqlSession sqlSession &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqlSessionFactory&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;openSession&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 执行sql语句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 3.1 方式一:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// List&amp;lt;User&amp;gt; users = sqlSession.selectList(&amp;#34;com.linner.mapper.UserMapper.selectAll&amp;#34;);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 3.2 方式二:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 3.2.1 获取UserMapper接口的代理对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        UserMapper userMapper &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqlSession&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getMapper&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;UserMapper&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 3.2.2 执行对应Mapper对象的方法
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;User&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; users &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; userMapper&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;selectAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 处理数据(模拟)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;users&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 释放资源(仅需释放SqlSession对象)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        sqlSession&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Test&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;testSelectById&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; IOException &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 模拟接收参数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 获取sqlSessionFactory
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String resource &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./mybatis-config.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
        InputStream inputStream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Resources&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getResourceAsStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;resource&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        SqlSessionFactory sqlSessionFactory &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; SqlSessionFactoryBuilder&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;inputStream&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 获取SqlSession对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        SqlSession sqlSession &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqlSessionFactory&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;openSession&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 获取Mapper接口的代理对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        UserMapper userMapper &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqlSession&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getMapper&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;UserMapper&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 执行方法
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        User user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; userMapper&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;selectById&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 处理数据(模拟)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;user&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 释放资源
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        sqlSession&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;xml-映射器&#34;&gt;XML 映射器&lt;/h1&gt;
&lt;p&gt;通过在 &lt;code&gt;XxxMapper.xml&lt;/code&gt; 中使用元素来定义各种CRUD操作。&lt;/p&gt;
&lt;p&gt;常用的元素如下（按照定义的顺序给出）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;sql&amp;gt;&lt;/code&gt; – 可被其它语句引用的可重用语句块。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;insert&amp;gt;&lt;/code&gt; – 映射插入语句。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;update&amp;gt;&lt;/code&gt; – 映射更新语句。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;delete&amp;gt;&lt;/code&gt; – 映射删除语句。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; – 映射查询语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;select&#34;&gt;Select&lt;/h2&gt;
&lt;h3 id=&#34;查询所有数据&#34;&gt;查询所有数据&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;xml&lt;/code&gt; 配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;select&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selectAll&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resultType=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    SELECT *
    FROM tb_user
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Mapper&lt;/code&gt; 接口方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;User&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;selectAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt;：相应 &lt;code&gt;Mapper&lt;/code&gt; 接口中的方法名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resultType&lt;/code&gt;：相应 &lt;code&gt;Mapper&lt;/code&gt; 接口中的返回值类型（可自动封装为对象，不区分大小写）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Mapper&lt;/code&gt; 接口返回值：返回一个&lt;code&gt;List&amp;lt;User&amp;gt;&lt;/code&gt;。这个返回值可以是&lt;code&gt;User&lt;/code&gt;、&lt;code&gt;List&amp;lt;User&amp;gt;&lt;/code&gt;或&lt;code&gt;ArrayList&amp;lt;User&amp;gt;&lt;/code&gt;等，MyBatis会根据返回值自动封装。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;根据id字段查询&#34;&gt;根据id字段查询&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;xml&lt;/code&gt; 配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;select&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selectById&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resultType=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    SELECT * FROM tb_user WHERE id = #{id};
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Mapper&lt;/code&gt; 接口方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;User &lt;span style=&#34;color:#a6e22e&#34;&gt;selectById&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;中，&lt;code&gt;#{id}&lt;/code&gt;为相应 &lt;code&gt;Mapper&lt;/code&gt; 接口中的参数 &lt;code&gt;id&lt;/code&gt;。&lt;code&gt;#{id}&lt;/code&gt;被称为参数占位符，相当于JDBC中的&lt;code&gt;?&lt;/code&gt;占位符。&lt;/p&gt;
&lt;h3 id=&#34;多条件动态查询&#34;&gt;多条件动态查询&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;xml&lt;/code&gt; 配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;select&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selectByCondition&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resultType=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    SELECT *
    FROM tb_user
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;where&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username != null and username != &amp;#39;&amp;#39; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
            username = #{username}
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password != null and password != &amp;#39;&amp;#39; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
            AND password = #{password}
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gender != null and gender != &amp;#39;&amp;#39; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
            AND gender = #{gender}
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;addr != null and addr != &amp;#39;&amp;#39; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
            AND addr = #{addr}
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/where&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;多条件查询使用了动态SQL&lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;if&amp;gt;&lt;/code&gt;。如果仅需查询某部分字段，仅仅使用SQL语句在实现上有难度。而Mybatis就提供了&lt;u&gt;动态SQL&lt;/u&gt;方便了我们的实现。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;if&amp;gt;&lt;/code&gt;：能根据&lt;code&gt;User&lt;/code&gt;对象的值来决定是否在SQL语句中加入其包含的语句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt;：只会在子元素返回任何内容的情况下才插入&lt;code&gt;WHERE&lt;/code&gt;子句。&lt;/p&gt;
&lt;p&gt;而且，若子句的开头为&lt;code&gt;AND&lt;/code&gt;或&lt;code&gt;OR&lt;/code&gt;，&lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt;元素也会将它们去除。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;单条件动态查询&#34;&gt;单条件动态查询&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;xml&lt;/code&gt; 配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;select&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selectByConditionSingle&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resultMap=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brandResultMap&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    SELECT *
    FROM tb_brand
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;where&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--使用where标签确保不会出错--&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;choose&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--相当于switch--&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;when&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;status != null&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--相当于case--&amp;gt;&lt;/span&gt;
                status = #{status}
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/when&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;when&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;companyName != null and companyName != &amp;#39;&amp;#39; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--相当于case--&amp;gt;&lt;/span&gt;
                company_name like #{companyName}
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/when&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;when&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brandName != null and brandName != &amp;#39;&amp;#39; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--相当于case--&amp;gt;&lt;/span&gt;
                brand_name like #{brandName}
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/when&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--没有条件输入很可能会报错,使用&amp;lt;otherwise&amp;gt;保底--&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--如果没有使用&amp;lt;where&amp;gt;，则必须使用&amp;lt;otherwise&amp;gt;--&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--&amp;lt;otherwise&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                1 = 1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            &amp;lt;/otherwise&amp;gt;--&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/choose&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/where&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;单条件动态查询使用了&lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;choose&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;otherwise&amp;gt;&lt;/code&gt;，它们都是MyBatis提供的动态SQL元素。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;choose&amp;gt;&lt;/code&gt;与&lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt;（必须）和&lt;code&gt;&amp;lt;otherwise&amp;gt;&lt;/code&gt;元素配合使用。它会根据子元素&lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt;的&lt;code&gt;test&lt;/code&gt;属性来判断要选择哪个&lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt;或&lt;code&gt;&amp;lt;otherwise&amp;gt;&lt;/code&gt;元素。&lt;/p&gt;
&lt;p&gt;如果&lt;code&gt;&amp;lt;choose&amp;gt;&lt;/code&gt;外没有被&lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt;包裹则必须使用&lt;code&gt;&amp;lt;otherwise&amp;gt;&lt;/code&gt;来包裹一个永真的条件SQL语句，以确保SQL语句不会出错。如果被&lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt;包裹了，&lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt;会根据需要判断是否要添加&lt;code&gt;WHERE&lt;/code&gt;子句。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;choose&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;otherwise&amp;gt;&lt;/code&gt;与&lt;code&gt;switch&lt;/code&gt;语句的作用十分相似。&lt;/p&gt;
&lt;h2 id=&#34;insert&#34;&gt;Insert&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;xml&lt;/code&gt; 配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;insert&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;useGeneratedKeys=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;keyProperty=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    INSERT INTO tb_user (username, password, ordered, gender,
                          addr)
    VALUES (#{username}, #{password}, #{ordered}, #{gender},
            #{addr});
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/insert&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Mapper&lt;/code&gt; 接口方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;User user&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接口方法直接传入对象即可，对象成员要与 &lt;code&gt;VALUES&lt;/code&gt; 子句中的参数一一对应（参数符号中的名称要与对象的成员名称相同）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果XML映射中只有一个参数，那么这个参数的名称不必与接口的参数名称相同。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;id&lt;/code&gt;：含义与 &lt;code&gt;&amp;lt;insert&amp;gt;&lt;/code&gt; 的含义相同，为相应 &lt;code&gt;Mapper&lt;/code&gt; 接口中的方法名（以下 &lt;code&gt;id&lt;/code&gt;均为此含义，省略）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;useGeneratedKeys&lt;/code&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;值为 &lt;code&gt;true&lt;/code&gt; 时，Mybatis 会使用 JDBC 的 &lt;code&gt;getGeneratedKeys&lt;/code&gt; 方法来取出由数据库内部生成的主键（如自增的主键）。&lt;/li&gt;
&lt;li&gt;默认为 &lt;code&gt;false&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;keyProperty&lt;/code&gt;：&lt;code&gt;getGeneratedKeys&lt;/code&gt; 获取到的主键值所要赋予的对象成员名。MyBatis 会使用 &lt;code&gt;getGeneratedKeys&lt;/code&gt; 的返回值来设置它的值。&lt;/p&gt;
&lt;p&gt;如，&lt;code&gt;keyProperty=&amp;quot;id&amp;quot;&lt;/code&gt;——直接将获取到的主键值赋值给 &lt;code&gt;user.id&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果生成列不止一个，可以用逗号分隔多个属性名称。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Mapper&lt;/code&gt; 接口返回值：&lt;code&gt;boolean&lt;/code&gt;，插入成功返回 &lt;code&gt;true&lt;/code&gt;，插入失败返回 &lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;返回值也可以选择忽略，将&lt;code&gt;add()&lt;/code&gt;接口的返回值设置为&lt;code&gt;void&lt;/code&gt;即可。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;update&#34;&gt;Update&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;xml&lt;/code&gt; 配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;update&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;update&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    UPDATE tb_user
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;set&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username != null and username != &amp;#39;&amp;#39; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
            username = #{username},
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password != null and password != &amp;#39;&amp;#39; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
            password = #{password},
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ordered != null&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
            ordered = #{ordered},
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gender != null and (gender == &amp;#39;男&amp;#39; or gender == &amp;#39;女&amp;#39;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
            gender = #{gender},
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;addr != null and addr != &amp;#39;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
            addr = #{addr}
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/set&amp;gt;&lt;/span&gt;
    WHERE id = #{id};
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/update&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Mapper&lt;/code&gt; 接口方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;User user&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 &lt;code&gt;&amp;lt;update&amp;gt;&lt;/code&gt; 中有一些用 &lt;code&gt;&amp;lt;set&amp;gt;&lt;/code&gt; 包裹起来的 &lt;code&gt;&amp;lt;if&amp;gt;&lt;/code&gt;。这是因为需要使用 &lt;code&gt;&amp;lt;set&amp;gt;&lt;/code&gt; 动态包含需要更新的列，忽略其它不更新的列。从而能根据&lt;code&gt;User&lt;/code&gt;对象的值来决定要更新哪些数据，并且动态地改变SQL语句。&lt;/p&gt;
&lt;p&gt;Update的Mapper接口返回值是&lt;code&gt;int&lt;/code&gt;类型，返回更新的行数。同样可以将接口的返回值设置为&lt;code&gt;void&lt;/code&gt;来忽略它。&lt;/p&gt;
&lt;h2 id=&#34;delete&#34;&gt;Delete&lt;/h2&gt;
&lt;h3 id=&#34;删除单行数据&#34;&gt;删除单行数据&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;xml&lt;/code&gt; 配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;delete&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deleteById&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    DELETE
    FROM tb_user
    WHERE id = #{id};
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/delete&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Mapper&lt;/code&gt; 接口方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;deleteById&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;删除多行数据&#34;&gt;删除多行数据&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;xml&lt;/code&gt; 配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;delete&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deleteByIds&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    DELETE
    FROM tb_brand
    WHERE id
    IN
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        &amp;lt;foreach&amp;gt;参数:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            - item: 代表数组参数中的每个元素
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            - separator: 分隔符
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            - open: 插入开始符
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            - close: 插入结束符
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;foreach&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;collection=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ids&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;item=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;separator=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;open=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;close=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
        #{id}
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/foreach&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/delete&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Mapper&lt;/code&gt; 接口方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;deleteByIds&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Param&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ids&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; ids&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mybatis提供了 &lt;code&gt;&amp;lt;foreach&amp;gt;&lt;/code&gt; 标签遍历数组，拼接SQL语句。&lt;code&gt;&amp;lt;foreach&amp;gt;&lt;/code&gt; 同样也是&lt;u&gt;动态SQL&lt;/u&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;更多XML映射器请查看官方文档：&lt;a class=&#34;link&#34; href=&#34;https://mybatis.net.cn/sqlmap-xml.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MyBatis文档——XML映射器&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;结果映射&#34;&gt;结果映射&lt;/h2&gt;
&lt;h3 id=&#34;resultmap&#34;&gt;resultMap&lt;/h3&gt;
&lt;p&gt;假设SQL表中的字段与实体类的成员变量名无法一一对应，会导致SQL语句的传参出现问题。例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;table&lt;/span&gt; tb_user (
    user_id INT &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; AUTO_INCREMENT,
    user_name VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;),
    user_password VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;),
    user_gender CHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
    user_addr VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; Integer id&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String username&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String password&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String gender&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String addr&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;// setter 和 getter
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;那么可以使用&lt;code&gt;&amp;lt;resultMap&amp;gt;&lt;/code&gt;元素来对表字段和成员名做一个映射（结果映射）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    &amp;lt;resultMap&amp;gt;:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        - id: 唯一标识
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        - type: 映射的类型,支持别名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;resultMap&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userResultMap&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        两种标签:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            - &amp;lt;id&amp;gt;: 完成主键字段的映射
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                - column: 表的列名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                - property: 实体类的属性名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            - &amp;lt;result&amp;gt;: 完成一般字段的映射
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                - column: 表的列名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                - property: 实体类的属性名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;column=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;property=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;result&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;column=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user_name&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;property=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userame&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;result&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;column=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user_password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;property=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;result&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;column=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user_gender&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;property=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gender&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;result&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;column=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user_addr&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;property=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;addr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/resultMap&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;select&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selectAll&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resultMap=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userResultMap&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    SELECT *
    FROM tb_user
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;要使用结果映射，需要把&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;中的&lt;code&gt;resultType&lt;/code&gt;属性替换为&lt;code&gt;resultMap&lt;/code&gt;，并且其属性值为&lt;code&gt;&amp;lt;resultMap&amp;gt;&lt;/code&gt;的&lt;code&gt;id&lt;/code&gt;值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;自动映射&#34;&gt;自动映射&lt;/h3&gt;
&lt;p&gt;当自动映射查询结果时，MyBatis 会获取结果中返回的列名并在 Java 类中查找相同名字的属性（忽略大小写）。&lt;/p&gt;
&lt;p&gt;接上节例子，使用SQL语句的 &lt;code&gt;AS&lt;/code&gt; 来实现：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;select&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selectAll&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resultType=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    SELECT 
        user_id AS &amp;#34;id&amp;#34;,
        user_name AS &amp;#34;username&amp;#34;,
        user_password AS &amp;#34;password&amp;#34;,
        user_gender AS gender,
        user_addr AS &amp;#34;addr&amp;#34;
    FROM tb_user
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;通常数据库列使用大写字母组成的单词命名，单词间用下划线分隔；而 Java 属性一般遵循驼峰命名法约定。为了在这两种命名方式之间启用自动映射，需要将 &lt;code&gt;mapUnderscoreToCamelCase&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 配置mybatis自动转换为驼峰式命名 --&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;settings&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;setting&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mapUnderscoreToCamelCase&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;resultMap&amp;gt;&lt;/code&gt;和自动映射可以混用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;参数&#34;&gt;参数&lt;/h2&gt;
&lt;p&gt;MyBatis有两种参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#{p}&lt;/code&gt; —— 会自动转义。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;${p}&lt;/code&gt; —— 不会自动转义。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;官方文档：&lt;a class=&#34;link&#34; href=&#34;https://mybatis.net.cn/sqlmap-xml.html#Parameters&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MyBatis——XML映射器参数&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;MyBatis 参数封装&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;单个参数:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;POJO类型: 直接使用,保证 &lt;strong&gt;属性名&lt;/strong&gt; 和 &lt;strong&gt;参数占位符名称&lt;/strong&gt; 一致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Map类型: 直接使用,保证 &lt;strong&gt;键名&lt;/strong&gt; 和 &lt;strong&gt;参数占位符名称&lt;/strong&gt; 一致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Collection: 封装为Map集合&lt;/p&gt;
&lt;p&gt;相当于：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arg0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; collection集合&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;collection&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; collection集合&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;@Param&lt;/code&gt;注解，替换Map集合中默认的arg键名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List: 封装为Map集合&lt;/p&gt;
&lt;p&gt;相当于：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arg0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; list集合&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;collection&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; list集合&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; list集合&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;@Param&lt;/code&gt;注解,替换Map集合中默认的arg键名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Array: 封装为Map集合&lt;/p&gt;
&lt;p&gt;相当于：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arg0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 数组&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;array&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 数组&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;@Param&lt;/code&gt;注解,替换Map集合中默认的arg键名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他类型: 直接使用,且占位符名称和参数名称可以不相同&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多个参数: 封装为Map集合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;每个参数有两个键:&lt;/p&gt;
&lt;p&gt;相当于：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arg0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 参数值1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;param1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 参数值1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arg1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 参数值2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;param2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 参数值2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;code&gt;@Param&lt;/code&gt;注解,替换Map集合中默认的arg键名:&lt;/p&gt;
&lt;p&gt;相当于：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Param&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 参数类型 参数名
map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 参数值1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
map&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;param1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 参数值1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserMapper&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    User &lt;span style=&#34;color:#a6e22e&#34;&gt;selectById&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;User&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;selectByCondition&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;@Param&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; String username&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;@Param&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; String password&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;注解实现crud&#34;&gt;注解实现CRUD&lt;/h2&gt;
&lt;p&gt;对于简单的SQL语句来说，使用注解开发会比配置文件开发更加方便。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Select&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SELECT * FROM tb_user WHERE id = #{id}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
User &lt;span style=&#34;color:#a6e22e&#34;&gt;selectById&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;注意：注解是用来替换映射配置文件方式配置的，所以使用了注解，就不需要再映射配置文件中书写对应的 &lt;code&gt;statement&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Mybatis 针对 CURD 操作都提供了对应的注解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查询 ：&lt;code&gt;@Select&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加 ：&lt;code&gt;@Insert&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改 ：&lt;code&gt;@Update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除 ：&lt;code&gt;@Delete&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注解适合用于完成简单功能，而使用配置文件来完成复杂功能。如果使用注解来完成动态SQL之类的复杂功能，就需要使用到MyBatis提供的SQL构建器来完成。详情请阅读官方SQL构建器文档：&lt;a class=&#34;link&#34; href=&#34;https://mybatis.net.cn/statement-builders.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MyBatis文档——SQL语句构建器&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;动态sql&#34;&gt;动态SQL&lt;/h1&gt;
&lt;p&gt;动态 SQL 是 MyBatis 的强大特性之一。&lt;/p&gt;
&lt;p&gt;MyBatis提供的动态SQL元素有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;if&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;choose&amp;gt;&lt;/code&gt; (&lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;otherwise&amp;gt;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;trim&amp;gt;&lt;/code&gt; (&lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;set&amp;gt;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;foreach&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;更多与动态SQL请查看官方文档：&lt;a class=&#34;link&#34; href=&#34;https://mybatis.net.cn/dynamic-sql.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MyBatis文档——动态SQL&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;sqlsessionfactory工具类抽取&#34;&gt;SqlSessionFactory工具类抽取&lt;/h1&gt;
&lt;p&gt;MyBatis重复代码会造成一些问题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不利于后期的维护。&lt;/li&gt;
&lt;li&gt;SqlSessionFactory工厂类进行重复创建。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于Mybatis的基础操作出现的重复代码，可以使用一个静态代码块来自动加载：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SqlSessionFactoryUtils&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; SqlSessionFactory sqlSessionFactory&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 静态代码块会随着类的加载而自动执行，且只执行一次
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            String resource &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mybatis-config.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
            InputStream inputStream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Resources&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getResourceAsStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;resource&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            sqlSessionFactory &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; SqlSessionFactoryBuilder&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;inputStream&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;


    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; SqlSessionFactory &lt;span style=&#34;color:#a6e22e&#34;&gt;getSqlSessionFactory&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; sqlSessionFactory&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;工具类抽取以后，以后在对Mybatis的SqlSession进行操作的时候，就可以直接使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;SqlSessionFactory sf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SqlSessionFactoryUtils&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getSqlSessionFactory&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Druid 数据库连接池</title>
        <link>https://blog.linner.asia/p/druid-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</link>
        <pubDate>Sun, 14 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://blog.linner.asia/p/druid-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</guid>
        <description>&lt;h1 id=&#34;数据库连接池&#34;&gt;数据库连接池&lt;/h1&gt;
&lt;p&gt;数据库连接池是个容器, 负责分配, 管理数据库连接 (Connection).&lt;/p&gt;
&lt;p&gt;数据库连接池允许应用程序重复使用一个现有的数据库连接, 而不是再重新建立一个. 从而减少资源浪费.&lt;/p&gt;
&lt;p&gt;数据库连接池会自动释放超过最大空闲时间的数据库连接 (强制释放), 来避免因为没有释放数据库连接而引起的数据库连接遗漏.&lt;/p&gt;
&lt;p&gt;使用数据库连接池的好处:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源可以重用&lt;/li&gt;
&lt;li&gt;提升系统响应速度&lt;/li&gt;
&lt;li&gt;避免数据库连接遗漏&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在通常情况下使用JDBC, 有可能会反复地创建和销毁 &lt;code&gt;Connection&lt;/code&gt;对象. 这样重复创建销毁的过程特别耗费计算机的性能和时间.&lt;/p&gt;
&lt;p&gt;而数据库使用了数据库连接池后，就能达到Connection对象的复用.&lt;/p&gt;
&lt;p&gt;连接池是在一开始就创建好了一些连接 (Connection) 对象存储起来. 用户需要连接数据库时, 不需要自己创建连接, 而只需要从连接池中获取一个连接进行使用, 使用完毕后再将连接对象归还给连接池; 这样就可以起到资源重用, 也节省了频繁创建连接销毁连接所花费的时间, 从而提升了系统响应的速度.&lt;/p&gt;
&lt;p&gt;常见的数据库连接池有:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DBCP&lt;/li&gt;
&lt;li&gt;C3P0&lt;/li&gt;
&lt;li&gt;Druid&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;druid&#34;&gt;Druid&lt;/h1&gt;
&lt;h2 id=&#34;配置-druid&#34;&gt;配置 Druid&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://repo1.maven.org/maven2/com/alibaba/druid/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;下载Druid jar包&lt;/a&gt;, 并导入:&lt;/p&gt;
&lt;p&gt;在项目中, 将下载好的jar包放入项目的 &lt;code&gt;lib&lt;/code&gt;目录中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后点击鼠标右键&amp;ndash;&amp;gt;Add as Library (添加为库).&lt;/li&gt;
&lt;li&gt;在添加为库文件的时候，有如下三个选项:
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Global Library: 全局有效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Project Library: 项目有效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Module Library: 模块有效&lt;/p&gt;
&lt;p&gt;选择Module Library.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在项目目录下定义Druid配置文件 &lt;code&gt;druid.properties&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;driverClassName=com.mysql.jdbc.Driver
url=jdbc:mysql:///db1?useSSL=false&amp;amp;useServerPrepStmts=true
username=root
password=1234
# 初始化连接数量
initialSize=5
# 最大连接数
maxActive=10
# 最大等待时间
maxWait=3000
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加载配置文件:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;Properties prop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Properties&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
prop&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;demo/src/druid.properties&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用-druid&#34;&gt;使用 Druid&lt;/h2&gt;
&lt;p&gt;Java中从数据库连接池获取连接对象, 使用的是官方提供的数据库连接池标准接口, 由第三方组织实现此接口. 该接口提供了获取连接的功能:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;Connection &lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
                  &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; SQLException
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;因此, 使用Druid获取数据库连接还需要以下两步:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;获取数据库连接池对象:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; DataSource dataSource &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DruidDataSourceFactory&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createDataSource&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;prop&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从数据库连接池中获取连接 (&lt;code&gt;Connection&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;Connection connection &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataSource&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;操作实例&#34;&gt;操作实例&lt;/h1&gt;
&lt;h2 id=&#34;需求分析&#34;&gt;需求分析&lt;/h2&gt;
&lt;p&gt;完成商品品牌数据的增删改查操作&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查询：查询所有数据&lt;/li&gt;
&lt;li&gt;添加：添加品牌&lt;/li&gt;
&lt;li&gt;修改：根据id修改&lt;/li&gt;
&lt;li&gt;删除：根据id删除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;环境准备&#34;&gt;环境准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建数据库表:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 删除tb_brand表
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EXISTS&lt;/span&gt; tb_brand;
&lt;span style=&#34;color:#75715e&#34;&gt;-- 创建tb_brand表
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tb_brand (
    id INT &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; AUTO_INCREMENT, &lt;span style=&#34;color:#75715e&#34;&gt;-- id 主键
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    brand_name VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;), &lt;span style=&#34;color:#75715e&#34;&gt;-- 品牌名称
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    company_name VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;), &lt;span style=&#34;color:#75715e&#34;&gt;-- 企业名称
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ordered INT, &lt;span style=&#34;color:#75715e&#34;&gt;-- 排序字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    description VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;), &lt;span style=&#34;color:#75715e&#34;&gt;-- 描述信息
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    status INT &lt;span style=&#34;color:#75715e&#34;&gt;-- 状态：0：禁用  1：启用
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;);
&lt;span style=&#34;color:#75715e&#34;&gt;-- 添加数据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tb_brand (brand_name, company_name, ordered, description, status)
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;三只松鼠&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;三只松鼠股份有限公司&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;好吃不上火&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;华为&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;华为技术有限公司&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;华为致力于把数字世界带入每个人、每个家庭、每个组织，构建万物互联的智能世界&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;小米&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;小米科技有限公司&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;are you ok&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建 &lt;code&gt;pojo&lt;/code&gt;包, 并在包中添加 &lt;code&gt;Brand&lt;/code&gt;实体类:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; pojo&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* 品牌
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;*/&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Brand&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; Integer id&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// id 主键
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String brandName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 品牌名称
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String companyName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 企业名称
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; Integer ordered&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 排序字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String description&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 描述信息
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; Integer status&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 状态：0：禁用  1：启用
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Integer &lt;span style=&#34;color:#a6e22e&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setId&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Integer id&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;getBrandName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; brandName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setBrandName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String brandName&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;brandName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; brandName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;getCompanyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; companyName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setCompanyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String companyName&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;companyName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; companyName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Integer &lt;span style=&#34;color:#a6e22e&#34;&gt;getOrdered&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ordered&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setOrdered&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Integer ordered&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ordered&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ordered&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;getDescription&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; description&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setDescription&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String description&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;description&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; description&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Integer &lt;span style=&#34;color:#a6e22e&#34;&gt;getStatus&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; status&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setStatus&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Integer status&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; status&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Brand{&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, brandName=&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; brandName &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, companyName=&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; companyName &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, ordered=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ordered &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, description=&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; description &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, status=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; status &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实现操作&#34;&gt;实现操作&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; dao&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pojo.Brand&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.alibaba.druid.pool.DruidDataSourceFactory&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; javax.sql.DataSource&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.io.FileInputStream&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.sql.*&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.Properties&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * 品牌数据的增删改查操作
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; */&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BrandDAO&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; DataSource dataSource&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;// 获取Connection:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// - 导入jar包 &amp;amp; 定义配置文件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// - 加载配置文件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            Properties prop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Properties&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
            prop&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;demo/src/druid.properties&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// - 获取连接池对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            dataSource &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DruidDataSourceFactory&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createDataSource&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;prop&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Exception e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 查询所有
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 1. SQL: SELECT * FROM tb_brand
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 2. 参数: 不需要
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 3. 结果: ArrayList&amp;lt;Brand&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Brand&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;selectAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 获取数据库连接Connection
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Connection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataSource&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *2. 定义SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String sql &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SELECT * FROM tb_brand&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 获取pstmt对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        PreparedStatement pstmt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;prepareStatement&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sql&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      
        &lt;span style=&#34;color:#75715e&#34;&gt;// *4. 设置参数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      
        &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 执行SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        ResultSet rs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;executeQuery&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *6. 处理结果: ArrayList&amp;lt;Brand&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Brand brand &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
        ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Brand&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; brands &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// - 遍历结果集
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;next&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 获取数据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            String brandName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brand_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            String companyName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;company_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ordered &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ordered&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            String description &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; status &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 封装Brand对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            brand &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Brand&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
            brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setId&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setCompanyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;companyName&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setOrdered&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ordered&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setDescription&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;description&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setStatus&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;status&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

            &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 装载ArrayList集合
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            brands&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;brand&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 7. 释放资源
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 8. 返回结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; brands&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 添加
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 1. SQL:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;         INSERT INTO tb_brand(
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            brand_name,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            company_name,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            ordered,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            description,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            status)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;         VALUES(?,?,?,?,?)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 2. 参数: 除了id之外的所有参数信息
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 3. 结果: boolean
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Brand brand&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 获取数据库连接Connection
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Connection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataSource&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *2. 定义SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String sql &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                INSERT INTO tb_brand(
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    brand_name,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    company_name,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    ordered,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    description,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    status)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                VALUES(?,?,?,?,?)&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 获取pstmt对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        PreparedStatement pstmt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;prepareStatement&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sql&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *4. 设置参数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBrandName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getCompanyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getOrdered&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getDescription&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getStatus&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 执行SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;executeUpdate&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 返回影响的行数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 释放资源
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 7. 返回结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 修改
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 1. SQL:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;         UPDATE tb_brand
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;         SET brand_name=?,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            company_name=?,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            ordered=?,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            description=?,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            status=?
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;         WHERE id=?
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 2. 参数: 所有
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 3. 结果: boolean
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Brand brand&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 获取数据库连接Connection
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Connection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataSource&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *2. 定义SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String sql &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                UPDATE tb_brand
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                SET brand_name=?,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    company_name=?,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    ordered=?,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    description=?,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    status=?
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                WHERE id=?&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 获取pstmt对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        PreparedStatement pstmt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;prepareStatement&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sql&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *4. 设置参数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBrandName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getCompanyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getOrdered&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getDescription&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getStatus&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;6&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 执行SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;executeUpdate&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 返回影响的行数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 释放资源
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 8. 返回结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 删除
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 1. SQL:DELETE FROM tb_brand WHERE id=?
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 2. 参数: id
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 3. 结果: boolean
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;deleteById&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 获取数据库连接Connection
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Connection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataSource&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *2. 定义SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String sql &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DELETE FROM tb_brand WHERE id=?&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 获取pstmt对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        PreparedStatement pstmt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;prepareStatement&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sql&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *4. 设置参数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 执行SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;executeUpdate&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 返回影响的行数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 释放资源
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 7. 返回结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>MySQL 环境配置</title>
        <link>https://blog.linner.asia/p/mysql-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate>
        
        <guid>https://blog.linner.asia/p/mysql-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
        <description>&lt;h1 id=&#34;ubuntu&#34;&gt;Ubuntu&lt;/h1&gt;
&lt;p&gt;MySQL 8 安装：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先更新本地存储库索引：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从 APT 存储库安装 MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install MySQL-server -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看 MySQL 版本，验证是否安装成功：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mysql --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查 MySQL 是否正在运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;systemctl status mysql.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果服务未运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl start mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;MySQL 安装完成后需要更改密码。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;查看默认账户和密码：&lt;/p&gt;
&lt;p&gt;执行后找到 &lt;code&gt;user&lt;/code&gt; 和 &lt;code&gt;password&lt;/code&gt;，如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo vim /etc/mysql/debian.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo cat /etc/mysql/debian.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;找到如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-纯文本&#34; data-lang=&#34;纯文本&#34;&gt;user     = debian-sys-maint
password = 12E0cDBeusG6vANp
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用默认账户登录：&lt;/p&gt;
&lt;p&gt;然后输入默认密码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mysql -udebian-sys-maint -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-纯文本&#34; data-lang=&#34;纯文本&#34;&gt;12E0cDBeusG6vANp
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入以下命令修改 root 密码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;USER&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; identified &lt;span style=&#34;color:#66d9ef&#34;&gt;WITH&lt;/span&gt; mysql_native_password &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your_password&amp;#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改完成后执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;FLUSH &lt;span style=&#34;color:#66d9ef&#34;&gt;privileges&lt;/span&gt;;
QUIT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后重启 MySQL 后就可以使用 root 用户了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo service mysql restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mysql -uroot -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>SQL 语句</title>
        <link>https://blog.linner.asia/p/sql-%E8%AF%AD%E5%8F%A5/</link>
        <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
        
        <guid>https://blog.linner.asia/p/sql-%E8%AF%AD%E5%8F%A5/</guid>
        <description>&lt;h1 id=&#34;基本概念&#34;&gt;基本概念&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;SQL&lt;/strong&gt;（&lt;strong&gt;Structured Query Language&lt;/strong&gt;，发音为 sequal）是一种专门用来与数据库沟通的语言。通过 SQL，用户可以对数据库进行各种操作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;标准 SQL 由 ANSI 标准委员会管理，从而称为 ANSISQL。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;数据库&#34;&gt;数据库&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;数据库&lt;/strong&gt;（&lt;strong&gt;database&lt;/strong&gt;）是一个用于保存有组织的数据的容器或数据集合。&lt;/p&gt;
&lt;p&gt;每个数据库都有唯一的标识符。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;表&#34;&gt;表&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;表&lt;/strong&gt;（&lt;strong&gt;table&lt;/strong&gt;）是某种特定类型数据的结构化清单，用于存储某种特定类型的数据。&lt;/p&gt;
&lt;p&gt;在同一个数据库中的每个表都有一个唯一的标识符来标识自己。因此，在同个数据库中，不能拥有两个名称相同的表，但在不同的数据库中可以使用相同的表名。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;模式&#34;&gt;模式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;模式&lt;/strong&gt;（&lt;strong&gt;schema&lt;/strong&gt;）是一种关于数据库和表的布局及特性的信息。它是用来描述数据库中表的特性（如，存储的数据类型、数据的分解方式、各部分的信息的命名），或描述整个数据库（和其中表的关系）。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;行和列&#34;&gt;行和列&lt;/h3&gt;
&lt;h4 id=&#34;列&#34;&gt;列&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;列&lt;/strong&gt;（&lt;strong&gt;column&lt;/strong&gt;）是表中的一个字段（即，表的组成部分）。所有的表都是由一个或多个列组成的。列存储表中的某部分信息，且这部分信息必须是同一种数据类型（&lt;strong&gt;datatype&lt;/strong&gt;）。&lt;/p&gt;
&lt;p&gt;数据类型限制（或允许）该列中存储的数据的种类。它还能帮助正确地分类数据，并在优化磁盘使用方面起重要的作用。&lt;/p&gt;
&lt;p&gt;利用特定的列，可以对数据进行分类和过滤。所以，数据分解十分重要。&lt;/p&gt;
&lt;p&gt;数据类型及其名称是 SQL 不兼容的重要原因之一。对于不同的 DBMS，大多数基本数据类型都得到了一致的支持，但许多高级数据类型却没有。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;行&#34;&gt;行&lt;/h4&gt;
&lt;p&gt;表中每一条记录的数据都是按&lt;strong&gt;行&lt;/strong&gt;（&lt;strong&gt;row&lt;/strong&gt;）存储的。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;主键&#34;&gt;主键&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;主键&lt;/strong&gt;（&lt;strong&gt;primary key&lt;/strong&gt;）是用来唯一标识表中每一行的列（如国际标准书号 ISBN 就可作为主键），可以是一列或多列。&lt;/p&gt;
&lt;p&gt;满足以下条件的列即可作为主键：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;任意两行都不具有相同的主键值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每一行都必须具有一个主键值（主键列不允许空值 NULL）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主键列中的值不允许修改或更新。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主键值不能重用（即使某行从表中删除，它的主键依然不能赋给以后的新行）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在使用多列作为主键时，上述条件必须应用到所有列，即所有列值的组合必须是唯一的（但不同列中可以存在相同的值）。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;关系数据库&#34;&gt;关系数据库&lt;/h2&gt;
&lt;p&gt;关系数据库由关系表组成，而关系表的设计就是要把信息分解成多个表，一类数据一个表。各表通过某些共同的值互相关联。&lt;/p&gt;
&lt;p&gt;常见的两个关系表都会有至少一个相同类型且表示相同的列，对于其中一个表，该列是这个表的主键，从而能使另一个表甚至关系数据库中的其他表通过这个主键对应到这个表中的行。&lt;/p&gt;
&lt;p&gt;一个优秀的关系数据库通常具有以下优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;关系库中的每个表中的每个行的信息重复很少，减少了时间和空间的浪费。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果信息有更新，仅需更新对应的表中的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据是一致的（没有重复的数据），使得处理数据和生成报表更简单。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结：关系数据库的&lt;strong&gt;可伸缩性&lt;/strong&gt;（&lt;strong&gt;scale&lt;/strong&gt;）远比非关系数据库要好。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可伸缩是指，能够适应不断增加的工作量而不失败。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;数据库管理系统&#34;&gt;数据库管理系统&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;数据库管理系统&lt;/strong&gt;（&lt;strong&gt;DataBase Management System&lt;/strong&gt;，&lt;strong&gt;DBMS&lt;/strong&gt;）是一种用于创建和操纵数据库的软件。&lt;/p&gt;
&lt;p&gt;绝大多数 DBMS 都支持 ANSI SQL，但一些 DBMS 有自己的扩展。不同的 SQL 实现有自己的名称（如 Oracle 的 PL/SQL、微软 SQL Server 的 Transact-SQL 等）。&lt;/p&gt;
&lt;p&gt;DBMS 可以管理多个数据库，一般开发人员会针对每一个应用创建一个数据库。为保存应用中实体的数据，一般会在数据库创建多个表，以保存程序中实体的数据。&lt;/p&gt;
&lt;p&gt;数据库管理系统、数据库和表的关系：&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;sql-语句分类&#34;&gt;SQL 语句分类&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DDL&lt;/strong&gt;（&lt;strong&gt;Data Definition Language&lt;/strong&gt;，&lt;strong&gt;数据定义语言&lt;/strong&gt;）：用来定义数据库对象：数据库，表，列等。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;create&lt;/code&gt;、&lt;code&gt;drop&lt;/code&gt;、&lt;code&gt;alter&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DML&lt;/strong&gt;（&lt;strong&gt;Data Manipulation Language&lt;/strong&gt;，&lt;strong&gt;数据操作语言&lt;/strong&gt;）：用来对数据库中表的数据进行增删改。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;insert&lt;/code&gt;、&lt;code&gt;delete&lt;/code&gt;、&lt;code&gt;update&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DQL&lt;/strong&gt;（&lt;strong&gt;Data Query Language&lt;/strong&gt;，&lt;strong&gt;数据查询语言&lt;/strong&gt;）：用来查询数据库中表的记录。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;select&lt;/code&gt;、&lt;code&gt;where&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DCL&lt;/strong&gt;（&lt;strong&gt;Data Control Language&lt;/strong&gt;，&lt;strong&gt;数据控制语言&lt;/strong&gt;）：用来定义数据库的访问权限和安全级别，及创建用户。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;GRANT&lt;/code&gt;、&lt;code&gt;REVOKE&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;sql-语法&#34;&gt;SQL 语法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQL语句可以单行或多行书写，以分号结尾。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可使用空格和缩进来增强语句的可读性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大多数数据库的 SQL 语句不区分大小写，关键字建议使用大写（可以提高运行速度）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;字段&#34;&gt;字段&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;字段&lt;/strong&gt;（&lt;strong&gt;filed&lt;/strong&gt;）基本上与列的意思相同，但字段这个术语通常在计算字段这种场合下使用。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;select-语句&#34;&gt;SELECT 语句&lt;/h1&gt;
&lt;p&gt;任何 SQL 语句都是&lt;strong&gt;查询&lt;/strong&gt;（&lt;strong&gt;query&lt;/strong&gt;）。但此术语一般指 SELECT 语句。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;检索列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 从 tab_name 中检索出filed1, filed2 等列（字段）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 可以检索单个列或多个列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;列的顺序是按照指令中指出的列名的顺序显示。行的顺序是按照存储在物理内存中的顺序显示。&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;strong&gt;通配符&lt;/strong&gt; &lt;code&gt;*&lt;/code&gt; 检索表中的所有列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 检索出 tab_name 中所有的列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一般情况下，返回的列是按照存储在物理内存中的顺序显示的，并没有特定顺序。可能是按照数据被添加到表中的顺序显示（在没有增删数据的情况下），也可能不是（在有数据进行过更新或删除，这个顺序将会受到 DBMS 重用回收存储空间的方式的影响）。&lt;/p&gt;
&lt;p&gt;使用通配符可以很方便地显示表中所有的列（包括名字未知的列），但这么做可能会降低检索速度和应用程序的性能（因为程序会检索所有表中的所有列）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;all-和-distinct&#34;&gt;ALL 和 DISTINCT&lt;/h2&gt;
&lt;p&gt;可以在列名前指定 &lt;code&gt;ALL&lt;/code&gt;（默认）和 &lt;code&gt;DISTINCT&lt;/code&gt; 关键字，它们表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ALL&lt;/code&gt; —— 列出当前指定的列的所有行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DISTINCT&lt;/code&gt; —— 列出由当前所有列组合的不重复的行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以对聚集函数使用 &lt;code&gt;ALL&lt;/code&gt; 和 &lt;code&gt;DISTINCT&lt;/code&gt; 关键字指定。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ALL&lt;/code&gt; —— 默认选项，包含所有的行，对聚集函数指定 &lt;code&gt;ALL&lt;/code&gt;（可忽略）表示对所有的行执行计算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DISTINCT&lt;/code&gt; —— 指定 &lt;code&gt;DISTINCT&lt;/code&gt;，包含不重复的行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对聚集函数指定 &lt;code&gt;DISTINCT&lt;/code&gt; 表示只对不重复的行进行计算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;DISTINCT&lt;/code&gt; 必须明确指出列名，而不能使用 &lt;code&gt;*&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;列出不重复的行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, ... 不重复
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DISTINCT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;DISTINCT&lt;/code&gt; 作用于所有指定的列，该 SELECT 语句会返回所有不重复的 &lt;code&gt;filed1, filed2, ...&lt;/code&gt; 组合的行。使用 &lt;code&gt;DISTINCT *&lt;/code&gt; 可以返回由所有列组合的不重复的行。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;限制返回的行&#34;&gt;限制返回的行&lt;/h2&gt;
&lt;p&gt;各 DBMS 实现并不相同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQL Server：使用 &lt;code&gt;TOP&lt;/code&gt; 关键字。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 返回前 n 行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 是任一正整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; TOP n filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DB2：&lt;code&gt;FETCH FIRST n ROWS ONLY&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 返回前 n 行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 是任一正整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;FETCH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FIRST&lt;/span&gt; n &lt;span style=&#34;color:#66d9ef&#34;&gt;ROWS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ONLY&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Oracle：基于 &lt;code&gt;ROWNUM&lt;/code&gt;（行计数器）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 返回前 n 行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 是任一正整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; ROWNUM &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL、MariaDB、PostgreSQL and SQLite：使用 &lt;code&gt;LIMIT&lt;/code&gt; 子句。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 返回前 n 行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 是任一正整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;LIMIT&lt;/span&gt; n;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 返回从第 m 行开始的前 n 行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 是任一正整数，m 是任一非负整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;LIMIT&lt;/span&gt; n &lt;span style=&#34;color:#66d9ef&#34;&gt;OFFSET&lt;/span&gt; m;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 MySQL、MariaDB 和 SQLite 中，上条指令可简化为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 返回从第 m 行开始的前 n 行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 是任一正整数，m 是任一非负整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- m 指定开始的行数，n 指定返回的行数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;LIMIT&lt;/span&gt; m, n;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;行是从 0 开始计数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;order-by-排序数据&#34;&gt;ORDER BY 排序数据&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;ORDER BY&lt;/code&gt; 子句取一个或多个列的名字，据此对数据进行排序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- order1, order2, ... 是排序的依据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 该语句会先对 order1 进行排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 仅在具有多行相同 order1 值时，才按照 order2 排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; order1, order2, ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ORDER BY&lt;/code&gt; 子句必须是 SELECT 语句中的最后一条子句。默认是升序排序（从 A 到 Z）。&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按相对列位置进行排序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n1、n2 …… 是小于或等于指定的列的总数的正整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n1、n2 …… 这组数中的每两个数都不相等
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; n1, n2, ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;按相对位置排序的好处是不用输入列名，但有可能会造成错用列进行排序（特别是在对 SELECT 清单进行更改时）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实际列名排序和相对列位置排序可混合使用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;📌最好的排序方式是，对冗长的列名重命名，然后使用列名进行排序。这样可以减少错误的出现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;指定排序方向&#34;&gt;指定排序方向&lt;/h3&gt;
&lt;p&gt;指定排序的关键字：&lt;code&gt;ASC&lt;/code&gt; —— 升序排序、&lt;code&gt;DESC&lt;/code&gt; —— 降序排序。&lt;code&gt;ASC&lt;/code&gt; 和 &lt;code&gt;DESC&lt;/code&gt; 必须对每一列进行指定，因为它们只会对直接位于其前面的列名指定排序方式。可以对某一列指定 &lt;code&gt;ASC&lt;/code&gt;（或 &lt;code&gt;DESC&lt;/code&gt;）后对其它列指定 &lt;code&gt;DESC&lt;/code&gt;（或 &lt;code&gt;ASC&lt;/code&gt;）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- order1, order2, ... 是排序的依据，且都被指定了升序排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; order1 &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;, order2, ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DESC&lt;/code&gt; 关键字指定降序排序。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- order1, order2, ... 是排序的依据，且都被指定了降序排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; order1 &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;, order2 &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;, ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对某些列指定升序排序，对另外某些列指定升序排序。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- asc_order1, asc_order2, ... 都是指定升序排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- desc_order1, desc_order2, ... 都是指定降序排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; asc_order1 &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;, asc_order2, ..., desc_order1 &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;, desc_order2 &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;, ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大多数 DBMS 默认使用字典（dictionary）排序（即大小写字母被视为相同），但许多 DBMS 允许改变这种方式。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;where-过滤数据&#34;&gt;WHERE 过滤数据&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;WHERE&lt;/code&gt; 子句能够根据指定的&lt;strong&gt;搜索条件&lt;/strong&gt;（&lt;strong&gt;search criteria&lt;/strong&gt;），检索用户需要的数据。搜索条件也被称为&lt;strong&gt;过滤条件&lt;/strong&gt;（&lt;strong&gt;filter condition1&lt;/strong&gt;）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;检索单一条件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一列名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 的类型和 n 的类型要一致
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;数据也可以在应用层进行过滤，但当 DBMS 返回的数据超出实际所需的数据时，会影响应用的性能，并且降低应用的可伸缩性，这还会造成网络宽带的浪费（服务器不得不通过网络发送多余的数据）。&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;WHERE 子句操作符&lt;/strong&gt;（条件操作符）：&lt;/p&gt;
&lt;p&gt;并非所有 DBMS 都支持所有的操作符，某些 DBMS 可能不支持个别操作符。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;操作符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;操作符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; or &lt;code&gt;!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大于等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不大于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小于等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BETWEEN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;范围在指定的两个值之间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;!&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不小于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;IS NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;为 NULL 的值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;BETWEEN&lt;/code&gt; 在指定范围内检索：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一列名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 的类型和 n 、m 的类型要一致
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 和 m 为低端值和高端值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 检索时匹配的值包括 n 和 m
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#66d9ef&#34;&gt;BETWEEN&lt;/span&gt; n &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; m;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;IS NULL&lt;/code&gt; 检索空值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一列名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#66d9ef&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IS NOT NULL&lt;/code&gt; 检索不为空值的行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一列名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#66d9ef&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;逻辑操作符&#34;&gt;逻辑操作符&lt;/h3&gt;
&lt;p&gt;可以在一条 &lt;code&gt;WHERE&lt;/code&gt; 子句中包含任意数量的&lt;strong&gt;逻辑操作符&lt;/strong&gt;（&lt;strong&gt;logical operator&lt;/strong&gt;），且允许两者结合以进行复杂、高级的过滤。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;AND&lt;/code&gt; 操作符检索满足所有给定条件的行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition11，condition12 …… 是包含条件操作符的子句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; condition12
    &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OR&lt;/code&gt; 操作符检索满足任一条件的行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition11，condition12 …… 是包含条件操作符的子句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; condition12
    &lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;许多 DBMS 在使用 &lt;code&gt;OR&lt;/code&gt; 操作符时，当第 1 个条件满足的情况下，就不再计算第 2 个条件。&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NOT&lt;/code&gt; 操作符是否定操作符，否定跟随在其后的条件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是任意条件子句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; condition11;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;大多数 DBMS 允许使用 NOT 否定任何条件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;in-指定条件范围&#34;&gt;IN 指定条件范围&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;IN&lt;/code&gt; 操作符用来指定条件范围，匹配范围中指定的每个条件。&lt;code&gt;IN&lt;/code&gt; 操作符后的括号中的合法值用逗号分隔。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- val1, val2, ... 是与 condition1 类型相同的一组合法值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1 &lt;span style=&#34;color:#66d9ef&#34;&gt;IN&lt;/span&gt; (val1, val2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;IN&lt;/code&gt; 操作符和 &lt;code&gt;OR&lt;/code&gt; 操作符的功能类似，但在某些方面，&lt;code&gt;IN&lt;/code&gt; 操作符有其优点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在有很多合法选项时，&lt;code&gt;IN&lt;/code&gt; 操作符可读性更强。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与其他 &lt;code&gt;AND&lt;/code&gt; 和 &lt;code&gt;OR&lt;/code&gt; 操作符组合使用 &lt;code&gt;IN&lt;/code&gt; 时，求值顺序更容易管理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IN&lt;/code&gt; 操作符一般比一组 &lt;code&gt;OR&lt;/code&gt; 操作符执行得更快。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IN&lt;/code&gt; 操作符可包含其他 SELECT 语句，能更动态地建立 WHERE 子句。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;通配符&#34;&gt;通配符&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;通配符&lt;/strong&gt;（&lt;strong&gt;wildcard&lt;/strong&gt;）是用于匹配值的一部分的特殊字符。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;搜索模式&lt;/strong&gt;（&lt;strong&gt;search pattern&lt;/strong&gt;）由字面值、通配符或两者组合构成的搜索条件。&lt;/p&gt;
&lt;p&gt;利用通配符，可以创建比较特定数据的搜索模式。要使用通配符，必须在搜索子句中使用 &lt;code&gt;LIKE&lt;/code&gt; 操作符。且通配符只能用于字符串。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用通配符搜索一般比其他简单搜索耗费更长的处理时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不要过度使用通配符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尽量不要把通配符用在搜索模式的开始处（通配符置于开始处是最慢的）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不同类型的通配符可以混合使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;%&lt;/code&gt; 通配符：表示任何字符出现任意次数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一字符类型的列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 该语句表示在 condition1 列中搜索以 ABC 开头的字符串
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
WHRER condition1 &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ABC%&amp;#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;包含 &lt;code&gt;ABC&lt;/code&gt; 的字符串：&lt;code&gt;&#39;%ABC%&#39;&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以 &lt;code&gt;ABC&lt;/code&gt; 结尾的字符串：&lt;code&gt;&#39;ABC%&#39;&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以 &lt;code&gt;A&lt;/code&gt; 为开头，以 &lt;code&gt;B&lt;/code&gt; 为结尾的字符：&lt;code&gt;&#39;A%B&#39;&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;某些 DBMS 会用空格来填补字段内容，可能会对该搜索模式造成影响。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;包含 &lt;code&gt;AB&lt;/code&gt; 和 &lt;code&gt;CD&lt;/code&gt; 的字符串：&lt;code&gt;&#39;%AB%CD%&#39;&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;_&lt;/code&gt; 通配符：表示匹配单个任意字符。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一字符类型的列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 该语句表示匹配以 ABC 结尾，开头为任意一个字符的字符串
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1 &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_ABC&amp;#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[]&lt;/code&gt; 通配符：用来指定一个字符集，它必须匹配指定位置的一个字符。&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一字符类型的列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 该语句匹配以 A 或 B 其中之一与 C 的组合的字符串（仅有两个字符）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1 &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[AB]C&amp;#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用 &lt;code&gt;^&lt;/code&gt; 可以来否定 &lt;code&gt;[]&lt;/code&gt; 定义的字符集：&lt;code&gt;&#39;[^AB]&#39;&lt;/code&gt; —— 该模式会匹配除了 &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; 之外的任何一个字符。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;子查询&#34;&gt;子查询&lt;/h3&gt;
&lt;p&gt;子查询通过嵌套的&lt;code&gt;SELECT&lt;/code&gt;语句，将查询结果作为值返回。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SELECT&lt;/code&gt;可以嵌套地使用。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;拼接&#34;&gt;拼接&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;拼接&lt;/strong&gt;（&lt;strong&gt;concatenate&lt;/strong&gt;）是指将值联结到一起（将一个值附加到另一个值）构成单个值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQL Server 使用 &lt;code&gt;+&lt;/code&gt; 号拼接：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, filed3, ... 可以是任意同类型的字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; filed2 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; filed3 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DB2、Oracle、PostgreSQL 和 SQLite 使用 &lt;code&gt;||&lt;/code&gt;：&lt;code&gt;filed1 || filed2 || filed3 || ...&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 和 MariaDB 使用 &lt;code&gt;Concat()&lt;/code&gt; 函数：&lt;code&gt;Concat(filed1, filed2, filed3, ...)&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;某些 DBMS 会用空格填充字段，可以使用 &lt;code&gt;RTRIM()&lt;/code&gt; 函数来清除这些空格。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;as-指定别名&#34;&gt;AS 指定别名&lt;/h1&gt;
&lt;p&gt;使用 &lt;code&gt;AS&lt;/code&gt; 关键字赋予字段或值一个&lt;strong&gt;别名&lt;/strong&gt;（&lt;strong&gt;alias&lt;/strong&gt;）。别名既可以是一个单词，也可以是一个字符串，字符串需用引号括起。使用别名时不应使用表中实际的列名，虽然这样做也算合法，但可能会产生模糊的错误消息。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed 是一个字段或值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- alias 是 filed 的别名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 赋予别名后可以在接下来的子句中使用别名来替代这个字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;alias&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;alias&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;函数&#34;&gt;函数&lt;/h1&gt;
&lt;h2 id=&#34;数值处理函数&#34;&gt;数值处理函数&lt;/h2&gt;
&lt;p&gt;数值处理函数仅处理数值数据，是最一致、最统一的函数。&lt;/p&gt;
&lt;p&gt;常用的数值处理函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Explain&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ABC()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个数的绝对值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;COS()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个角度的余弦。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EXP()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个数的指数值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PI()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回圆周率 $\pi$ 值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SIN()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个角度的正弦。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SQRT()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个数的平方根。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TAN()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个角度的正切。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;文本处理函数&#34;&gt;文本处理函数&lt;/h2&gt;
&lt;p&gt;常用的文本处理函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Explain&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LEFT(str, num)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回字符串 &lt;code&gt;str&lt;/code&gt; 左边前 &lt;code&gt;num&lt;/code&gt; 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LENGTH(str)&lt;/code&gt;、
&lt;code&gt;DATALENGTH(str)&lt;/code&gt;
or
&lt;code&gt;LEN(str)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回字符串的长度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LOWER(str)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将字符串转换为小写。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LTRIM(str)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;去掉字符串左边的空格。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;RIGHT(str, num)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回字符串 &lt;code&gt;str&lt;/code&gt; 右边前 &lt;code&gt;num&lt;/code&gt; 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;RTRIM(str)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;去掉字符串右边的空格。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SUBSTR(str, n, size)&lt;/code&gt; or &lt;code&gt;SUBSTRING(str, n, size)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;提取字符串的组成部分。
DB2、Oracle、PostgreSQL 和 SQLite 使用 &lt;code&gt;SUBSTR()&lt;/code&gt;；
MariaDB、MySQL 和 SQL Server 使用 &lt;code&gt;SUBSTRING()&lt;/code&gt;。
&lt;code&gt;n&lt;/code&gt; 是指字符串中第 &lt;code&gt;n&lt;/code&gt; 个字符（从 1 开始计数），
&lt;code&gt;size&lt;/code&gt; 是指截取的字符串长度，截取出的字符串包括第 &lt;code&gt;n&lt;/code&gt; 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SOUNDEX(str)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回字符串的 SOUNDEX 值（描述 &lt;code&gt;str&lt;/code&gt; 语音表示的字母数字模式）。
PostgreSQL 不支持。SQLite 要开启 SQLITE_SOUNDEX 编译选项。
使用 &lt;code&gt;SOUNDEX()&lt;/code&gt; 函数对两个字符串进行比较，
使得能对字符串进行发音比较而不是字母比较。
如 &lt;code&gt;WHERE SOUNDEX(str1) = SOUNDEX(str2)&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UPPER(str)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将字符串转换为大写。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;日期和时间处理函数&#34;&gt;日期和时间处理函数&lt;/h2&gt;
&lt;p&gt;日期和时间函数在 SQL 中可移植性最差。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQL Server 使用 &lt;code&gt;DATEPART(part, date)&lt;/code&gt; 返回日期中的一部分，&lt;code&gt;part&lt;/code&gt;（不是字符型的参数）指定要返回的成分，&lt;code&gt;date&lt;/code&gt; 是要从中国年返回成分的日期。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PostgreSQL 使用 &lt;code&gt;DATE_PART(part_str, date)&lt;/code&gt; 返回日期中的一部分，&lt;code&gt;part_str&lt;/code&gt; 指定要返回的成分，&lt;code&gt;date&lt;/code&gt; 是要从中国年返回成分的日期。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Oracle 和 PostgreSQL 都支持 &lt;code&gt;EXTRACT(part FROM date)&lt;/code&gt; 返回日期中的一部分。&lt;code&gt;part&lt;/code&gt;（不是字符型）指定要返回的成分，&lt;code&gt;date&lt;/code&gt; 是要从中国年返回成分的日期。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Oracle 还支持 &lt;code&gt;to_date(date_str, form_str)&lt;/code&gt; 将字符串转化成日期，&lt;code&gt;date_str&lt;/code&gt; 是某个带有日期格式的字符串，&lt;code&gt;form_str&lt;/code&gt; 指定日期的形式。一般这样使用：&lt;code&gt;WHERE date_column BETWEEN to_date(&#39;2020-01-01&#39;, &#39;yyyy-mm-dd&#39;) AND todate(&#39;2020-12-31&#39;, &#39;yyyy-mm-dd&#39;)&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DB2、MySQL 和 MariaDB 中有 &lt;code&gt;YEAR(date)&lt;/code&gt; 和 &lt;code&gt;MONTH(date)&lt;/code&gt; 等函数用于提取年份和月份等信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 SQLite 可以使用 &lt;code&gt;strftime(&#39;%Y&#39;, date)&lt;/code&gt; 提取年份，也可以提取月份等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;MySQL Date 函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NOW()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回当前的日期和时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CURDATE()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回当前的日期。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CURTIME()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回当前的时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATE()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;提取日期或日期/时间表达式的日期部分。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EXTRACT()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回日期/时间的单独部分。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATE_ADD()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;向日期添加指定的时间间隔。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATE_SUB()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;从日期减去指定的时间间隔。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATEDIFF()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回两个日期之间的天数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATE_FORMAT()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用不同的格式显示日期/时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;SQL Server Date 函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GETDATE()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回当前的日期和时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATEPART()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回日期/时间的单独部分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATEADD()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在日期中添加或减去指定的时间间隔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATEDIFF()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回两个日期之间的时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CONVERT()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用不同的格式显示日期/时间&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;汇总数据&#34;&gt;汇总数据&lt;/h2&gt;
&lt;p&gt;使用&lt;strong&gt;聚集函数&lt;/strong&gt;（&lt;strong&gt;aggregate function&lt;/strong&gt;）可以对某些行进行计算并返回一个值。&lt;/p&gt;
&lt;p&gt;SQL 聚集函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;Explain&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AVG(filed)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回某字段的平均数，类型必须是数值类型，&lt;code&gt;AVG()&lt;/code&gt; 会忽略值为 &lt;code&gt;NULL&lt;/code&gt; 的行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;COUNT(filed)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回某字段的行数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MAX(filed)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回某字段的最大值，允许 &lt;code&gt;filed&lt;/code&gt; 是日期值，许多 DBMS 还允许 &lt;code&gt;filed&lt;/code&gt; 是字符串，如果 &lt;code&gt;filed&lt;/code&gt; 是字符串，那么 &lt;code&gt;MAX()&lt;/code&gt; 会返回按该列排序后的最后一行。&lt;code&gt;MAX()&lt;/code&gt; 忽略值为 &lt;code&gt;NULL&lt;/code&gt; 的行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MIN(filed)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回某字段的最小值，与 &lt;code&gt;MAX()&lt;/code&gt; 类似，如果 &lt;code&gt;filed&lt;/code&gt; 是字符串，那么 &lt;code&gt;MAX()&lt;/code&gt; 会返回按该列排序后的最前面一行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SUM(filed)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回某列值之和，类型必须是数值类型，&lt;code&gt;SUM()&lt;/code&gt; 会忽略值为 &lt;code&gt;NULL&lt;/code&gt; 的行。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Usage for Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AVG&lt;/span&gt;(filed) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; average
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SELECT 语句可以根据需要包含多个聚集函数。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;group-by-数据分组&#34;&gt;GROUP BY 数据分组&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;分组&lt;/strong&gt;是使用 SELECT 语句的 &lt;code&gt;GROUP BY&lt;/code&gt; 子句，将数据分为多个逻辑组，对每个组进行操作。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 显示 filed1, filed2, ... 并根据它们进行分组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- COUNT(*) 表示计算分组中的所有行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 该语句是先按照 filed1 进行分组，然后再按照 filed2 进行分组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 使用分组后输出的结果可能是根据 filed1, filed2, ... 排序好的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ..., &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; filed1, filed2, ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;GROUP BY&lt;/code&gt; 子句指示 DBMS 分组数据，然后对每个组（不是整个结果集）进行聚集。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;GROUP BY&lt;/code&gt; 的规定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GROUP BY&lt;/code&gt; 子句可以包含任意数目的列。所以可以对分组进行嵌套，更细致地进行数据分组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在建立分组后，操作的最小单位只能是分组，而无法再对个别列进行操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GROUP BY&lt;/code&gt; 子句中列出的每一列都必须是检索列或有效表达式列（但不能是聚集函数）。在 SELECT 中使用表达式，则必须在 &lt;code&gt;GROUP BY&lt;/code&gt; 子句中指定相同的表达式，而不能使用别名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大多数 SQL 实现不允许 &lt;code&gt;GROUP BY&lt;/code&gt; 列带有长度可变的数据类型（如文本或备注型字段）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;除聚集计算语句外，SELECT 语句中的每一列都必须在 &lt;code&gt;GROUP BY&lt;/code&gt; 子句中给出。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分组列中所有包含具有 &lt;code&gt;NULL&lt;/code&gt; 值的行，都将 &lt;code&gt;NULL&lt;/code&gt; 作为一个分组返回。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GROUP BY&lt;/code&gt; 子句必须出现在 &lt;code&gt;WHERE&lt;/code&gt; 子句之后，&lt;code&gt;ORDER BY&lt;/code&gt; 子句之前。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌并非所有 SQL 实现都支持在使用 &lt;code&gt;GROUP BY&lt;/code&gt; 子句时，使用相对位置指定列，并且使用它容易在编辑 SQL 语句时出错。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;having-过滤分组&#34;&gt;HAVING 过滤分组&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;HAVING&lt;/code&gt; 子句来过滤分组。&lt;code&gt;HAVING&lt;/code&gt; 支持所有 &lt;code&gt;WHERE&lt;/code&gt; 子句支持的操作符，两者的区别是 &lt;code&gt;WHERE&lt;/code&gt; 仅对行进行过滤，而 &lt;code&gt;HAVING&lt;/code&gt; 可以对分组进行过滤（在没有指定 &lt;code&gt;GROUP BY&lt;/code&gt; 时，大多数 DBMS 会同等对待 &lt;code&gt;WHERE&lt;/code&gt; 和 &lt;code&gt;HAVING&lt;/code&gt;，即 &lt;code&gt;HAVING&lt;/code&gt; 也可以对行进行过滤）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed_1, filed_2, ... 是聚集操作
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是相对于每行的条件，condition1_ 是相对于每个分组的条件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ... filed_1, filed_2, ...;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1
&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;HAVING&lt;/span&gt; condition1_;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在同时使用 &lt;code&gt;WHERE&lt;/code&gt; 和 &lt;code&gt;GROUP BY&lt;/code&gt; 时，被 &lt;code&gt;WHERE&lt;/code&gt; 过滤掉的行并不会包括在分组中。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;分组和排序&#34;&gt;分组和排序&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ORDER BY&lt;/code&gt; 与 &lt;code&gt;GROUP BY&lt;/code&gt; 的区别&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;ORDER BY&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;GROUP BY&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;对产生的输出排序&lt;/td&gt;
&lt;td&gt;对行分组，但输出可能不是分组的顺序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;任意列都可以使用（甚至非选择的列也可以使用，即 SELECT 没有给出的列也能使用）&lt;/td&gt;
&lt;td&gt;只可能使用选择列或表达式列（SELECT 中给出的列），而且必须使用每个选择列表达式（不能使用别名）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是可选的，任何情况下都能根据需要选择是否使用&lt;/td&gt;
&lt;td&gt;在使用聚集函数的情况下，
还要显示列（或表达式），则必须使用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;GROUP BY&lt;/code&gt; 分组不一定是按照分组顺序输出的，所以应该提供明确的 &lt;code&gt;ORDER BY&lt;/code&gt; 子句指定排序方式，以确保在任何情况下输出都能正确地排序。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;子查询-1&#34;&gt;子查询&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;子查询&lt;/strong&gt;（&lt;strong&gt;subquery&lt;/strong&gt;）是指嵌套在其他查询中的查询。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 每个子查询中的 SELECT 语句有且仅有一个字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 在子查询中企图检索多个列将返回错误
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 理论上可以无限嵌套，但实际使用时由于性能的限制，不能嵌套太多的子查询
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#66d9ef&#34;&gt;IN&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed_1
                     &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table2
                     &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition12 &lt;span style=&#34;color:#66d9ef&#34;&gt;IN&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed_2
                                          &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table3
                                          &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition13 &lt;span style=&#34;color:#66d9ef&#34;&gt;IN&lt;/span&gt; (...));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 SELECT 语句中，子查询总是从内向外处理（类似递归的处理方式）。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;使用计算字段进行子查询&#34;&gt;使用计算字段进行子查询&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed_1, filed_2, ... 是计算字段，是由其 AS 前的圆括号中的子查询建立的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- table1._filed1 是 table1 中名为 _filed1 的列或列表达式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- table2._filed1 是 table2 中名为 _filed2 的列或列表达式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- table1._filed1 和 table2._filed1 是两个不同表格中同名同类型的列，并不是同一个列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- table1._filed2 和 table3._filed2 的关系与 table1._filed1 和 table2._filed1 类似
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 第 1 条子查询的解释是，对所有 table2 中符合 table1._filed1 = table2._filed1 的行进行计数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
       (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table2
        &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; table1._filed1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; table2._filed1) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; filed_1
       (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table3
        &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; table1._filed2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; table3._filed2) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; filed_2
       ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;计算字段用一个句点分隔表名和列名，句点前是表名，句点后是列名，即 &lt;code&gt;tab_name.column&lt;/code&gt;，这种写法也叫完全限定列名。在有可能混淆列名时（如使用子查询时）必须使用这种语法。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;join-联结表&#34;&gt;JOIN 联结表&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;联结&lt;/strong&gt;（&lt;strong&gt;join&lt;/strong&gt;）是一种机制，用来在一条 SELECT 语句中关联表，可以联结多个表返回一组输出。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;联结不是物理实体，它在实际的数据库表总并不存在，它仅在数据查询的执行期间存在。
对于联结，需要考虑性能，如果联结过多的表，可能会非常耗费资源，使性能下降。
SQL 本身不限制每个联结约束中表的数目，但实际上许多 DBMS 都有限制。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;联结类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;内联结（inner join）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外联结（outer join）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自联结（self-join）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自然联结（natural join）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以在一个 SELECT 语句中使用联结多个表，而且每个表的联结类型可以不相同。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;inner-join-内联结&#34;&gt;INNER JOIN 内联结&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;内联结&lt;/strong&gt;（&lt;strong&gt;inner join&lt;/strong&gt;）又称为&lt;strong&gt;等值联结&lt;/strong&gt;（&lt;strong&gt;equijoin&lt;/strong&gt;），是基于两个表之间的项等测试。&lt;/p&gt;
&lt;p&gt;许多子查询都可以使用内联结来替代，但是子查询与联结同样需要耗费一定的资源，所以在一个语句中，不应使用过多的子查询和联结。&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;code&gt;FROM&lt;/code&gt; 中指定多个列（等值联结）。&lt;/p&gt;
&lt;p&gt;对于联结，需要保证所有联结都有 &lt;code&gt;WHERE&lt;/code&gt; 子句，并且要保证 &lt;code&gt;WHERE&lt;/code&gt; 子句的正确性。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, ... 是存在于 table1, table2, ... 中的任意列或列表达式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 如果在不同表中出现名称相同的列，就需要使用完全限定名来指定
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 完全限定名：tab_name.column_name
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1s 中必须给出联结条件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1, table2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1s;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果上述语句没有在 &lt;code&gt;WHERE&lt;/code&gt; 中指出配对方式，那么 &lt;code&gt;table1&lt;/code&gt; 中的每一行会与 &lt;code&gt;table2&lt;/code&gt; 中的每一行进行配对，然后 &lt;code&gt;table1&lt;/code&gt; 和 &lt;code&gt;table2&lt;/code&gt; 已经配对完成的行会再次与 &lt;code&gt;table3&lt;/code&gt; 中的每一行配对，以此类推，直到所有的表都完成了配对。这种由没有联结条件的表联结后返回的结果为&lt;strong&gt;笛卡尔积&lt;/strong&gt;（&lt;strong&gt;cartesian product&lt;/strong&gt;）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;INNER JOIN&lt;/code&gt;（内联结）指定要联结的表，联结条件用特定的 &lt;code&gt;ON&lt;/code&gt; 子句给出。&lt;/p&gt;
&lt;p&gt;同样地，对于这种方式的联结，需要保证所有联结都有有效的 &lt;code&gt;ON&lt;/code&gt; 子句。如果没有 &lt;code&gt;ON&lt;/code&gt; 子句，也会出现笛卡尔积。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, ... 是存在于 table1, table2, ... 中的任意列或列表达式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 如果在不同表中出现名称相同的列，就需要使用完全限定名来指定
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 中必须给出联结条件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...  
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1
&lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; table2 &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; condition11
&lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; table3 &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; condition12
&lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; ...
&lt;span style=&#34;color:#75715e&#34;&gt;-- 如果有其他条件的话 WHERE 子句在 INNER JOIN 之后给出
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ANSI SQL 规范首选 &lt;code&gt;INNER JOIN&lt;/code&gt; 语法。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;自联结&#34;&gt;自联结&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;自联结&lt;/strong&gt;（&lt;strong&gt;self-join&lt;/strong&gt;）是指在同一个 SELECT 语句中，多次联结同一个表。&lt;/p&gt;
&lt;p&gt;对于自联结来说，由于多次引用同一个表，如果不对表起别名的话，会造成系统混乱（同一个表，表名自然相同，所以系统无法区分究竟指的是哪个表，虽然本质上都是同一个表）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; T1.filed1, T1.filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T1, tab_name &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T2
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; T1.filed_1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T2.filed_1
    &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; T2.filed_2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;虽然自联结也可以用子查询替换，但对于大多数 DBMS 来说，处理联结远比处理子查询快。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; filed_1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed_1
                 &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
                 &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; filed_2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;自然联结&#34;&gt;自然联结&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;自然联结&lt;/strong&gt;（&lt;strong&gt;natural join&lt;/strong&gt;）指每个含义相同的列仅出现一次的联结。自然联结一般是通过对一个表使用通配符，而对其他表的列使用明确的子集来完成。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; T1.&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;, T2.filed1, T2.filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T1, table2 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T2
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; T1.filed_1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T2.filed_1
    &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;outer-join-外联结&#34;&gt;OUTER JOIN 外联结&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;外联结&lt;/strong&gt;（&lt;strong&gt;outer join&lt;/strong&gt;）是指包含无关联行的联结。通常，内联结都是将一个表格中的行与另一个表格中的行通过联结条件进行关联，此时两个表格中没有被联结条件关联起来的行将会被忽略。而外联结则会包含这些没有被联结条件所关联起来的行，并根据需要给某些列赋予 &lt;code&gt;NULL&lt;/code&gt; 值。&lt;/p&gt;
&lt;p&gt;外联结有三种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;LEFT OUTER JOIN&lt;/code&gt; —— 左外联结，包含左表的所有行（即 &lt;code&gt;FROM&lt;/code&gt; 后面紧跟的表，示例中为 &lt;code&gt;T1&lt;/code&gt;），即使在右表（示例中为 &lt;code&gt;T2&lt;/code&gt;）中没有被匹配（结果为 &lt;code&gt;NULL&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;基本上所有的 DBMS 都支持。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; T1.filed1, T1,filed2, ...
       T2.filed_1, T2.filed_2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T1
&lt;span style=&#34;color:#66d9ef&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; table2 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T2
&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; T1.filed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T2.filed;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;RIGHT OUTER JOIN&lt;/code&gt; —— 右外联结，包含左表的所有行（即 &lt;code&gt;JOIN&lt;/code&gt; 关键字后紧跟的表，示例中为 &lt;code&gt;T2&lt;/code&gt;），即使在右表（示例中为 &lt;code&gt;T1&lt;/code&gt;）中没有被匹配（结果为 &lt;code&gt;NULL&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;SQLite 不支持。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; T1.filed1, T1,filed2, ...
       T2.filed_1, T2.filed_2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T1
&lt;span style=&#34;color:#66d9ef&#34;&gt;RIGHT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; table2 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T2
&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; T1.filed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T2.filed;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;FULL OUTER JOIN&lt;/code&gt; —— 全外联结，只要左表和右表其中一个表中存在匹配，就返回。&lt;/p&gt;
&lt;p&gt;MariaDB、MySQL 和 SQLite 都不支持。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;左外联结和右外联结可以相互转换。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;联结聚合函数与分组&#34;&gt;联结、聚合函数与分组&lt;/h2&gt;
&lt;p&gt;联结的一种用法是使用聚合函数从另一个表格中汇总数据。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是联结条件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; T1.filed1, T2.filed2, ...
       &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(T2.filed_1) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; name_filed
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T1
&lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; table2 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T2 &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; condition1
&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; T1.filed1, T1,filed2, ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于上述语句也可以指定外联结，仅需将 &lt;code&gt;INNER JOIN&lt;/code&gt; 替换成外联结的关键字。&lt;/p&gt;
&lt;p&gt;使用外联结从另一个表中汇总数据，那些没有被关联的行经过 &lt;code&gt;COUNT()&lt;/code&gt; 函数计算后的返回值将会为 0。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;union-组合查询&#34;&gt;UNION 组合查询&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;组合查询&lt;/strong&gt;通常称为&lt;strong&gt;并&lt;/strong&gt;（&lt;strong&gt;union&lt;/strong&gt;）或&lt;strong&gt;符合查询&lt;/strong&gt;（&lt;strong&gt;compound query&lt;/strong&gt;）。通过组合查询可以同时执行多条 SELECT 语句，并将结果作为一个查询结果集返回。&lt;/p&gt;
&lt;p&gt;需要使用组合查询的情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在一个查询中从不同的表返回结构数据；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对一个表执行多个查询，按一个查询返回数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;组合相同表的查询所完成的工作一般可以用 &lt;code&gt;WHERE&lt;/code&gt; 子句替代。&lt;/p&gt;
&lt;p&gt;理论上使用 &lt;code&gt;WHERE&lt;/code&gt; 子句和组合查询从性能上看并没有太大差别，但各实现之间任有差别。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第一条 SELECT 中的列名或指定的别名作为整个组合查询的结果集的列名。因此组合查询所返回的结果集的列名是第一条 SELECT 中的列名，且在组合查询中的 &lt;code&gt;ORDER BY&lt;/code&gt; 子句中指出的列名应是第一条 SELECT 中第列名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每一个组合查询最多仅能有一条 &lt;code&gt;ORDER BY&lt;/code&gt; 子句，且必须位于整个组合查询语句的最后（即最后一条 SELECT 语句）。&lt;/p&gt;
&lt;p&gt;即，无法对某条 SELECT 指定一种排序方式，而对另一条 SELECT 指定另一种排序方式，所有的 SELECT 只能用同一种方式排序。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用组合查询的规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;必须由两条或两条以上的 SELECT 语句组成，语句之间用关键字 &lt;code&gt;UNION&lt;/code&gt; 分隔。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个查询必须包含相同的列、表达式或聚集函数（数量必须要相同，类型必须要兼容）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;使用 &lt;code&gt;UNION&lt;/code&gt; 关键字，会自动去除重复的行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, ... 和 filed_1, filed_2, ... 数量必须相同，类型要兼容
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- table1 和 table2 可以是同个表格，也可以是不同的表格
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- ORDER BY 必须位于语句的最后
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11
&lt;span style=&#34;color:#66d9ef&#34;&gt;UNION&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed_1, filed_2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table2
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition12
&lt;span style=&#34;color:#66d9ef&#34;&gt;UNION&lt;/span&gt;
...
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; filed;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在上述语句中，将 &lt;code&gt;UNION&lt;/code&gt; 替换成 &lt;code&gt;UNION ALL&lt;/code&gt;，返回的结果集将包含重复的行。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;insert-语句&#34;&gt;INSERT 语句&lt;/h1&gt;
&lt;p&gt;INSERT 语句用来将行插入（或添加）到数据库表。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;插入完整的行&#34;&gt;插入完整的行&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;简单但不保险的方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt;(value1,
       value2,
       value3,
       ...,
       &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
       ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;VALUES&lt;/code&gt; 后面的括号中，按照表中列的定义次序，指出了要存储到表中的数据，且必须给每一列提供一个值（在没有指定列名的情况下）。如果某列没有值，则该列应该使用 &lt;code&gt;NULL&lt;/code&gt;（在允许对该列指定空值的情况下）。各列必须以它们在表定义中出现的次序填充。&lt;/p&gt;
&lt;p&gt;这种语法虽然简单但并不安全，因为这种 SQL 语句高度依赖于表中列的定义次序。如果表结构发生变动，那么这样的语句并不能按照预期的情况执行。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;📌在某些 SQL 实现中，&lt;code&gt;INTO&lt;/code&gt; 关键字是可选的。但为了确保可移植，还是要提供 &lt;code&gt;INTO&lt;/code&gt; 关键字。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保险但比较繁琐的方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1 与 value1 对应，filed2 与 value2 对应，以此类推
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tab_name(filed1,
                       filed2,
                       filed3,
                       ...)
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt;(value1,
       value2,
       value3,
       ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种方法需要在表名后面，使用括号将表中的所有列名指出（不用按照表中列的定义顺序）。在插入行时，VALUES 必须以其指定的次序匹配指定的列名，这样即使表结构改变，该 INSERT 语句仍能正确工作。不要使用没有明确给出列的 INSERT 语句。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;主键的值必须有唯一性，DBMS 不允许插入主键值重复的行。如果确实需要插入，应先删除原有的记录。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;插入行的一部分&#34;&gt;插入行的一部分&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1 与 value1 对应，filed2 与 value2 对应，以此类推
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tab_name(filed1,
                       filed2,
                       ...)
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt;(value1,
       value2,
       ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同样使用表名后面的括号指定列，只不过仅需指出需要插入的部分列，并且只需给这些列提供值。&lt;/p&gt;
&lt;p&gt;无论是插入完整的行还是插入行的一部分，都必须确保 &lt;code&gt;VALUES&lt;/code&gt; 的数目正确。如果不提供列名，则必须给每个表列提供一个值；如果提供列名，则必须给列出的每一个列一个值。否则，就会产生错误。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;VALUES&lt;/code&gt; 中没有指出的列，DBMS 将赋予它们默认值或空值。这些列必须满足：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;列定义为允许 &lt;code&gt;NULL&lt;/code&gt; 值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在表定义中给出了默认值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;insert-select&#34;&gt;INSERT SELECT&lt;/h2&gt;
&lt;p&gt;INSERT 还允许利用 SELECT 语句将检索到的结果插入表中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 将 table2 中满足条件的 filed_1, filed_2, ... 列按照对应顺序插入到 table1 中
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- table1 和 table2 可以是同一个表
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; table1(filed1,
                   filed2,
                   ...)
&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed_1,
       filed_2,
       ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table2
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1s;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一般 INSERT 只插入一行。而 INSERT SELECT 可以用一条语句插入多行。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;select-into&#34;&gt;SELECT INTO&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;SELECT ... INTO&lt;/code&gt; 用于从一个表中复制数据，然后把数据插入到另一个新表中（&lt;code&gt;INTO&lt;/code&gt; 子句后指定的表，该语句执行后会自动创建）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;📌MySQL 不支持 &lt;code&gt;SELECT ... INTO&lt;/code&gt; 语句。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- INTO 后面的 IN 子句代表插入到其他数据库
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- IN 子句可省略，默认代表当前数据库
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- new_table 的表结构与 old_table 指定列 filed1, filed2, ... 的结构相同
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; new_table [&lt;span style=&#34;color:#66d9ef&#34;&gt;IN&lt;/span&gt; external_db]
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; old_table;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;SELECT INTO&lt;/code&gt; 语句可以通过使用促使查询没有数据返回的 &lt;code&gt;WHERE&lt;/code&gt; 子句创建一个新的空表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; new_table
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; old_table
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;更新和删除数据&#34;&gt;更新和删除数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在客户端或服务器的 DBMS 中，使用 UPDATE 和 DELETE 语句可能需要特殊的安全权限。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;update-语句&#34;&gt;UPDATE 语句&lt;/h2&gt;
&lt;p&gt;UPDATE 语句用于更新（修改）表中的数据。&lt;/p&gt;
&lt;p&gt;有两种使用 UPDATE 语句的方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;更新表中的特定行 —— 使用 &lt;code&gt;WHERE&lt;/code&gt; 子句过滤：&lt;/p&gt;
&lt;p&gt;基本的 UPDATE子句由三部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;要更新的表 —— 使用 &lt;code&gt;UPDATE&lt;/code&gt; 关键字指定；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列名和它们的新值 —— 使用 &lt;code&gt;SET&lt;/code&gt; 关键字指定更新的内容（即使用 “列=值” 对将新值赋给被更新的列）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确定要更新哪些行的过滤 —— 使用 &lt;code&gt;WHERE&lt;/code&gt; 子句指定过滤条件。
在 UPDATE 中，&lt;code&gt;WHERE&lt;/code&gt; 可以使用 SELECT 子查询。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, ... 是 tab_name 中的列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- value1, value2, ... 是与 filed1, filed2, ... 相对应类型的数据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1 = value1, filed2 = value2, ... 是 “列=值” 对
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1s 是过滤的条件，指定了要更新的行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UPDATE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; filed1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value1,
    filed2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value2,
    ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1s;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更新表中的所有行 —— 不使用 &lt;code&gt;WHERE&lt;/code&gt; 子句。&lt;/p&gt;
&lt;p&gt;一般的 UPDATE 字句都要使用 &lt;code&gt;WHERE&lt;/code&gt; 字句指定过滤条件，否则 &lt;code&gt;SET&lt;/code&gt; 子句指定的更新内容将应用到所有的列。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;📌有的 SQL 实现支持在 UPDATE 语句中使用 FROM 子句，用一个表的数据更新另一个表的行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用 UPDATE 删除某个列的值：将要删除的列置为 &lt;code&gt;NULL&lt;/code&gt;（假设表定义允许 &lt;code&gt;NULL&lt;/code&gt;）。如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UPDATE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; del_filed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1s;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;delete-语句&#34;&gt;DELETE 语句&lt;/h2&gt;
&lt;p&gt;使用 DELETE 语句可以从一个表中删除（去掉）数据。&lt;/p&gt;
&lt;p&gt;有两种使用 DELETE 语句的方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从表中删除特定的行 —— 使用 &lt;code&gt;WHERE&lt;/code&gt; 子句过滤：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1s 是过滤条件，指定了要删除的行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1s;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;从表中删除所有行 —— 不使用 &lt;code&gt;WHERE&lt;/code&gt; 子句：
使用 DELETE 语句时应该指定 &lt;code&gt;WHERE&lt;/code&gt; 子句，否则它将会删除表中所有的行。
如果确实想删除表中所有行，应该使用速度更快的 &lt;code&gt;TRUNCATE TABLE&lt;/code&gt; 语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DELETE 语句删除的是表中的行，即它的操作对象是行而不是列，如果想要删除列，则要使用 UPDATE 语句将该列置为 &lt;code&gt;NULL&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;update-和-delete-的使用准则&#34;&gt;UPDATE 和 DELETE 的使用准则&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;绝对不要使用不带  子句的 UPDATE 或 DELETE 子句&lt;/strong&gt;，除非确实打算更新和删除每一行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;应保证每个表都有主键&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在使用 UPDATE 或 DELETE 之前，应先用 SELETE 进行测试，确保 &lt;code&gt;WHERE&lt;/code&gt; 子句过滤的是正确的记录。:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用强制实施引用完整性的数据库，这样 DBMS 将不允许删除其数据与其他表相关的行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果 DBMS 允许数据库管理员施加约束，防止执行不带 &lt;code&gt;WHERE&lt;/code&gt; 子句的 UPDATE 或 DELETE 子句，那么应该使用它。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌如果 SQL 没有撤销（undo）按钮，应该更小心地使用 UPDATE 和 DELETE 语句。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;创建和删除数据库&#34;&gt;创建和删除数据库&lt;/h1&gt;
&lt;p&gt;创建数据库使用 &lt;code&gt;CREATE DATABASE&lt;/code&gt; 语句。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; db_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;删除数据库使用 &lt;code&gt;DROP DATABASE&lt;/code&gt; 语句。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; db_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意：删除数据库后，数据库中的所有数据（表、视图、索引等数据都将会被删除）。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;sql-通用数据类型&#34;&gt;SQL 通用数据类型&lt;/h1&gt;
&lt;p&gt;数据类型定义列中存放的值的种类。数据库表中的每个列都要求有名称和数据类型。SQL 开发人员必须在创建 SQL 表时决定表中的每个列将要存储的数据的类型。&lt;/p&gt;
&lt;p&gt;不同的 DBMS 数据类型有些不同。有的 DBMS 允许自定义数据类型，有的不允许。&lt;/p&gt;
&lt;p&gt;以下是 SQL 通用数据类型：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;数据类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CHARACTER(n)&lt;/code&gt; 或 &lt;code&gt;CHAR(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;字符/字符串。固定长度 &lt;code&gt;n&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;VARCHAR(n)&lt;/code&gt; 或  &lt;code&gt;CHARACTER VARYING(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;字符/字符串。可变长度。最大长度 &lt;code&gt;n&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BINARY(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;二进制串。固定长度 &lt;code&gt;n&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BOOLEAN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存储 &lt;code&gt;TRUE&lt;/code&gt; 或 &lt;code&gt;FALSE&lt;/code&gt; 值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;VARBINARY(n) &lt;/code&gt; 或 &lt;code&gt;BINARY VARYING(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;二进制串。可变长度。最大长度 &lt;code&gt;n&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INTEGER(p)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;整数值（没有小数点）。精度 &lt;code&gt;p&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SMALLINT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;整数值（没有小数点）。精度 5。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INTEGER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;整数值（没有小数点）。精度 10。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BIGINT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;整数值（没有小数点）。精度 19。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DECIMAL(p,s)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;精确数值，精度 &lt;code&gt;p&lt;/code&gt;，小数点后位数 &lt;code&gt;s&lt;/code&gt;。
例如：&lt;code&gt;DECIAML(5,2)&lt;/code&gt; 是一个小数点前有 3 位数，小数点后有 2 位数的数字。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NUMERIC(p,s)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;精确数值，精度 &lt;code&gt;p&lt;/code&gt;，小数点后位数 &lt;code&gt;s&lt;/code&gt;。（与  DECIMAL 相同）.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FLOAT(p)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;近似数值，尾数精度 &lt;code&gt;p&lt;/code&gt;。一个采用以 10 为基数的指数计数法的浮点数。该类型的 &lt;code&gt;size&lt;/code&gt; 参数由一个指定最小精度的单一数字组成。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;REAL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;近似数值，尾数精度 7。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FLOAT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;近似数值，尾数精度 16。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DOUBLE PRECISION&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;近似数值，尾数精度 16。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存储年、月、日的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TIME&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存储小时、分、秒的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TIMESTAMP&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存储年、月、日、小时、分、秒的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INTERVAL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;由一些整数字段组成，代表一段时间，取决于区间的类型。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ARRAY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;元素的固定长度的有序集合。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MULTISET&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;元素的可变长度的无序集合。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;XML&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存储 XML 数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;SQL 数据类型快速参考手册&lt;/strong&gt;：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;数据类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Access&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;SQL Server&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Oracle&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;MySQL&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;boolean&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Yes/No&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Bit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;integer&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Number (integer)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Int&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Int&lt;/code&gt;、 &lt;code&gt;Integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Int&lt;/code&gt;、 &lt;code&gt;Integer&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;float&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Number (single)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Float Real&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;currency&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Currency&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Money&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Money&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;string (fixed)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Char&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Char&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Char&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Char&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;string (variable)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Text (&amp;lt;256) Memo (65k+)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Varchar&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Varchar&lt;/code&gt;、&lt;code&gt;Varchar2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Varchar&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Varchar&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;binary object&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;OLE Object Memo&lt;/td&gt;
&lt;td&gt;Binary (fixed up to 8K) Varbinary (&amp;lt;8K) Image (&amp;lt;2GB)&lt;/td&gt;
&lt;td&gt;Long Raw&lt;/td&gt;
&lt;td&gt;Blob Text&lt;/td&gt;
&lt;td&gt;Binary Varbinary&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;时间数据格式&#34;&gt;时间数据格式&lt;/h2&gt;
&lt;p&gt;MySQL 使用下列数据类型在数据库中存储日期或日期/时间值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DATE - 格式：&lt;code&gt;YYYY-MM-DD&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DATETIME - 格式：&lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TIMESTAMP - 格式：&lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;YEAR - 格式：&lt;code&gt;YYYY&lt;/code&gt; 或 &lt;code&gt;YY&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SQL Server 使用下列数据类型在数据库中存储日期或日期/时间值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DATE - 格式：&lt;code&gt;YYYY-MM-DD&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DATETIME - 格式：&lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SMALLDATETIME - 格式：&lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TIMESTAMP - 格式：唯一的数字&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;创建和操纵表格&#34;&gt;创建和操纵表格&lt;/h1&gt;
&lt;h2 id=&#34;create-table-创建表&#34;&gt;CREATE TABLE 创建表&lt;/h2&gt;
&lt;p&gt;一般有两种创建表格的方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用 SQL 语句 &lt;code&gt;CTEATE TABLE&lt;/code&gt; 创建表格；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多数 DBMS 都具有交互式创建和管理数据库表的工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;其本质是交互工具根据用户操作自动生成并执行相应的 SQL 语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;不同的 SQL 实现中，CREATE TABLE 语句的语法会有所不同（主要区别是在列定义上）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用 &lt;code&gt;CREATE TABLE&lt;/code&gt; 创建表，必须给出以下信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;新表的名字，在关键字 &lt;code&gt;CREATE TABLE&lt;/code&gt; 之后给出；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表列的名字和定义，在列名后的括号中指出，用逗号分隔；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有的 DBMS 还要求指定表的位置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column_name1    DataType1,
    column_name2    DataType2,
    column_name3    DataType3,
    cluumn_name4    DataType4,
    ...
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建新表时只能指定不存在的表名，SQL 无法通过 &lt;code&gt;CREATE&lt;/code&gt; 语句覆盖已有的表。&lt;/p&gt;
&lt;h2 id=&#34;alter-table-更新表定义&#34;&gt;ALTER TABLE 更新表定义&lt;/h2&gt;
&lt;p&gt;使用 ALTER TABLE 时需要考虑的事情：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;理想情况下，不要在表中包含数据时对表结构进行更新（特别是不要删除已有的列）。
应该在表的设计过程中充分考虑未来可能的需求，避免今后对表的结构做大改动。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有的 DBMS 都允许给现有的表增加列，不过对所增加列的数据类型（以及 NULL 和 DEFAULT 的使用）有所限制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;许多 DBMS 不允许删除或更改表中的列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多数 DBMS 允许重新命名表中的列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;许多 DBMS 限制对已经填有数据的列进行更改，对未填有数据的列几乎没有限制。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 ALTER TABLE 必须给出的信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在 ALTER TABLE 之后给出表名；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列出要更改表的操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;增加表列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; filed DataType;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COLUMN&lt;/span&gt; filed;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改列定义：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name 
&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COLUMN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;column_name&lt;/span&gt; NewDataType;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在MySQL中使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name 
&lt;span style=&#34;color:#66d9ef&#34;&gt;MODIFY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;column_name&lt;/span&gt; NewDataType;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;复杂的表结构更改一般需要执行以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;用新的列布局创建一个新表；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 INSERT SELECT 语句从旧表复制数据到新表；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检验包含所需数据的新表；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重命名旧表（在确定无误的情况下可删除）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用旧表原来的名字重命名新表；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据需要，重新创建触发器、存储过程、索引和外键。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;使用 ALTER TABLE 的注意事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQLite 对使用 ALTER TABLE 的最重要的限制是：不支持使用 ALTER TABLE 定义主键和外键，必须在最初创建表时指定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在使用 ALTER TABLE 之前应先做好完整的备份（表结构和数据的备份）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表结构的更改不能撤销。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果增加了不需要的列，也许无法删除它们。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果删除了不应该删除的列，可能会丢失该列中的所有数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;drop-table-删除表&#34;&gt;DROP TABLE 删除表&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;DROP TABLE&lt;/code&gt; 语句用于删除表本身（包括表数据）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;📌删除表时，没有确认步骤，且不能撤销。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌&lt;strong&gt;使用关系规则防止意外删除&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;许多 DBMS 允许强制实施有关规则，防止删除与其他表相关联的表。在实施这些规则时，如果对某个表发布一条 &lt;code&gt;DORP TABLE&lt;/code&gt; 语句，且该表是某个关系的组成部分，则 DBMS 将阻止这条语句执行，直到该关系被删除为止。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;truncate-table-删除表数据&#34;&gt;TRUNCATE TABLE 删除表数据&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;TRUNCATE TABLE&lt;/code&gt; 语句用于删除表内的数据（但并不包括表本身）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUNCATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;重命名表&#34;&gt;重命名表&lt;/h2&gt;
&lt;p&gt;对于重命名表，每个 DBMS 的支持都有所不同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DB2、MariaDB、MySQL、Oracle 和 PostgreSQL 使用 &lt;code&gt;RENAME&lt;/code&gt; 语句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQL Server 使用 &lt;code&gt;sp_rename&lt;/code&gt; 存储过程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQLite 使用 &lt;code&gt;ALTER TABLE&lt;/code&gt; 语句。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;sql-约束&#34;&gt;SQL 约束&lt;/h1&gt;
&lt;p&gt;SQL &lt;strong&gt;约束&lt;/strong&gt;（Constraints）用于规定表中如何插入或处理数据的规则。如果存在违反约束的数据行为，行为会被约束终止。&lt;/p&gt;
&lt;p&gt;约束可以在创建表时规定（通过 &lt;code&gt;CREATE TABLE&lt;/code&gt; 语句），或者在表创建之后规定（通过 &lt;code&gt;ALTER TABLE&lt;/code&gt; 语句）。&lt;/p&gt;
&lt;p&gt;SQL 有如下几种约束：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;关键字&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;解释&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;允许存储 NULL 值。
如果不指定 NOT NULL 或 PRIMARY KEY，则默认为 NULL。
在插入行时允许不给出该列的值。此时，会给该项指定为值 NULL。
对于 DB2，在定义允许 NULL 的列中不能指定 NULL。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NOT NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指示某列不能存储 NULL 值。
如果不向字段添加值，就无法插入新记录或者更新记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UNIQUE &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;唯一约束。保证某列的每行必须有唯一的值。
唯一约束可包含 NULL 值，可重复使用，但是不能用来定义外键。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PRIMARY KEY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;主键约束。NOT NULL 和 UNIQUE 的结合。
确保某列（或多个列的结合）有唯一标识，有助于更容易更快速地找到表中的一个特定的记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FOREIGN KEY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;外键约束。保证一个表中的数据匹配另一个表中的值的参照完整性。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CHECK&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;保证列中的值符合指定的条件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;规定没有给列赋值时的默认值。
在插入行时如果不给出值，则用默认值赋值。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;主键约束&lt;/span&gt;
    column1  Type1  &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;默认为允许&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，可以不用指出&lt;/span&gt;
    column2  Type2  [&lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;], 
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;不允许&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;的列，必须用&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;指出&lt;/span&gt;
    column3  Type3  &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;用&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;指定默认值&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; default_val &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;是&lt;/span&gt; Type4 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;类型的值&lt;/span&gt;
    column4  Type4  &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; default_val,
    ...
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;not-null-非空约束&#34;&gt;NOT NULL 非空约束&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;添加 NOT NULL 约束：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;MODIFY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;column_name&lt;/span&gt; Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;unique-唯一约束&#34;&gt;UNIQUE 唯一约束&lt;/h2&gt;
&lt;p&gt;每个表可以有多个 UNIQUE 约束。&lt;/p&gt;
&lt;p&gt;创建表时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;方法一：直接在列定义中用&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关键字指出&lt;/span&gt;
    column2 Type2 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;方法二：定义列后使用&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt;()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; (column1)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 UNIQUE 约束，并定义多个列的 UNIQUE 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    column2 Type2 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;可以不用定义&lt;/span&gt; u_name
    &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; [u_name] &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; (column1, column2, ...)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;更新表定义时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;column_name&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 UNIQUE 约束，并定义多个列的 UNIQUE 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; name &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;可以省略&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; u_name &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; (column1, column2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;撤销 UNIQUE 约束：&lt;/p&gt;
&lt;p&gt;MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; u_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL Server / Oracle / MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; u_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;primary-key-主键约束&#34;&gt;PRIMARY KEY 主键约束&lt;/h2&gt;
&lt;p&gt;只要满足以下条件，就可以被用作主键：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;任意两行的主键值都不相同（主键必须包含唯一值）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每行都具有一个主键值（主键列不能包含 NULL 值）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;包含主键值的列从不修改或更新。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主键值不能重用。如果从表中删除某一行，其主键值不分配给新行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;创建表时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 在列定义中直接指出主键
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;,
    ...
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 通过 PRIMARY KEY () 定义
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (column1)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 PRIMARY KEY 约束，并定义多个列的 PRIMARY KEY 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;可以不用定义&lt;/span&gt; pk_name
    &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; [pk_name] &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (column1, column2, ...)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;更新表定义时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;column_name&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 PRIMARY KEY 约束，并定义多个列的 PRIMARY KEY 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; name &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;可以省略&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; pk_name &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; (column1, column2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;撤销 PRIMARY KEY 约束：&lt;/p&gt;
&lt;p&gt;MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL Server / Oracle / MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; pk_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;foreign-key-外键约束&#34;&gt;FOREIGN KEY 外键约束&lt;/h2&gt;
&lt;p&gt;创建表时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;方法一：使用&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关键字&lt;/span&gt;
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; table1(column_1),
    column2 Type2 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    column2 Type2 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;方法二：使用&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; ()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (column2) &lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; table2(column_2),
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;命名&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;约束&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; [fk_name] &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (column3)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; table3(column_3)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;更新表定义时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (column1)
&lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; table1(column_1);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 FOREIGN KEY 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; fk_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (column1)
&lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; table1(column_1);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;撤销 FOREIGN KEY 约束：&lt;/p&gt;
&lt;p&gt;MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; fk_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL Server / Oracle / MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; fk_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;check-检查约束&#34;&gt;CHECK 检查约束&lt;/h2&gt;
&lt;p&gt;CHECK 约束常见用途：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;检查最小或最大值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指定范围。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只允许特定值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;创建表时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;限制&lt;/span&gt; column1 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;的值大于&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; (column1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
    column2 Type2 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;限制&lt;/span&gt; column2 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;只能取&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;或&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;N&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; (column2 &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[YN]&amp;#39;&lt;/span&gt;)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 CHECK 约束，并定义多个列的 CHECK 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    column2 Type2 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; chk_name &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; (column1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; column2 &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[YN]&amp;#39;&lt;/span&gt;)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;修改表定义时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; (column1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 CHECK 约束，并定义多个列的 CHECK 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; chk_name &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; (column1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; column2 &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[YN]&amp;#39;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;撤销 CHECK 约束：&lt;/p&gt;
&lt;p&gt;MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; chk_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL Server / Oracle / MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; chk_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;default-默认约束&#34;&gt;DEFAULT 默认约束&lt;/h2&gt;
&lt;p&gt;创建表时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; default_val &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;是&lt;/span&gt; Type4 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;类型的值&lt;/span&gt;
    column1  Type1  &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; default_val,
    ...
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 可以使用类似 GETDATE() 的函数插入系统值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;默认值为当前的日期&lt;/span&gt;
    birthday  DATE  &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; GETDATE(),
    ...
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;更新表结构时：&lt;/p&gt;
&lt;p&gt;MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; column1 &lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; default_val;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL Server / MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; name &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; default_val &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; column1;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Oracle：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;MODIFY&lt;/span&gt; column1 &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; default_val;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;撤销 DEFAULT 约束：&lt;/p&gt;
&lt;p&gt;MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; column1 &lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL Server / Oracle / MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COLUMN&lt;/span&gt; column1 &lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;auto-increment-字段&#34;&gt;AUTO INCREMENT 字段&lt;/h1&gt;
&lt;p&gt;在定义表时，在列中添加 auto-increment 字段可以在新纪录插入表时对该列生成一个唯一的数字。&lt;/p&gt;
&lt;p&gt;定义为 auto-increment 字段的列必须是整数类型。&lt;/p&gt;
&lt;p&gt;定义为 auto-increment 的列常常被定义为 &lt;code&gt;PRIMARY KEY&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;MySQL 使用 &lt;code&gt;AUTO_INCREMENT&lt;/code&gt; 关键字来执行 auto-increment 任务：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;定义&lt;/span&gt; column1 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;为&lt;/span&gt; AUTO &lt;span style=&#34;color:#66d9ef&#34;&gt;INCREMENT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;主键字段&lt;/span&gt;
    column1 TYPE1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; AUTO_INCREMENT,
    column2 TYPE2,
    column3 TYPE3,
    ...
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;定义了 AUTO_INCREMENT 字段后，可以不用对该列指定值，或者对该列指定为 NULL 值（会自动添加一个唯一的值）。&lt;/p&gt;
&lt;p&gt;MySQL 的 AUTO_INCREMENT 只能在 key 上被定义。PRIMARY KEY 和 UNIQUE 都是有效的定义。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- val2 和 val3 是分别与 column2 和 column3 同类型的值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;-- 不对 auto-increment 列指定值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tab_name ( column2, column3 )
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; ( val2, val3 );

&lt;span style=&#34;color:#75715e&#34;&gt;-- 指定为 NULL 值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tab_name ( column1, column2, column3)
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; ( &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;, val2, val3);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;AUTO_INCREMENT 默认的开始值是 &lt;code&gt;1&lt;/code&gt;，每新增一条记录都会递增 &lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;让 AUTO_INCREMENT 序列以其他的值起始：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- number 是任意数字
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name AUTO_INCREMENT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;number;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MySQL 设定起始值只能在建表后使用 &lt;code&gt;ALTER TABLE&lt;/code&gt; 语句。也可以在建表后直接使用 &lt;code&gt;ALTER TABLE&lt;/code&gt; 语句定义 AUTO_INCREMENT 以及它的起始值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 INT &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;,
    ...
);
&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_test AUTO_INCREMENT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;number;
&lt;span style=&#34;color:#75715e&#34;&gt;-- number 是任意数字
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;MS SQL Server 使用 &lt;code&gt;IDENTITY()&lt;/code&gt; 来执行 auto-increment 任务：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- IDENTITY(initial, incremental) 中，
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- initial 是初始值，incremental 是递增值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 即，以 initial 作为初始值，每新增一条记录递增 incremental
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 INT &lt;span style=&#34;color:#66d9ef&#34;&gt;IDENTITY&lt;/span&gt;(initial, incremental) &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;,
    ...
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;插入数据的方法同 MySQL。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Oracle 通过创建 &lt;code&gt;sequence&lt;/code&gt; 对象（该对象生成数字序列）创建 auto-increment 字段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; SEQUENCE sp_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;MINVALUE&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;最小值为&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;START&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;起始值为&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;INCREMENT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;每次递增&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CACHE&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;缓存&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;个值以提高性能&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;插入新记录时，必须使用 &lt;code&gt;sequence&lt;/code&gt; 对象的 &lt;code&gt;nextval&lt;/code&gt; 函数（该函数从 &lt;code&gt;sp_name&lt;/code&gt; 序列中取回下一个值）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 假设 tab_name 已被创建，
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 且要对 column1 使用 nextval() 函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tab_name ( column1, column2, column3)
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; ( sp_name.nextval, val2, val3);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;视图&#34;&gt;视图&lt;/h1&gt;
&lt;p&gt;视图是虚拟的表。视图并不包含数据，它只包含使用时动态检索数据的查询。视图的 SELECT 用法与表的用法基本相同。&lt;/p&gt;
&lt;p&gt;使用视图的原因：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;重用 SQL 语句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简化复杂的 SQL 操作（无需知道视图的基本查询细节）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用表的一部分而不是整个表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保护数据。
可以授予用户访问表的特定部分的权限，而不是整个表的访问权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更改数据格式和表示。
视图可返回与底层表的表示和格式不同的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;视图的使用规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;视图名必须为一且不能与其他视图或表重名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于可创建的视图数目没有限制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建视图，必须具有足够的访问权限（通常由数据库管理人员授予）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视图可以嵌套，但允许的嵌套层数在不同的 DBMS 中有所不同。
嵌套视图、使用多个联结和过滤创建复杂的视图都会使性能下降。在产品环境中使用之前，应该对其进行全面测试。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;许多 DBMS 禁止在视图查询中使用 &lt;code&gt;ORDER BY&lt;/code&gt; 子句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有些 DBMS 要求对返回的所有列进行命名，如果列是计算字段，则需要使用别名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视图不能索引，也不能有关联的触发器或默认值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有些 DBMS 把视图作为只读的查询（不能将数据写回底层表，如 SQLite）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有些 DBMS 禁止对视图中的行进行插入或更新后，该行不再属于该视图的操作。
默认情况下，如果删除视图中的某行的某列后，可能会导致该行不属于该视图。但是某些 DBMS 会防止这种情况发生。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;create-view-创建视图&#34;&gt;CREATE VIEW 创建视图&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;CREATE VIEW&lt;/code&gt; 语句创建视图，通常包含两部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;视图名；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SELECT&lt;/code&gt; 查询语句。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;视图的用途：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;利用视图简化复杂的联结：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VIEW&lt;/span&gt; view_name &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1, table2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用视图重新格式话检索出的数据：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, ... 指需要重命名的字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VIEW&lt;/span&gt; view_name &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; alias1, filed2 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; alias2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用视图过滤不想要的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一般创建的视图都不会绑定特定的数据，这会提高视图的可重用性。&lt;/p&gt;
&lt;p&gt;从视图检索数据时如果使用了一条 &lt;code&gt;WHERE&lt;/code&gt; 子句，则两组子句（一组在视图中，另一组是传递给视图的）将自动组合。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;drop-view-删除视图&#34;&gt;DROP VIEW 删除视图&lt;/h2&gt;
&lt;p&gt;通过 &lt;code&gt;DROP VIEW&lt;/code&gt; 删除视图（仅删除视图的定义，视图中并包含真实的数据）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VIEW&lt;/span&gt; view_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;索引&#34;&gt;索引&lt;/h1&gt;
&lt;p&gt;索引通过排序数据以加快搜索和排序操作的速度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;索引改善检索操作的性能，但降低了数据插入、修改和删除的性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引数据可能要占用大量的存储空间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户无法看到索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;并非所有数据都适合做索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引用于数据过滤和数据排序。如果经常以某种特定的顺序排序数据，则该数据可能适合做索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以在索引中定义多个列。这样的索引仅在以这个列组合排序时有用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;create-index-创建索引&#34;&gt;CREATE INDEX 创建索引&lt;/h2&gt;
&lt;p&gt;索引使用 &lt;code&gt;CREATE INDEX&lt;/code&gt; 语句创建（不同的 DBMS 创建索引的语句变化很大）。&lt;/p&gt;
&lt;p&gt;创建一个允许使用重复值的索引：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; index_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; tab_name (column1, column2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建唯一索引（不允许两个行拥有相同的索引值）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; index_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; tab_name (column1, column2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;索引必须唯一命名。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;drop-index-删除索引&#34;&gt;DROP INDEX 删除索引&lt;/h2&gt;
&lt;p&gt;MySQL:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; index_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; index_name &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MS SQL Server：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; tab_name.index_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;DB2 / Oracle：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; index_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
</description>
        </item>
        
    </channel>
</rss>
