<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>SQL on Linner&#39;s Blog</title>
        <link>https://blog.linner.asia/tags/sql/</link>
        <description>Recent content in SQL on Linner&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh</language>
        <lastBuildDate>Sun, 14 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.linner.asia/tags/sql/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Druid 数据库连接池</title>
        <link>https://blog.linner.asia/p/druid-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</link>
        <pubDate>Sun, 14 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://blog.linner.asia/p/druid-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</guid>
        <description>&lt;h1 id=&#34;数据库连接池&#34;&gt;数据库连接池&lt;/h1&gt;
&lt;p&gt;数据库连接池是个容器, 负责分配, 管理数据库连接 (Connection).&lt;/p&gt;
&lt;p&gt;数据库连接池允许应用程序重复使用一个现有的数据库连接, 而不是再重新建立一个. 从而减少资源浪费.&lt;/p&gt;
&lt;p&gt;数据库连接池会自动释放超过最大空闲时间的数据库连接 (强制释放), 来避免因为没有释放数据库连接而引起的数据库连接遗漏.&lt;/p&gt;
&lt;p&gt;使用数据库连接池的好处:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源可以重用&lt;/li&gt;
&lt;li&gt;提升系统响应速度&lt;/li&gt;
&lt;li&gt;避免数据库连接遗漏&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在通常情况下使用JDBC, 有可能会反复地创建和销毁 &lt;code&gt;Connection&lt;/code&gt;对象. 这样重复创建销毁的过程特别耗费计算机的性能和时间.&lt;/p&gt;
&lt;p&gt;而数据库使用了数据库连接池后，就能达到Connection对象的复用.&lt;/p&gt;
&lt;p&gt;连接池是在一开始就创建好了一些连接 (Connection) 对象存储起来. 用户需要连接数据库时, 不需要自己创建连接, 而只需要从连接池中获取一个连接进行使用, 使用完毕后再将连接对象归还给连接池; 这样就可以起到资源重用, 也节省了频繁创建连接销毁连接所花费的时间, 从而提升了系统响应的速度.&lt;/p&gt;
&lt;p&gt;常见的数据库连接池有:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DBCP&lt;/li&gt;
&lt;li&gt;C3P0&lt;/li&gt;
&lt;li&gt;Druid&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;druid&#34;&gt;Druid&lt;/h1&gt;
&lt;h2 id=&#34;配置-druid&#34;&gt;配置 Druid&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://repo1.maven.org/maven2/com/alibaba/druid/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;下载Druid jar包&lt;/a&gt;, 并导入:&lt;/p&gt;
&lt;p&gt;在项目中, 将下载好的jar包放入项目的 &lt;code&gt;lib&lt;/code&gt;目录中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后点击鼠标右键&amp;ndash;&amp;gt;Add as Library (添加为库).&lt;/li&gt;
&lt;li&gt;在添加为库文件的时候，有如下三个选项:
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Global Library: 全局有效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Project Library: 项目有效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Module Library: 模块有效&lt;/p&gt;
&lt;p&gt;选择Module Library.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在项目目录下定义Druid配置文件 &lt;code&gt;druid.properties&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;driverClassName=com.mysql.jdbc.Driver
url=jdbc:mysql:///db1?useSSL=false&amp;amp;useServerPrepStmts=true
username=root
password=1234
# 初始化连接数量
initialSize=5
# 最大连接数
maxActive=10
# 最大等待时间
maxWait=3000
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加载配置文件:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;Properties prop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Properties&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
prop&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;demo/src/druid.properties&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用-druid&#34;&gt;使用 Druid&lt;/h2&gt;
&lt;p&gt;Java中从数据库连接池获取连接对象, 使用的是官方提供的数据库连接池标准接口, 由第三方组织实现此接口. 该接口提供了获取连接的功能:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;Connection &lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
                  &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; SQLException
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;因此, 使用Druid获取数据库连接还需要以下两步:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;获取数据库连接池对象:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; DataSource dataSource &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DruidDataSourceFactory&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createDataSource&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;prop&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从数据库连接池中获取连接 (&lt;code&gt;Connection&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;Connection connection &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataSource&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;操作实例&#34;&gt;操作实例&lt;/h1&gt;
&lt;h2 id=&#34;需求分析&#34;&gt;需求分析&lt;/h2&gt;
&lt;p&gt;完成商品品牌数据的增删改查操作&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查询：查询所有数据&lt;/li&gt;
&lt;li&gt;添加：添加品牌&lt;/li&gt;
&lt;li&gt;修改：根据id修改&lt;/li&gt;
&lt;li&gt;删除：根据id删除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;环境准备&#34;&gt;环境准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建数据库表:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 删除tb_brand表
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EXISTS&lt;/span&gt; tb_brand;
&lt;span style=&#34;color:#75715e&#34;&gt;-- 创建tb_brand表
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tb_brand (
    id INT &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; AUTO_INCREMENT, &lt;span style=&#34;color:#75715e&#34;&gt;-- id 主键
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    brand_name VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;), &lt;span style=&#34;color:#75715e&#34;&gt;-- 品牌名称
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    company_name VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;), &lt;span style=&#34;color:#75715e&#34;&gt;-- 企业名称
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ordered INT, &lt;span style=&#34;color:#75715e&#34;&gt;-- 排序字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    description VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;), &lt;span style=&#34;color:#75715e&#34;&gt;-- 描述信息
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    status INT &lt;span style=&#34;color:#75715e&#34;&gt;-- 状态：0：禁用  1：启用
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;);
&lt;span style=&#34;color:#75715e&#34;&gt;-- 添加数据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tb_brand (brand_name, company_name, ordered, description, status)
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;三只松鼠&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;三只松鼠股份有限公司&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;好吃不上火&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;华为&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;华为技术有限公司&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;华为致力于把数字世界带入每个人、每个家庭、每个组织，构建万物互联的智能世界&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;小米&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;小米科技有限公司&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;are you ok&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建 &lt;code&gt;pojo&lt;/code&gt;包, 并在包中添加 &lt;code&gt;Brand&lt;/code&gt;实体类:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; pojo&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* 品牌
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;*/&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Brand&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; Integer id&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// id 主键
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String brandName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 品牌名称
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String companyName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 企业名称
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; Integer ordered&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 排序字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String description&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 描述信息
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; Integer status&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 状态：0：禁用  1：启用
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Integer &lt;span style=&#34;color:#a6e22e&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setId&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Integer id&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;getBrandName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; brandName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setBrandName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String brandName&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;brandName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; brandName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;getCompanyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; companyName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setCompanyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String companyName&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;companyName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; companyName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Integer &lt;span style=&#34;color:#a6e22e&#34;&gt;getOrdered&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ordered&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setOrdered&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Integer ordered&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ordered&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ordered&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;getDescription&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; description&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setDescription&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String description&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;description&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; description&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Integer &lt;span style=&#34;color:#a6e22e&#34;&gt;getStatus&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; status&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setStatus&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Integer status&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; status&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Brand{&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, brandName=&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; brandName &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, companyName=&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; companyName &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, ordered=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ordered &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, description=&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; description &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, status=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; status &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实现操作&#34;&gt;实现操作&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; dao&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pojo.Brand&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.alibaba.druid.pool.DruidDataSourceFactory&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; javax.sql.DataSource&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.io.FileInputStream&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.sql.*&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.Properties&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * 品牌数据的增删改查操作
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; */&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BrandDAO&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; DataSource dataSource&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;// 获取Connection:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// - 导入jar包 &amp;amp; 定义配置文件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// - 加载配置文件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            Properties prop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Properties&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
            prop&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;demo/src/druid.properties&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// - 获取连接池对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            dataSource &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DruidDataSourceFactory&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createDataSource&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;prop&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Exception e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 查询所有
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 1. SQL: SELECT * FROM tb_brand
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 2. 参数: 不需要
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 3. 结果: ArrayList&amp;lt;Brand&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Brand&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;selectAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 获取数据库连接Connection
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Connection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataSource&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *2. 定义SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String sql &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SELECT * FROM tb_brand&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 获取pstmt对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        PreparedStatement pstmt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;prepareStatement&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sql&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      
        &lt;span style=&#34;color:#75715e&#34;&gt;// *4. 设置参数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      
        &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 执行SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        ResultSet rs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;executeQuery&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *6. 处理结果: ArrayList&amp;lt;Brand&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Brand brand &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
        ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Brand&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; brands &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// - 遍历结果集
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;next&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 获取数据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            String brandName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brand_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            String companyName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;company_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ordered &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ordered&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            String description &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; status &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 封装Brand对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            brand &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Brand&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
            brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setId&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setCompanyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;companyName&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setOrdered&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ordered&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setDescription&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;description&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setStatus&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;status&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

            &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 装载ArrayList集合
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            brands&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;brand&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 7. 释放资源
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        rs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 8. 返回结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; brands&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 添加
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 1. SQL:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;         INSERT INTO tb_brand(
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            brand_name,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            company_name,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            ordered,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            description,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            status)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;         VALUES(?,?,?,?,?)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 2. 参数: 除了id之外的所有参数信息
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 3. 结果: boolean
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Brand brand&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 获取数据库连接Connection
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Connection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataSource&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *2. 定义SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String sql &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                INSERT INTO tb_brand(
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    brand_name,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    company_name,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    ordered,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    description,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    status)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                VALUES(?,?,?,?,?)&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 获取pstmt对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        PreparedStatement pstmt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;prepareStatement&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sql&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *4. 设置参数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBrandName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getCompanyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getOrdered&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getDescription&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getStatus&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 执行SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;executeUpdate&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 返回影响的行数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 释放资源
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 7. 返回结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 修改
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 1. SQL:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;         UPDATE tb_brand
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;         SET brand_name=?,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            company_name=?,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            ordered=?,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            description=?,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            status=?
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;         WHERE id=?
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 2. 参数: 所有
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 3. 结果: boolean
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Brand brand&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 获取数据库连接Connection
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Connection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataSource&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *2. 定义SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String sql &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                UPDATE tb_brand
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                SET brand_name=?,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    company_name=?,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    ordered=?,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    description=?,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    status=?
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                WHERE id=?&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 获取pstmt对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        PreparedStatement pstmt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;prepareStatement&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sql&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *4. 设置参数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBrandName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getCompanyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getOrdered&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getDescription&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getStatus&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;6&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; brand&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 执行SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;executeUpdate&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 返回影响的行数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 释放资源
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 8. 返回结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 删除
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 1. SQL:DELETE FROM tb_brand WHERE id=?
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 2. 参数: id
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 3. 结果: boolean
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;deleteById&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 获取数据库连接Connection
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Connection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataSource&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *2. 定义SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String sql &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DELETE FROM tb_brand WHERE id=?&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 获取pstmt对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        PreparedStatement pstmt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;prepareStatement&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sql&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// *4. 设置参数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setInt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; id&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 执行SQL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;executeUpdate&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 返回影响的行数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 释放资源
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// 7. 返回结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>MySQL 环境配置</title>
        <link>https://blog.linner.asia/p/mysql-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate>
        
        <guid>https://blog.linner.asia/p/mysql-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
        <description>&lt;h1 id=&#34;ubuntu&#34;&gt;Ubuntu&lt;/h1&gt;
&lt;p&gt;MySQL 8 安装：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先更新本地存储库索引：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从 APT 存储库安装 MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install MySQL-server -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看 MySQL 版本，验证是否安装成功：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mysql --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查 MySQL 是否正在运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;systemctl status mysql.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果服务未运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl start mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;MySQL 安装完成后需要更改密码。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;查看默认账户和密码：&lt;/p&gt;
&lt;p&gt;执行后找到 &lt;code&gt;user&lt;/code&gt; 和 &lt;code&gt;password&lt;/code&gt;，如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo vim /etc/mysql/debian.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo cat /etc/mysql/debian.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;找到如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-纯文本&#34; data-lang=&#34;纯文本&#34;&gt;user     = debian-sys-maint
password = 12E0cDBeusG6vANp
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用默认账户登录：&lt;/p&gt;
&lt;p&gt;然后输入默认密码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mysql -udebian-sys-maint -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-纯文本&#34; data-lang=&#34;纯文本&#34;&gt;12E0cDBeusG6vANp
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入以下命令修改 root 密码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;USER&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; identified &lt;span style=&#34;color:#66d9ef&#34;&gt;WITH&lt;/span&gt; mysql_native_password &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your_password&amp;#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改完成后执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;FLUSH &lt;span style=&#34;color:#66d9ef&#34;&gt;privileges&lt;/span&gt;;
QUIT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后重启 MySQL 后就可以使用 root 用户了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo service mysql restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mysql -uroot -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>SQL语句</title>
        <link>https://blog.linner.asia/p/sql%E8%AF%AD%E5%8F%A5/</link>
        <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
        
        <guid>https://blog.linner.asia/p/sql%E8%AF%AD%E5%8F%A5/</guid>
        <description>&lt;h1 id=&#34;基本概念&#34;&gt;基本概念&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;SQL&lt;/strong&gt;（&lt;strong&gt;Structured Query Language&lt;/strong&gt;，发音为 sequal）是一种专门用来与数据库沟通的语言。通过 SQL，用户可以对数据库进行各种操作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;标准 SQL 由 ANSI 标准委员会管理，从而称为 ANSISQL。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;数据库&#34;&gt;数据库&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;数据库&lt;/strong&gt;（&lt;strong&gt;database&lt;/strong&gt;）是一个用于保存有组织的数据的容器或数据集合。&lt;/p&gt;
&lt;p&gt;每个数据库都有唯一的标识符。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;表&#34;&gt;表&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;表&lt;/strong&gt;（&lt;strong&gt;table&lt;/strong&gt;）是某种特定类型数据的结构化清单，用于存储某种特定类型的数据。&lt;/p&gt;
&lt;p&gt;在同一个数据库中的每个表都有一个唯一的标识符来标识自己。因此，在同个数据库中，不能拥有两个名称相同的表，但在不同的数据库中可以使用相同的表名。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;模式&#34;&gt;模式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;模式&lt;/strong&gt;（&lt;strong&gt;schema&lt;/strong&gt;）是一种关于数据库和表的布局及特性的信息。它是用来描述数据库中表的特性（如，存储的数据类型、数据的分解方式、各部分的信息的命名），或描述整个数据库（和其中表的关系）。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;行和列&#34;&gt;行和列&lt;/h3&gt;
&lt;h4 id=&#34;列&#34;&gt;列&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;列&lt;/strong&gt;（&lt;strong&gt;column&lt;/strong&gt;）是表中的一个字段（即，表的组成部分）。所有的表都是由一个或多个列组成的。列存储表中的某部分信息，且这部分信息必须是同一种数据类型（&lt;strong&gt;datatype&lt;/strong&gt;）。&lt;/p&gt;
&lt;p&gt;数据类型限制（或允许）该列中存储的数据的种类。它还能帮助正确地分类数据，并在优化磁盘使用方面起重要的作用。&lt;/p&gt;
&lt;p&gt;利用特定的列，可以对数据进行分类和过滤。所以，数据分解十分重要。&lt;/p&gt;
&lt;p&gt;数据类型及其名称是 SQL 不兼容的重要原因之一。对于不同的 DBMS，大多数基本数据类型都得到了一致的支持，但许多高级数据类型却没有。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;行&#34;&gt;行&lt;/h4&gt;
&lt;p&gt;表中每一条记录的数据都是按&lt;strong&gt;行&lt;/strong&gt;（&lt;strong&gt;row&lt;/strong&gt;）存储的。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;主键&#34;&gt;主键&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;主键&lt;/strong&gt;（&lt;strong&gt;primary key&lt;/strong&gt;）是用来唯一标识表中每一行的列（如国际标准书号 ISBN 就可作为主键），可以是一列或多列。&lt;/p&gt;
&lt;p&gt;满足以下条件的列即可作为主键：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;任意两行都不具有相同的主键值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每一行都必须具有一个主键值（主键列不允许空值 NULL）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主键列中的值不允许修改或更新。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主键值不能重用（即使某行从表中删除，它的主键依然不能赋给以后的新行）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在使用多列作为主键时，上述条件必须应用到所有列，即所有列值的组合必须是唯一的（但不同列中可以存在相同的值）。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;关系数据库&#34;&gt;关系数据库&lt;/h2&gt;
&lt;p&gt;关系数据库由关系表组成，而关系表的设计就是要把信息分解成多个表，一类数据一个表。各表通过某些共同的值互相关联。&lt;/p&gt;
&lt;p&gt;常见的两个关系表都会有至少一个相同类型且表示相同的列，对于其中一个表，该列是这个表的主键，从而能使另一个表甚至关系数据库中的其他表通过这个主键对应到这个表中的行。&lt;/p&gt;
&lt;p&gt;一个优秀的关系数据库通常具有以下优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;关系库中的每个表中的每个行的信息重复很少，减少了时间和空间的浪费。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果信息有更新，仅需更新对应的表中的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据是一致的（没有重复的数据），使得处理数据和生成报表更简单。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结：关系数据库的&lt;strong&gt;可伸缩性&lt;/strong&gt;（&lt;strong&gt;scale&lt;/strong&gt;）远比非关系数据库要好。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可伸缩是指，能够适应不断增加的工作量而不失败。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;数据库管理系统&#34;&gt;数据库管理系统&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;数据库管理系统&lt;/strong&gt;（&lt;strong&gt;DataBase Management System&lt;/strong&gt;，&lt;strong&gt;DBMS&lt;/strong&gt;）是一种用于创建和操纵数据库的软件。&lt;/p&gt;
&lt;p&gt;绝大多数 DBMS 都支持 ANSI SQL，但一些 DBMS 有自己的扩展。不同的 SQL 实现有自己的名称（如 Oracle 的 PL/SQL、微软 SQL Server 的 Transact-SQL 等）。&lt;/p&gt;
&lt;p&gt;DBMS 可以管理多个数据库，一般开发人员会针对每一个应用创建一个数据库。为保存应用中实体的数据，一般会在数据库创建多个表，以保存程序中实体的数据。&lt;/p&gt;
&lt;p&gt;数据库管理系统、数据库和表的关系：&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;sql-语句分类&#34;&gt;SQL 语句分类&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DDL&lt;/strong&gt;（&lt;strong&gt;Data Definition Language&lt;/strong&gt;，&lt;strong&gt;数据定义语言&lt;/strong&gt;）：用来定义数据库对象：数据库，表，列等。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;create&lt;/code&gt;、&lt;code&gt;drop&lt;/code&gt;、&lt;code&gt;alter&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DML&lt;/strong&gt;（&lt;strong&gt;Data Manipulation Language&lt;/strong&gt;，&lt;strong&gt;数据操作语言&lt;/strong&gt;）：用来对数据库中表的数据进行增删改。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;insert&lt;/code&gt;、&lt;code&gt;delete&lt;/code&gt;、&lt;code&gt;update&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DQL&lt;/strong&gt;（&lt;strong&gt;Data Query Language&lt;/strong&gt;，&lt;strong&gt;数据查询语言&lt;/strong&gt;）：用来查询数据库中表的记录。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;select&lt;/code&gt;、&lt;code&gt;where&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DCL&lt;/strong&gt;（&lt;strong&gt;Data Control Language&lt;/strong&gt;，&lt;strong&gt;数据控制语言&lt;/strong&gt;）：用来定义数据库的访问权限和安全级别，及创建用户。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;GRANT&lt;/code&gt;、&lt;code&gt;REVOKE&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;sql-语法&#34;&gt;SQL 语法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQL语句可以单行或多行书写，以分号结尾。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可使用空格和缩进来增强语句的可读性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大多数数据库的 SQL 语句不区分大小写，关键字建议使用大写（可以提高运行速度）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;字段&#34;&gt;字段&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;字段&lt;/strong&gt;（&lt;strong&gt;filed&lt;/strong&gt;）基本上与列的意思相同，但字段这个术语通常在计算字段这种场合下使用。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;select-语句&#34;&gt;SELECT 语句&lt;/h1&gt;
&lt;p&gt;任何 SQL 语句都是&lt;strong&gt;查询&lt;/strong&gt;（&lt;strong&gt;query&lt;/strong&gt;）。但此术语一般指 SELECT 语句。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;检索列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 从 tab_name 中检索出filed1, filed2 等列（字段）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 可以检索单个列或多个列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;列的顺序是按照指令中指出的列名的顺序显示。行的顺序是按照存储在物理内存中的顺序显示。&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;strong&gt;通配符&lt;/strong&gt; &lt;code&gt;*&lt;/code&gt; 检索表中的所有列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 检索出 tab_name 中所有的列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一般情况下，返回的列是按照存储在物理内存中的顺序显示的，并没有特定顺序。可能是按照数据被添加到表中的顺序显示（在没有增删数据的情况下），也可能不是（在有数据进行过更新或删除，这个顺序将会受到 DBMS 重用回收存储空间的方式的影响）。&lt;/p&gt;
&lt;p&gt;使用通配符可以很方便地显示表中所有的列（包括名字未知的列），但这么做可能会降低检索速度和应用程序的性能（因为程序会检索所有表中的所有列）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;all-和-distinct&#34;&gt;ALL 和 DISTINCT&lt;/h2&gt;
&lt;p&gt;可以在列名前指定 &lt;code&gt;ALL&lt;/code&gt;（默认）和 &lt;code&gt;DISTINCT&lt;/code&gt; 关键字，它们表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ALL&lt;/code&gt; —— 列出当前指定的列的所有行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DISTINCT&lt;/code&gt; —— 列出由当前所有列组合的不重复的行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以对聚集函数使用 &lt;code&gt;ALL&lt;/code&gt; 和 &lt;code&gt;DISTINCT&lt;/code&gt; 关键字指定。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ALL&lt;/code&gt; —— 默认选项，包含所有的行，对聚集函数指定 &lt;code&gt;ALL&lt;/code&gt;（可忽略）表示对所有的行执行计算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DISTINCT&lt;/code&gt; —— 指定 &lt;code&gt;DISTINCT&lt;/code&gt;，包含不重复的行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对聚集函数指定 &lt;code&gt;DISTINCT&lt;/code&gt; 表示只对不重复的行进行计算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;DISTINCT&lt;/code&gt; 必须明确指出列名，而不能使用 &lt;code&gt;*&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;列出不重复的行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, ... 不重复
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DISTINCT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;DISTINCT&lt;/code&gt; 作用于所有指定的列，该 SELECT 语句会返回所有不重复的 &lt;code&gt;filed1, filed2, ...&lt;/code&gt; 组合的行。使用 &lt;code&gt;DISTINCT *&lt;/code&gt; 可以返回由所有列组合的不重复的行。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;限制返回的行&#34;&gt;限制返回的行&lt;/h2&gt;
&lt;p&gt;各 DBMS 实现并不相同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQL Server：使用 &lt;code&gt;TOP&lt;/code&gt; 关键字。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 返回前 n 行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 是任一正整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; TOP n filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DB2：&lt;code&gt;FETCH FIRST n ROWS ONLY&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 返回前 n 行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 是任一正整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;FETCH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FIRST&lt;/span&gt; n &lt;span style=&#34;color:#66d9ef&#34;&gt;ROWS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ONLY&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Oracle：基于 &lt;code&gt;ROWNUM&lt;/code&gt;（行计数器）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 返回前 n 行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 是任一正整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; ROWNUM &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL、MariaDB、PostgreSQL and SQLite：使用 &lt;code&gt;LIMIT&lt;/code&gt; 子句。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 返回前 n 行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 是任一正整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;LIMIT&lt;/span&gt; n;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 返回从第 m 行开始的前 n 行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 是任一正整数，m 是任一非负整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;LIMIT&lt;/span&gt; n &lt;span style=&#34;color:#66d9ef&#34;&gt;OFFSET&lt;/span&gt; m;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 MySQL、MariaDB 和 SQLite 中，上条指令可简化为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 返回从第 m 行开始的前 n 行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 是任一正整数，m 是任一非负整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- m 指定开始的行数，n 指定返回的行数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;LIMIT&lt;/span&gt; m, n;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;行是从 0 开始计数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;order-by-排序数据&#34;&gt;ORDER BY 排序数据&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;ORDER BY&lt;/code&gt; 子句取一个或多个列的名字，据此对数据进行排序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- order1, order2, ... 是排序的依据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 该语句会先对 order1 进行排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 仅在具有多行相同 order1 值时，才按照 order2 排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; order1, order2, ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ORDER BY&lt;/code&gt; 子句必须是 SELECT 语句中的最后一条子句。默认是升序排序（从 A 到 Z）。&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按相对列位置进行排序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n1、n2 …… 是小于或等于指定的列的总数的正整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n1、n2 …… 这组数中的每两个数都不相等
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; n1, n2, ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;按相对位置排序的好处是不用输入列名，但有可能会造成错用列进行排序（特别是在对 SELECT 清单进行更改时）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实际列名排序和相对列位置排序可混合使用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;📌最好的排序方式是，对冗长的列名重命名，然后使用列名进行排序。这样可以减少错误的出现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;指定排序方向&#34;&gt;指定排序方向&lt;/h3&gt;
&lt;p&gt;指定排序的关键字：&lt;code&gt;ASC&lt;/code&gt; —— 升序排序、&lt;code&gt;DESC&lt;/code&gt; —— 降序排序。&lt;code&gt;ASC&lt;/code&gt; 和 &lt;code&gt;DESC&lt;/code&gt; 必须对每一列进行指定，因为它们只会对直接位于其前面的列名指定排序方式。可以对某一列指定 &lt;code&gt;ASC&lt;/code&gt;（或 &lt;code&gt;DESC&lt;/code&gt;）后对其它列指定 &lt;code&gt;DESC&lt;/code&gt;（或 &lt;code&gt;ASC&lt;/code&gt;）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- order1, order2, ... 是排序的依据，且都被指定了升序排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; order1 &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;, order2, ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DESC&lt;/code&gt; 关键字指定降序排序。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- order1, order2, ... 是排序的依据，且都被指定了降序排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; order1 &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;, order2 &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;, ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对某些列指定升序排序，对另外某些列指定升序排序。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- asc_order1, asc_order2, ... 都是指定升序排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- desc_order1, desc_order2, ... 都是指定降序排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; asc_order1 &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;, asc_order2, ..., desc_order1 &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;, desc_order2 &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;, ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大多数 DBMS 默认使用字典（dictionary）排序（即大小写字母被视为相同），但许多 DBMS 允许改变这种方式。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;where-过滤数据&#34;&gt;WHERE 过滤数据&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;WHERE&lt;/code&gt; 子句能够根据指定的&lt;strong&gt;搜索条件&lt;/strong&gt;（&lt;strong&gt;search criteria&lt;/strong&gt;），检索用户需要的数据。搜索条件也被称为&lt;strong&gt;过滤条件&lt;/strong&gt;（&lt;strong&gt;filter condition1&lt;/strong&gt;）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;检索单一条件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一列名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 的类型和 n 的类型要一致
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;数据也可以在应用层进行过滤，但当 DBMS 返回的数据超出实际所需的数据时，会影响应用的性能，并且降低应用的可伸缩性，这还会造成网络宽带的浪费（服务器不得不通过网络发送多余的数据）。&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;WHERE 子句操作符&lt;/strong&gt;（条件操作符）：&lt;/p&gt;
&lt;p&gt;并非所有 DBMS 都支持所有的操作符，某些 DBMS 可能不支持个别操作符。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;操作符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;操作符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; or &lt;code&gt;!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大于等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不大于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小于等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BETWEEN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;范围在指定的两个值之间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;!&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不小于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;IS NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;为 NULL 的值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;BETWEEN&lt;/code&gt; 在指定范围内检索：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一列名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 的类型和 n 、m 的类型要一致
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- n 和 m 为低端值和高端值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 检索时匹配的值包括 n 和 m
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#66d9ef&#34;&gt;BETWEEN&lt;/span&gt; n &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; m;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;IS NULL&lt;/code&gt; 检索空值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一列名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#66d9ef&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IS NOT NULL&lt;/code&gt; 检索不为空值的行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一列名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#66d9ef&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;逻辑操作符&#34;&gt;逻辑操作符&lt;/h3&gt;
&lt;p&gt;可以在一条 &lt;code&gt;WHERE&lt;/code&gt; 子句中包含任意数量的&lt;strong&gt;逻辑操作符&lt;/strong&gt;（&lt;strong&gt;logical operator&lt;/strong&gt;），且允许两者结合以进行复杂、高级的过滤。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;AND&lt;/code&gt; 操作符检索满足所有给定条件的行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition11，condition12 …… 是包含条件操作符的子句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; condition12
    &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OR&lt;/code&gt; 操作符检索满足任一条件的行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition11，condition12 …… 是包含条件操作符的子句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; condition12
    &lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;许多 DBMS 在使用 &lt;code&gt;OR&lt;/code&gt; 操作符时，当第 1 个条件满足的情况下，就不再计算第 2 个条件。&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NOT&lt;/code&gt; 操作符是否定操作符，否定跟随在其后的条件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是任意条件子句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; condition11;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;大多数 DBMS 允许使用 NOT 否定任何条件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;in-指定条件范围&#34;&gt;IN 指定条件范围&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;IN&lt;/code&gt; 操作符用来指定条件范围，匹配范围中指定的每个条件。&lt;code&gt;IN&lt;/code&gt; 操作符后的括号中的合法值用逗号分隔。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- val1, val2, ... 是与 condition1 类型相同的一组合法值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1 &lt;span style=&#34;color:#66d9ef&#34;&gt;IN&lt;/span&gt; (val1, val2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;IN&lt;/code&gt; 操作符和 &lt;code&gt;OR&lt;/code&gt; 操作符的功能类似，但在某些方面，&lt;code&gt;IN&lt;/code&gt; 操作符有其优点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在有很多合法选项时，&lt;code&gt;IN&lt;/code&gt; 操作符可读性更强。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与其他 &lt;code&gt;AND&lt;/code&gt; 和 &lt;code&gt;OR&lt;/code&gt; 操作符组合使用 &lt;code&gt;IN&lt;/code&gt; 时，求值顺序更容易管理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IN&lt;/code&gt; 操作符一般比一组 &lt;code&gt;OR&lt;/code&gt; 操作符执行得更快。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IN&lt;/code&gt; 操作符可包含其他 SELECT 语句，能更动态地建立 WHERE 子句。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;通配符&#34;&gt;通配符&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;通配符&lt;/strong&gt;（&lt;strong&gt;wildcard&lt;/strong&gt;）是用于匹配值的一部分的特殊字符。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;搜索模式&lt;/strong&gt;（&lt;strong&gt;search pattern&lt;/strong&gt;）由字面值、通配符或两者组合构成的搜索条件。&lt;/p&gt;
&lt;p&gt;利用通配符，可以创建比较特定数据的搜索模式。要使用通配符，必须在搜索子句中使用 &lt;code&gt;LIKE&lt;/code&gt; 操作符。且通配符只能用于字符串。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用通配符搜索一般比其他简单搜索耗费更长的处理时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不要过度使用通配符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尽量不要把通配符用在搜索模式的开始处（通配符置于开始处是最慢的）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不同类型的通配符可以混合使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;%&lt;/code&gt; 通配符：表示任何字符出现任意次数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一字符类型的列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 该语句表示在 condition1 列中搜索以 ABC 开头的字符串
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
WHRER condition1 &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ABC%&amp;#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;包含 &lt;code&gt;ABC&lt;/code&gt; 的字符串：&lt;code&gt;&#39;%ABC%&#39;&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以 &lt;code&gt;ABC&lt;/code&gt; 结尾的字符串：&lt;code&gt;&#39;ABC%&#39;&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以 &lt;code&gt;A&lt;/code&gt; 为开头，以 &lt;code&gt;B&lt;/code&gt; 为结尾的字符：&lt;code&gt;&#39;A%B&#39;&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;某些 DBMS 会用空格来填补字段内容，可能会对该搜索模式造成影响。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;包含 &lt;code&gt;AB&lt;/code&gt; 和 &lt;code&gt;CD&lt;/code&gt; 的字符串：&lt;code&gt;&#39;%AB%CD%&#39;&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;_&lt;/code&gt; 通配符：表示匹配单个任意字符。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一字符类型的列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 该语句表示匹配以 ABC 结尾，开头为任意一个字符的字符串
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1 &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_ABC&amp;#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[]&lt;/code&gt; 通配符：用来指定一个字符集，它必须匹配指定位置的一个字符。&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是表中任一字符类型的列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 该语句匹配以 A 或 B 其中之一与 C 的组合的字符串（仅有两个字符）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1 &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[AB]C&amp;#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用 &lt;code&gt;^&lt;/code&gt; 可以来否定 &lt;code&gt;[]&lt;/code&gt; 定义的字符集：&lt;code&gt;&#39;[^AB]&#39;&lt;/code&gt; —— 该模式会匹配除了 &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; 之外的任何一个字符。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;拼接&#34;&gt;拼接&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;拼接&lt;/strong&gt;（&lt;strong&gt;concatenate&lt;/strong&gt;）是指将值联结到一起（将一个值附加到另一个值）构成单个值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQL Server 使用 &lt;code&gt;+&lt;/code&gt; 号拼接：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, filed3, ... 可以是任意同类型的字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; filed2 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; filed3 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DB2、Oracle、PostgreSQL 和 SQLite 使用 &lt;code&gt;||&lt;/code&gt;：&lt;code&gt;filed1 || filed2 || filed3 || ...&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 和 MariaDB 使用 &lt;code&gt;Concat()&lt;/code&gt; 函数：&lt;code&gt;Concat(filed1, filed2, filed3, ...)&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;某些 DBMS 会用空格填充字段，可以使用 &lt;code&gt;RTRIM()&lt;/code&gt; 函数来清除这些空格。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;as-指定别名&#34;&gt;AS 指定别名&lt;/h1&gt;
&lt;p&gt;使用 &lt;code&gt;AS&lt;/code&gt; 关键字赋予字段或值一个&lt;strong&gt;别名&lt;/strong&gt;（&lt;strong&gt;alias&lt;/strong&gt;）。别名既可以是一个单词，也可以是一个字符串，字符串需用引号括起。使用别名时不应使用表中实际的列名，虽然这样做也算合法，但可能会产生模糊的错误消息。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed 是一个字段或值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- alias 是 filed 的别名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 赋予别名后可以在接下来的子句中使用别名来替代这个字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;alias&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;alias&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;函数&#34;&gt;函数&lt;/h1&gt;
&lt;h2 id=&#34;数值处理函数&#34;&gt;数值处理函数&lt;/h2&gt;
&lt;p&gt;数值处理函数仅处理数值数据，是最一致、最统一的函数。&lt;/p&gt;
&lt;p&gt;常用的数值处理函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Explain&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ABC()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个数的绝对值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;COS()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个角度的余弦。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EXP()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个数的指数值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PI()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回圆周率 $\pi$ 值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SIN()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个角度的正弦。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SQRT()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个数的平方根。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TAN()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个角度的正切。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;文本处理函数&#34;&gt;文本处理函数&lt;/h2&gt;
&lt;p&gt;常用的文本处理函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Explain&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LEFT(str, num)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回字符串 &lt;code&gt;str&lt;/code&gt; 左边前 &lt;code&gt;num&lt;/code&gt; 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LENGTH(str)&lt;/code&gt;、
&lt;code&gt;DATALENGTH(str)&lt;/code&gt;
or
&lt;code&gt;LEN(str)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回字符串的长度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LOWER(str)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将字符串转换为小写。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LTRIM(str)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;去掉字符串左边的空格。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;RIGHT(str, num)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回字符串 &lt;code&gt;str&lt;/code&gt; 右边前 &lt;code&gt;num&lt;/code&gt; 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;RTRIM(str)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;去掉字符串右边的空格。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SUBSTR(str, n, size)&lt;/code&gt; or &lt;code&gt;SUBSTRING(str, n, size)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;提取字符串的组成部分。
DB2、Oracle、PostgreSQL 和 SQLite 使用 &lt;code&gt;SUBSTR()&lt;/code&gt;；
MariaDB、MySQL 和 SQL Server 使用 &lt;code&gt;SUBSTRING()&lt;/code&gt;。
&lt;code&gt;n&lt;/code&gt; 是指字符串中第 &lt;code&gt;n&lt;/code&gt; 个字符（从 1 开始计数），
&lt;code&gt;size&lt;/code&gt; 是指截取的字符串长度，截取出的字符串包括第 &lt;code&gt;n&lt;/code&gt; 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SOUNDEX(str)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回字符串的 SOUNDEX 值（描述 &lt;code&gt;str&lt;/code&gt; 语音表示的字母数字模式）。
PostgreSQL 不支持。SQLite 要开启 SQLITE_SOUNDEX 编译选项。
使用 &lt;code&gt;SOUNDEX()&lt;/code&gt; 函数对两个字符串进行比较，
使得能对字符串进行发音比较而不是字母比较。
如 &lt;code&gt;WHERE SOUNDEX(str1) = SOUNDEX(str2)&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UPPER(str)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将字符串转换为大写。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;日期和时间处理函数&#34;&gt;日期和时间处理函数&lt;/h2&gt;
&lt;p&gt;日期和时间函数在 SQL 中可移植性最差。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQL Server 使用 &lt;code&gt;DATEPART(part, date)&lt;/code&gt; 返回日期中的一部分，&lt;code&gt;part&lt;/code&gt;（不是字符型的参数）指定要返回的成分，&lt;code&gt;date&lt;/code&gt; 是要从中国年返回成分的日期。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PostgreSQL 使用 &lt;code&gt;DATE_PART(part_str, date)&lt;/code&gt; 返回日期中的一部分，&lt;code&gt;part_str&lt;/code&gt; 指定要返回的成分，&lt;code&gt;date&lt;/code&gt; 是要从中国年返回成分的日期。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Oracle 和 PostgreSQL 都支持 &lt;code&gt;EXTRACT(part FROM date)&lt;/code&gt; 返回日期中的一部分。&lt;code&gt;part&lt;/code&gt;（不是字符型）指定要返回的成分，&lt;code&gt;date&lt;/code&gt; 是要从中国年返回成分的日期。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Oracle 还支持 &lt;code&gt;to_date(date_str, form_str)&lt;/code&gt; 将字符串转化成日期，&lt;code&gt;date_str&lt;/code&gt; 是某个带有日期格式的字符串，&lt;code&gt;form_str&lt;/code&gt; 指定日期的形式。一般这样使用：&lt;code&gt;WHERE date_column BETWEEN to_date(&#39;2020-01-01&#39;, &#39;yyyy-mm-dd&#39;) AND todate(&#39;2020-12-31&#39;, &#39;yyyy-mm-dd&#39;)&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DB2、MySQL 和 MariaDB 中有 &lt;code&gt;YEAR(date)&lt;/code&gt; 和 &lt;code&gt;MONTH(date)&lt;/code&gt; 等函数用于提取年份和月份等信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 SQLite 可以使用 &lt;code&gt;strftime(&#39;%Y&#39;, date)&lt;/code&gt; 提取年份，也可以提取月份等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;MySQL Date 函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NOW()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回当前的日期和时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CURDATE()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回当前的日期。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CURTIME()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回当前的时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATE()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;提取日期或日期/时间表达式的日期部分。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EXTRACT()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回日期/时间的单独部分。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATE_ADD()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;向日期添加指定的时间间隔。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATE_SUB()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;从日期减去指定的时间间隔。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATEDIFF()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回两个日期之间的天数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATE_FORMAT()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用不同的格式显示日期/时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;SQL Server Date 函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GETDATE()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回当前的日期和时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATEPART()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回日期/时间的单独部分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATEADD()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在日期中添加或减去指定的时间间隔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATEDIFF()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回两个日期之间的时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CONVERT()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用不同的格式显示日期/时间&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;汇总数据&#34;&gt;汇总数据&lt;/h2&gt;
&lt;p&gt;使用&lt;strong&gt;聚集函数&lt;/strong&gt;（&lt;strong&gt;aggregate function&lt;/strong&gt;）可以对某些行进行计算并返回一个值。&lt;/p&gt;
&lt;p&gt;SQL 聚集函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;Explain&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AGE(filed)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回某字段的平均数，类型必须是数值类型，&lt;code&gt;AVG()&lt;/code&gt; 会忽略值为 &lt;code&gt;NULL&lt;/code&gt; 的行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;COUNT(filed)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回某字段的行数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MAX(filed)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回某字段的最大值，允许 &lt;code&gt;filed&lt;/code&gt; 是日期值，许多 DBMS 还允许 &lt;code&gt;filed&lt;/code&gt; 是字符串，如果 &lt;code&gt;filed&lt;/code&gt; 是字符串，那么 &lt;code&gt;MAX()&lt;/code&gt; 会返回按该列排序后的最后一行。&lt;code&gt;MAX()&lt;/code&gt; 忽略值为 &lt;code&gt;NULL&lt;/code&gt; 的行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MIN(filed)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回某字段的最小值，与 &lt;code&gt;MAX()&lt;/code&gt; 类似，如果 &lt;code&gt;filed&lt;/code&gt; 是字符串，那么 &lt;code&gt;MAX()&lt;/code&gt; 会返回按该列排序后的最前面一行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SUM(filed)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回某列值之和，类型必须是数值类型，&lt;code&gt;SUM()&lt;/code&gt; 会忽略值为 &lt;code&gt;NULL&lt;/code&gt; 的行。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Usage for Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AVG&lt;/span&gt;(filed) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; average
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SELECT 语句可以根据需要包含多个聚集函数。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;group-by-数据分组&#34;&gt;GROUP BY 数据分组&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;分组&lt;/strong&gt;是使用 SELECT 语句的 &lt;code&gt;GROUP BY&lt;/code&gt; 子句，将数据分为多个逻辑组，对每个组进行操作。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 显示 filed1, filed2, ... 并根据它们进行分组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- COUNT(*) 表示计算分组中的所有行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 该语句是先按照 filed1 进行分组，然后再按照 filed2 进行分组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 使用分组后输出的结果可能是根据 filed1, filed2, ... 排序好的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ..., &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; filed1, filed2, ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;GROUP BY&lt;/code&gt; 子句指示 DBMS 分组数据，然后对每个组（不是整个结果集）进行聚集。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;GROUP BY&lt;/code&gt; 的规定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GROUP BY&lt;/code&gt; 子句可以包含任意数目的列。所以可以对分组进行嵌套，更细致地进行数据分组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在建立分组后，操作的最小单位只能是分组，而无法再对个别列进行操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GROUP BY&lt;/code&gt; 子句中列出的每一列都必须是检索列或有效表达式列（但不能是聚集函数）。在 SELECT 中使用表达式，则必须在 &lt;code&gt;GROUP BY&lt;/code&gt; 子句中指定相同的表达式，而不能使用别名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大多数 SQL 实现不允许 &lt;code&gt;GROUP BY&lt;/code&gt; 列带有长度可变的数据类型（如文本或备注型字段）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;除聚集计算语句外，SELECT 语句中的每一列都必须在 &lt;code&gt;GROUP BY&lt;/code&gt; 子句中给出。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分组列中所有包含具有 &lt;code&gt;NULL&lt;/code&gt; 值的行，都将 &lt;code&gt;NULL&lt;/code&gt; 作为一个分组返回。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GROUP BY&lt;/code&gt; 子句必须出现在 &lt;code&gt;WHERE&lt;/code&gt; 子句之后，&lt;code&gt;ORDER BY&lt;/code&gt; 子句之前。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌并非所有 SQL 实现都支持在使用 &lt;code&gt;GROUP BY&lt;/code&gt; 子句时，使用相对位置指定列，并且使用它容易在编辑 SQL 语句时出错。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;having-过滤分组&#34;&gt;HAVING 过滤分组&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;HAVING&lt;/code&gt; 子句来过滤分组。&lt;code&gt;HAVING&lt;/code&gt; 支持所有 &lt;code&gt;WHERE&lt;/code&gt; 子句支持的操作符，两者的区别是 &lt;code&gt;WHERE&lt;/code&gt; 仅对行进行过滤，而 &lt;code&gt;HAVING&lt;/code&gt; 可以对分组进行过滤（在没有指定 &lt;code&gt;GROUP BY&lt;/code&gt; 时，大多数 DBMS 会同等对待 &lt;code&gt;WHERE&lt;/code&gt; 和 &lt;code&gt;HAVING&lt;/code&gt;，即 &lt;code&gt;HAVING&lt;/code&gt; 也可以对行进行过滤）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed_1, filed_2, ... 是聚集操作
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是相对于每行的条件，condition1_ 是相对于每个分组的条件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ... filed_1, filed_2, ...;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1
&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;HAVING&lt;/span&gt; condition1_;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在同时使用 &lt;code&gt;WHERE&lt;/code&gt; 和 &lt;code&gt;GROUP BY&lt;/code&gt; 时，被 &lt;code&gt;WHERE&lt;/code&gt; 过滤掉的行并不会包括在分组中。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;分组和排序&#34;&gt;分组和排序&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ORDER BY&lt;/code&gt; 与 &lt;code&gt;GROUP BY&lt;/code&gt; 的区别&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;ORDER BY&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;GROUP BY&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;对产生的输出排序&lt;/td&gt;
&lt;td&gt;对行分组，但输出可能不是分组的顺序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;任意列都可以使用（甚至非选择的列也可以使用，即 SELECT 没有给出的列也能使用）&lt;/td&gt;
&lt;td&gt;只可能使用选择列或表达式列（SELECT 中给出的列），而且必须使用每个选择列表达式（不能使用别名）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是可选的，任何情况下都能根据需要选择是否使用&lt;/td&gt;
&lt;td&gt;在使用聚集函数的情况下，
还要显示列（或表达式），则必须使用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;GROUP BY&lt;/code&gt; 分组不一定是按照分组顺序输出的，所以应该提供明确的 &lt;code&gt;ORDER BY&lt;/code&gt; 子句指定排序方式，以确保在任何情况下输出都能正确地排序。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;子查询&#34;&gt;子查询&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;子查询&lt;/strong&gt;（&lt;strong&gt;subquery&lt;/strong&gt;）是指嵌套在其他查询中的查询。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 每个子查询中的 SELECT 语句有且仅有一个字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 在子查询中企图检索多个列将返回错误
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 理论上可以无限嵌套，但实际使用时由于性能的限制，不能嵌套太多的子查询
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11 &lt;span style=&#34;color:#66d9ef&#34;&gt;IN&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed_1
                     &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table2
                     &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition12 &lt;span style=&#34;color:#66d9ef&#34;&gt;IN&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed_2
                                          &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table3
                                          &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition13 &lt;span style=&#34;color:#66d9ef&#34;&gt;IN&lt;/span&gt; (...));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 SELECT 语句中，子查询总是从内向外处理（类似递归的处理方式）。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;使用计算字段进行子查询&#34;&gt;使用计算字段进行子查询&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed_1, filed_2, ... 是计算字段，是由其 AS 前的圆括号中的子查询建立的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- table1._filed1 是 table1 中名为 _filed1 的列或列表达式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- table2._filed1 是 table2 中名为 _filed2 的列或列表达式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- table1._filed1 和 table2._filed1 是两个不同表格中同名同类型的列，并不是同一个列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- table1._filed2 和 table3._filed2 的关系与 table1._filed1 和 table2._filed1 类似
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 第 1 条子查询的解释是，对所有 table2 中符合 table1._filed1 = table2._filed1 的行进行计数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
       (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table2
        &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; table1._filed1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; table2._filed1) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; filed_1
       (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table3
        &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; table1._filed2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; table3._filed2) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; filed_2
       ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;计算字段用一个句点分隔表名和列名，句点前是表名，句点后是列名，即 &lt;code&gt;tab_name.column&lt;/code&gt;，这种写法也叫完全限定列名。在有可能混淆列名时（如使用子查询时）必须使用这种语法。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;join-联结表&#34;&gt;JOIN 联结表&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;联结&lt;/strong&gt;（&lt;strong&gt;join&lt;/strong&gt;）是一种机制，用来在一条 SELECT 语句中关联表，可以联结多个表返回一组输出。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;联结不是物理实体，它在实际的数据库表总并不存在，它仅在数据查询的执行期间存在。
对于联结，需要考虑性能，如果联结过多的表，可能会非常耗费资源，使性能下降。
SQL 本身不限制每个联结约束中表的数目，但实际上许多 DBMS 都有限制。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;联结类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;内联结（inner join）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外联结（outer join）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自联结（self-join）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自然联结（natural join）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以在一个 SELECT 语句中使用联结多个表，而且每个表的联结类型可以不相同。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;inner-join-内联结&#34;&gt;INNER JOIN 内联结&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;内联结&lt;/strong&gt;（&lt;strong&gt;inner join&lt;/strong&gt;）又称为&lt;strong&gt;等值联结&lt;/strong&gt;（&lt;strong&gt;equijoin&lt;/strong&gt;），是基于两个表之间的项等测试。&lt;/p&gt;
&lt;p&gt;许多子查询都可以使用内联结来替代，但是子查询与联结同样需要耗费一定的资源，所以在一个语句中，不应使用过多的子查询和联结。&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;code&gt;FROM&lt;/code&gt; 中指定多个列（等值联结）。&lt;/p&gt;
&lt;p&gt;对于联结，需要保证所有联结都有 &lt;code&gt;WHERE&lt;/code&gt; 子句，并且要保证 &lt;code&gt;WHERE&lt;/code&gt; 子句的正确性。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, ... 是存在于 table1, table2, ... 中的任意列或列表达式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 如果在不同表中出现名称相同的列，就需要使用完全限定名来指定
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 完全限定名：tab_name.column_name
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1s 中必须给出联结条件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1, table2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1s;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果上述语句没有在 &lt;code&gt;WHERE&lt;/code&gt; 中指出配对方式，那么 &lt;code&gt;table1&lt;/code&gt; 中的每一行会与 &lt;code&gt;table2&lt;/code&gt; 中的每一行进行配对，然后 &lt;code&gt;table1&lt;/code&gt; 和 &lt;code&gt;table2&lt;/code&gt; 已经配对完成的行会再次与 &lt;code&gt;table3&lt;/code&gt; 中的每一行配对，以此类推，直到所有的表都完成了配对。这种由没有联结条件的表联结后返回的结果为&lt;strong&gt;笛卡尔积&lt;/strong&gt;（&lt;strong&gt;cartesian product&lt;/strong&gt;）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;INNER JOIN&lt;/code&gt;（内联结）指定要联结的表，联结条件用特定的 &lt;code&gt;ON&lt;/code&gt; 子句给出。&lt;/p&gt;
&lt;p&gt;同样地，对于这种方式的联结，需要保证所有联结都有有效的 &lt;code&gt;ON&lt;/code&gt; 子句。如果没有 &lt;code&gt;ON&lt;/code&gt; 子句，也会出现笛卡尔积。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, ... 是存在于 table1, table2, ... 中的任意列或列表达式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 如果在不同表中出现名称相同的列，就需要使用完全限定名来指定
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 中必须给出联结条件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...  
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1
&lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; table2 &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; condition11
&lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; table3 &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; condition12
&lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; ...
&lt;span style=&#34;color:#75715e&#34;&gt;-- 如果有其他条件的话 WHERE 子句在 INNER JOIN 之后给出
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ANSI SQL 规范首选 &lt;code&gt;INNER JOIN&lt;/code&gt; 语法。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;自联结&#34;&gt;自联结&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;自联结&lt;/strong&gt;（&lt;strong&gt;self-join&lt;/strong&gt;）是指在同一个 SELECT 语句中，多次联结同一个表。&lt;/p&gt;
&lt;p&gt;对于自联结来说，由于多次引用同一个表，如果不对表起别名的话，会造成系统混乱（同一个表，表名自然相同，所以系统无法区分究竟指的是哪个表，虽然本质上都是同一个表）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; T1.filed1, T1.filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T1, tab_name &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T2
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; T1.filed_1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T2.filed_1
    &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; T2.filed_2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;虽然自联结也可以用子查询替换，但对于大多数 DBMS 来说，处理联结远比处理子查询快。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; filed_1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed_1
                 &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
                 &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; filed_2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;自然联结&#34;&gt;自然联结&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;自然联结&lt;/strong&gt;（&lt;strong&gt;natural join&lt;/strong&gt;）指每个含义相同的列仅出现一次的联结。自然联结一般是通过对一个表使用通配符，而对其他表的列使用明确的子集来完成。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; T1.&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;, T2.filed1, T2.filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T1, table2 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T2
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; T1.filed_1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T2.filed_1
    &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;outer-join-外联结&#34;&gt;OUTER JOIN 外联结&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;外联结&lt;/strong&gt;（&lt;strong&gt;outer join&lt;/strong&gt;）是指包含无关联行的联结。通常，内联结都是将一个表格中的行与另一个表格中的行通过联结条件进行关联，此时两个表格中没有被联结条件关联起来的行将会被忽略。而外联结则会包含这些没有被联结条件所关联起来的行，并根据需要给某些列赋予 &lt;code&gt;NULL&lt;/code&gt; 值。&lt;/p&gt;
&lt;p&gt;外联结有三种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;LEFT OUTER JOIN&lt;/code&gt; —— 左外联结，包含左表的所有行（即 &lt;code&gt;FROM&lt;/code&gt; 后面紧跟的表，示例中为 &lt;code&gt;T1&lt;/code&gt;），即使在右表（示例中为 &lt;code&gt;T2&lt;/code&gt;）中没有被匹配（结果为 &lt;code&gt;NULL&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;基本上所有的 DBMS 都支持。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; T1.filed1, T1,filed2, ...
       T2.filed_1, T2.filed_2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T1
&lt;span style=&#34;color:#66d9ef&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; table2 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T2
&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; T1.filed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T2.filed;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;RIGHT OUTER JOIN&lt;/code&gt; —— 右外联结，包含左表的所有行（即 &lt;code&gt;JOIN&lt;/code&gt; 关键字后紧跟的表，示例中为 &lt;code&gt;T2&lt;/code&gt;），即使在右表（示例中为 &lt;code&gt;T1&lt;/code&gt;）中没有被匹配（结果为 &lt;code&gt;NULL&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;SQLite 不支持。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; T1.filed1, T1,filed2, ...
       T2.filed_1, T2.filed_2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T1
&lt;span style=&#34;color:#66d9ef&#34;&gt;RIGHT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; table2 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T2
&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; T1.filed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T2.filed;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;FULL OUTER JOIN&lt;/code&gt; —— 全外联结，只要左表和右表其中一个表中存在匹配，就返回。&lt;/p&gt;
&lt;p&gt;MariaDB、MySQL 和 SQLite 都不支持。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;左外联结和右外联结可以相互转换。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;联结聚合函数与分组&#34;&gt;联结、聚合函数与分组&lt;/h2&gt;
&lt;p&gt;联结的一种用法是使用聚合函数从另一个表格中汇总数据。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1 是联结条件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; T1.filed1, T2.filed2, ...
       &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(T2.filed_1) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; name_filed
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T1
&lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; table2 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; T2 &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; condition1
&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; T1.filed1, T1,filed2, ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于上述语句也可以指定外联结，仅需将 &lt;code&gt;INNER JOIN&lt;/code&gt; 替换成外联结的关键字。&lt;/p&gt;
&lt;p&gt;使用外联结从另一个表中汇总数据，那些没有被关联的行经过 &lt;code&gt;COUNT()&lt;/code&gt; 函数计算后的返回值将会为 0。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;union-组合查询&#34;&gt;UNION 组合查询&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;组合查询&lt;/strong&gt;通常称为&lt;strong&gt;并&lt;/strong&gt;（&lt;strong&gt;union&lt;/strong&gt;）或&lt;strong&gt;符合查询&lt;/strong&gt;（&lt;strong&gt;compound query&lt;/strong&gt;）。通过组合查询可以同时执行多条 SELECT 语句，并将结果作为一个查询结果集返回。&lt;/p&gt;
&lt;p&gt;需要使用组合查询的情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在一个查询中从不同的表返回结构数据；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对一个表执行多个查询，按一个查询返回数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;组合相同表的查询所完成的工作一般可以用 &lt;code&gt;WHERE&lt;/code&gt; 子句替代。&lt;/p&gt;
&lt;p&gt;理论上使用 &lt;code&gt;WHERE&lt;/code&gt; 子句和组合查询从性能上看并没有太大差别，但各实现之间任有差别。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第一条 SELECT 中的列名或指定的别名作为整个组合查询的结果集的列名。因此组合查询所返回的结果集的列名是第一条 SELECT 中的列名，且在组合查询中的 &lt;code&gt;ORDER BY&lt;/code&gt; 子句中指出的列名应是第一条 SELECT 中第列名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每一个组合查询最多仅能有一条 &lt;code&gt;ORDER BY&lt;/code&gt; 子句，且必须位于整个组合查询语句的最后（即最后一条 SELECT 语句）。&lt;/p&gt;
&lt;p&gt;即，无法对某条 SELECT 指定一种排序方式，而对另一条 SELECT 指定另一种排序方式，所有的 SELECT 只能用同一种方式排序。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用组合查询的规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;必须由两条或两条以上的 SELECT 语句组成，语句之间用关键字 &lt;code&gt;UNION&lt;/code&gt; 分隔。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个查询必须包含相同的列、表达式或聚集函数（数量必须要相同，类型必须要兼容）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;使用 &lt;code&gt;UNION&lt;/code&gt; 关键字，会自动去除重复的行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, ... 和 filed_1, filed_2, ... 数量必须相同，类型要兼容
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- table1 和 table2 可以是同个表格，也可以是不同的表格
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- ORDER BY 必须位于语句的最后
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition11
&lt;span style=&#34;color:#66d9ef&#34;&gt;UNION&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed_1, filed_2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table2
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition12
&lt;span style=&#34;color:#66d9ef&#34;&gt;UNION&lt;/span&gt;
...
&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; filed;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在上述语句中，将 &lt;code&gt;UNION&lt;/code&gt; 替换成 &lt;code&gt;UNION ALL&lt;/code&gt;，返回的结果集将包含重复的行。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;insert-语句&#34;&gt;INSERT 语句&lt;/h1&gt;
&lt;p&gt;INSERT 语句用来将行插入（或添加）到数据库表。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;插入完整的行&#34;&gt;插入完整的行&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;简单但不保险的方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt;(value1,
       value2,
       value3,
       ...,
       &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
       ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;VALUES&lt;/code&gt; 后面的括号中，按照表中列的定义次序，指出了要存储到表中的数据，且必须给每一列提供一个值（在没有指定列名的情况下）。如果某列没有值，则该列应该使用 &lt;code&gt;NULL&lt;/code&gt;（在允许对该列指定空值的情况下）。各列必须以它们在表定义中出现的次序填充。&lt;/p&gt;
&lt;p&gt;这种语法虽然简单但并不安全，因为这种 SQL 语句高度依赖于表中列的定义次序。如果表结构发生变动，那么这样的语句并不能按照预期的情况执行。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;📌在某些 SQL 实现中，&lt;code&gt;INTO&lt;/code&gt; 关键字是可选的。但为了确保可移植，还是要提供 &lt;code&gt;INTO&lt;/code&gt; 关键字。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保险但比较繁琐的方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1 与 value1 对应，filed2 与 value2 对应，以此类推
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tab_name(filed1,
                       filed2,
                       filed3,
                       ...)
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt;(value1,
       value2,
       value3,
       ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种方法需要在表名后面，使用括号将表中的所有列名指出（不用按照表中列的定义顺序）。在插入行时，VALUES 必须以其指定的次序匹配指定的列名，这样即使表结构改变，该 INSERT 语句仍能正确工作。不要使用没有明确给出列的 INSERT 语句。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;主键的值必须有唯一性，DBMS 不允许插入主键值重复的行。如果确实需要插入，应先删除原有的记录。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;插入行的一部分&#34;&gt;插入行的一部分&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1 与 value1 对应，filed2 与 value2 对应，以此类推
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tab_name(filed1,
                       filed2,
                       ...)
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt;(value1,
       value2,
       ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同样使用表名后面的括号指定列，只不过仅需指出需要插入的部分列，并且只需给这些列提供值。&lt;/p&gt;
&lt;p&gt;无论是插入完整的行还是插入行的一部分，都必须确保 &lt;code&gt;VALUES&lt;/code&gt; 的数目正确。如果不提供列名，则必须给每个表列提供一个值；如果提供列名，则必须给列出的每一个列一个值。否则，就会产生错误。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;VALUES&lt;/code&gt; 中没有指出的列，DBMS 将赋予它们默认值或空值。这些列必须满足：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;列定义为允许 &lt;code&gt;NULL&lt;/code&gt; 值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在表定义中给出了默认值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;insert-select&#34;&gt;INSERT SELECT&lt;/h2&gt;
&lt;p&gt;INSERT 还允许利用 SELECT 语句将检索到的结果插入表中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 将 table2 中满足条件的 filed_1, filed_2, ... 列按照对应顺序插入到 table1 中
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- table1 和 table2 可以是同一个表
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; table1(filed1,
                   filed2,
                   ...)
&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed_1,
       filed_2,
       ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table2
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1s;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一般 INSERT 只插入一行。而 INSERT SELECT 可以用一条语句插入多行。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;select-into&#34;&gt;SELECT INTO&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;SELECT ... INTO&lt;/code&gt; 用于从一个表中复制数据，然后把数据插入到另一个新表中（&lt;code&gt;INTO&lt;/code&gt; 子句后指定的表，该语句执行后会自动创建）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;📌MySQL 不支持 &lt;code&gt;SELECT ... INTO&lt;/code&gt; 语句。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- INTO 后面的 IN 子句代表插入到其他数据库
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- IN 子句可省略，默认代表当前数据库
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- new_table 的表结构与 old_table 指定列 filed1, filed2, ... 的结构相同
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; new_table [&lt;span style=&#34;color:#66d9ef&#34;&gt;IN&lt;/span&gt; external_db]
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; old_table;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;SELECT INTO&lt;/code&gt; 语句可以通过使用促使查询没有数据返回的 &lt;code&gt;WHERE&lt;/code&gt; 子句创建一个新的空表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; new_table
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; old_table
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;更新和删除数据&#34;&gt;更新和删除数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在客户端或服务器的 DBMS 中，使用 UPDATE 和 DELETE 语句可能需要特殊的安全权限。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;update-语句&#34;&gt;UPDATE 语句&lt;/h2&gt;
&lt;p&gt;UPDATE 语句用于更新（修改）表中的数据。&lt;/p&gt;
&lt;p&gt;有两种使用 UPDATE 语句的方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;更新表中的特定行 —— 使用 &lt;code&gt;WHERE&lt;/code&gt; 子句过滤：&lt;/p&gt;
&lt;p&gt;基本的 UPDATE子句由三部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;要更新的表 —— 使用 &lt;code&gt;UPDATE&lt;/code&gt; 关键字指定；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列名和它们的新值 —— 使用 &lt;code&gt;SET&lt;/code&gt; 关键字指定更新的内容（即使用 “列=值” 对将新值赋给被更新的列）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确定要更新哪些行的过滤 —— 使用 &lt;code&gt;WHERE&lt;/code&gt; 子句指定过滤条件。
在 UPDATE 中，&lt;code&gt;WHERE&lt;/code&gt; 可以使用 SELECT 子查询。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, ... 是 tab_name 中的列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- value1, value2, ... 是与 filed1, filed2, ... 相对应类型的数据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1 = value1, filed2 = value2, ... 是 “列=值” 对
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1s 是过滤的条件，指定了要更新的行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UPDATE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; filed1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value1,
    filed2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value2,
    ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1s;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更新表中的所有行 —— 不使用 &lt;code&gt;WHERE&lt;/code&gt; 子句。&lt;/p&gt;
&lt;p&gt;一般的 UPDATE 字句都要使用 &lt;code&gt;WHERE&lt;/code&gt; 字句指定过滤条件，否则 &lt;code&gt;SET&lt;/code&gt; 子句指定的更新内容将应用到所有的列。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;📌有的 SQL 实现支持在 UPDATE 语句中使用 FROM 子句，用一个表的数据更新另一个表的行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用 UPDATE 删除某个列的值：将要删除的列置为 &lt;code&gt;NULL&lt;/code&gt;（假设表定义允许 &lt;code&gt;NULL&lt;/code&gt;）。如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UPDATE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; del_filed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1s;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;delete-语句&#34;&gt;DELETE 语句&lt;/h2&gt;
&lt;p&gt;使用 DELETE 语句可以从一个表中删除（去掉）数据。&lt;/p&gt;
&lt;p&gt;有两种使用 DELETE 语句的方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从表中删除特定的行 —— 使用 &lt;code&gt;WHERE&lt;/code&gt; 子句过滤：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- condition1s 是过滤条件，指定了要删除的行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1s;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;从表中删除所有行 —— 不使用 &lt;code&gt;WHERE&lt;/code&gt; 子句：
使用 DELETE 语句时应该指定 &lt;code&gt;WHERE&lt;/code&gt; 子句，否则它将会删除表中所有的行。
如果确实想删除表中所有行，应该使用速度更快的 &lt;code&gt;TRUNCATE TABLE&lt;/code&gt; 语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DELETE 语句删除的是表中的行，即它的操作对象是行而不是列，如果想要删除列，则要使用 UPDATE 语句将该列置为 &lt;code&gt;NULL&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;update-和-delete-的使用准则&#34;&gt;UPDATE 和 DELETE 的使用准则&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;绝对不要使用不带  子句的 UPDATE 或 DELETE 子句&lt;/strong&gt;，除非确实打算更新和删除每一行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;应保证每个表都有主键&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在使用 UPDATE 或 DELETE 之前，应先用 SELETE 进行测试，确保 &lt;code&gt;WHERE&lt;/code&gt; 子句过滤的是正确的记录。:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用强制实施引用完整性的数据库，这样 DBMS 将不允许删除其数据与其他表相关的行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果 DBMS 允许数据库管理员施加约束，防止执行不带 &lt;code&gt;WHERE&lt;/code&gt; 子句的 UPDATE 或 DELETE 子句，那么应该使用它。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌如果 SQL 没有撤销（undo）按钮，应该更小心地使用 UPDATE 和 DELETE 语句。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;创建和删除数据库&#34;&gt;创建和删除数据库&lt;/h1&gt;
&lt;p&gt;创建数据库使用 &lt;code&gt;CREATE DATABASE&lt;/code&gt; 语句。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; db_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;删除数据库使用 &lt;code&gt;DROP DATABASE&lt;/code&gt; 语句。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; db_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意：删除数据库后，数据库中的所有数据（表、视图、索引等数据都将会被删除）。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;sql-通用数据类型&#34;&gt;SQL 通用数据类型&lt;/h1&gt;
&lt;p&gt;数据类型定义列中存放的值的种类。数据库表中的每个列都要求有名称和数据类型。SQL 开发人员必须在创建 SQL 表时决定表中的每个列将要存储的数据的类型。&lt;/p&gt;
&lt;p&gt;不同的 DBMS 数据类型有些不同。有的 DBMS 允许自定义数据类型，有的不允许。&lt;/p&gt;
&lt;p&gt;以下是 SQL 通用数据类型：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;数据类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CHARACTER(n)&lt;/code&gt; 或 &lt;code&gt;CHAR(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;字符/字符串。固定长度 &lt;code&gt;n&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;VARCHAR(n)&lt;/code&gt; 或  &lt;code&gt;CHARACTER VARYING(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;字符/字符串。可变长度。最大长度 &lt;code&gt;n&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BINARY(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;二进制串。固定长度 &lt;code&gt;n&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BOOLEAN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存储 &lt;code&gt;TRUE&lt;/code&gt; 或 &lt;code&gt;FALSE&lt;/code&gt; 值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;VARBINARY(n) &lt;/code&gt; 或 &lt;code&gt;BINARY VARYING(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;二进制串。可变长度。最大长度 &lt;code&gt;n&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INTEGER(p)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;整数值（没有小数点）。精度 &lt;code&gt;p&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SMALLINT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;整数值（没有小数点）。精度 5。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INTEGER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;整数值（没有小数点）。精度 10。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BIGINT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;整数值（没有小数点）。精度 19。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DECIMAL(p,s)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;精确数值，精度 &lt;code&gt;p&lt;/code&gt;，小数点后位数 &lt;code&gt;s&lt;/code&gt;。
例如：&lt;code&gt;DECIAML(5,2)&lt;/code&gt; 是一个小数点前有 3 位数，小数点后有 2 位数的数字。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NUMERIC(p,s)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;精确数值，精度 &lt;code&gt;p&lt;/code&gt;，小数点后位数 &lt;code&gt;s&lt;/code&gt;。（与  DECIMAL 相同）.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FLOAT(p)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;近似数值，尾数精度 &lt;code&gt;p&lt;/code&gt;。一个采用以 10 为基数的指数计数法的浮点数。该类型的 &lt;code&gt;size&lt;/code&gt; 参数由一个指定最小精度的单一数字组成。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;REAL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;近似数值，尾数精度 7。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FLOAT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;近似数值，尾数精度 16。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DOUBLE PRECISION&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;近似数值，尾数精度 16。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DATE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存储年、月、日的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TIME&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存储小时、分、秒的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TIMESTAMP&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存储年、月、日、小时、分、秒的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INTERVAL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;由一些整数字段组成，代表一段时间，取决于区间的类型。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ARRAY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;元素的固定长度的有序集合。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MULTISET&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;元素的可变长度的无序集合。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;XML&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存储 XML 数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;SQL 数据类型快速参考手册&lt;/strong&gt;：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;数据类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Access&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;SQL Server&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Oracle&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;MySQL&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;boolean&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Yes/No&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Bit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;integer&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Number (integer)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Int&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Int&lt;/code&gt;、 &lt;code&gt;Integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Int&lt;/code&gt;、 &lt;code&gt;Integer&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;float&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Number (single)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Float Real&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;currency&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Currency&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Money&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Money&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;string (fixed)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Char&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Char&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Char&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Char&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;string (variable)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Text (&amp;lt;256) Memo (65k+)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Varchar&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Varchar&lt;/code&gt;、&lt;code&gt;Varchar2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Varchar&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Varchar&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;binary object&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;OLE Object Memo&lt;/td&gt;
&lt;td&gt;Binary (fixed up to 8K) Varbinary (&amp;lt;8K) Image (&amp;lt;2GB)&lt;/td&gt;
&lt;td&gt;Long Raw&lt;/td&gt;
&lt;td&gt;Blob Text&lt;/td&gt;
&lt;td&gt;Binary Varbinary&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;时间数据格式&#34;&gt;时间数据格式&lt;/h2&gt;
&lt;p&gt;MySQL 使用下列数据类型在数据库中存储日期或日期/时间值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DATE - 格式：&lt;code&gt;YYYY-MM-DD&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DATETIME - 格式：&lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TIMESTAMP - 格式：&lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;YEAR - 格式：&lt;code&gt;YYYY&lt;/code&gt; 或 &lt;code&gt;YY&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SQL Server 使用下列数据类型在数据库中存储日期或日期/时间值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DATE - 格式：&lt;code&gt;YYYY-MM-DD&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DATETIME - 格式：&lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SMALLDATETIME - 格式：&lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TIMESTAMP - 格式：唯一的数字&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;创建和操纵表格&#34;&gt;创建和操纵表格&lt;/h1&gt;
&lt;h2 id=&#34;create-table-创建表&#34;&gt;CREATE TABLE 创建表&lt;/h2&gt;
&lt;p&gt;一般有两种创建表格的方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用 SQL 语句 &lt;code&gt;CTEATE TABLE&lt;/code&gt; 创建表格；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多数 DBMS 都具有交互式创建和管理数据库表的工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;其本质是交互工具根据用户操作自动生成并执行相应的 SQL 语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;不同的 SQL 实现中，CREATE TABLE 语句的语法会有所不同（主要区别是在列定义上）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用 &lt;code&gt;CREATE TABLE&lt;/code&gt; 创建表，必须给出以下信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;新表的名字，在关键字 &lt;code&gt;CREATE TABLE&lt;/code&gt; 之后给出；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表列的名字和定义，在列名后的括号中指出，用逗号分隔；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有的 DBMS 还要求指定表的位置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column_name1    DataType1,
    column_name2    DataType2,
    column_name3    DataType3,
    cluumn_name4    DataType4,
    ...
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建新表时只能指定不存在的表名，SQL 无法通过 &lt;code&gt;CREATE&lt;/code&gt; 语句覆盖已有的表。&lt;/p&gt;
&lt;h2 id=&#34;alter-table-更新表定义&#34;&gt;ALTER TABLE 更新表定义&lt;/h2&gt;
&lt;p&gt;使用 ALTER TABLE 时需要考虑的事情：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;理想情况下，不要在表中包含数据时对表结构进行更新（特别是不要删除已有的列）。
应该在表的设计过程中充分考虑未来可能的需求，避免今后对表的结构做大改动。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有的 DBMS 都允许给现有的表增加列，不过对所增加列的数据类型（以及 NULL 和 DEFAULT 的使用）有所限制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;许多 DBMS 不允许删除或更改表中的列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多数 DBMS 允许重新命名表中的列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;许多 DBMS 限制对已经填有数据的列进行更改，对未填有数据的列几乎没有限制。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 ALTER TABLE 必须给出的信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在 ALTER TABLE 之后给出表名；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列出要更改表的操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;增加表列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; filed DataType;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COLUMN&lt;/span&gt; filed;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;复杂的表结构更改一般需要执行以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;用新的列布局创建一个新表；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 INSERT SELECT 语句从旧表复制数据到新表；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检验包含所需数据的新表；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重命名旧表（在确定无误的情况下可删除）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用旧表原来的名字重命名新表；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据需要，重新创建触发器、存储过程、索引和外键。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;使用 ALTER TABLE 的注意事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQLite 对使用 ALTER TABLE 的最重要的限制是：不支持使用 ALTER TABLE 定义主键和外键，必须在最初创建表时指定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在使用 ALTER TABLE 之前应先做好完整的备份（表结构和数据的备份）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表结构的更改不能撤销。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果增加了不需要的列，也许无法删除它们。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果删除了不应该删除的列，可能会丢失该列中的所有数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;drop-table-删除表&#34;&gt;DROP TABLE 删除表&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;DROP TABLE&lt;/code&gt; 语句用于删除表本身（包括表数据）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;📌删除表时，没有确认步骤，且不能撤销。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌&lt;strong&gt;使用关系规则防止意外删除&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;许多 DBMS 允许强制实施有关规则，防止删除与其他表相关联的表。在实施这些规则时，如果对某个表发布一条 &lt;code&gt;DORP TABLE&lt;/code&gt; 语句，且该表是某个关系的组成部分，则 DBMS 将阻止这条语句执行，直到该关系被删除为止。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;truncate-table-删除表数据&#34;&gt;TRUNCATE TABLE 删除表数据&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;TRUNCATE TABLE&lt;/code&gt; 语句用于删除表内的数据（但并不包括表本身）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUNCATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;重命名表&#34;&gt;重命名表&lt;/h2&gt;
&lt;p&gt;对于重命名表，每个 DBMS 的支持都有所不同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DB2、MariaDB、MySQL、Oracle 和 PostgreSQL 使用 &lt;code&gt;RENAME&lt;/code&gt; 语句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQL Server 使用 &lt;code&gt;sp_rename&lt;/code&gt; 存储过程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQLite 使用 &lt;code&gt;ALTER TABLE&lt;/code&gt; 语句。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;sql-约束&#34;&gt;SQL 约束&lt;/h1&gt;
&lt;p&gt;SQL &lt;strong&gt;约束&lt;/strong&gt;（Constraints）用于规定表中如何插入或处理数据的规则。如果存在违反约束的数据行为，行为会被约束终止。&lt;/p&gt;
&lt;p&gt;约束可以在创建表时规定（通过 &lt;code&gt;CREATE TABLE&lt;/code&gt; 语句），或者在表创建之后规定（通过 &lt;code&gt;ALTER TABLE&lt;/code&gt; 语句）。&lt;/p&gt;
&lt;p&gt;SQL 有如下几种约束：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;关键字&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;解释&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;允许存储 NULL 值。
如果不指定 NOT NULL 或 PRIMARY KEY，则默认为 NULL。
在插入行时允许不给出该列的值。此时，会给该项指定为值 NULL。
对于 DB2，在定义允许 NULL 的列中不能指定 NULL。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NOT NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指示某列不能存储 NULL 值。
如果不向字段添加值，就无法插入新记录或者更新记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UNIQUE &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;唯一约束。保证某列的每行必须有唯一的值。
唯一约束可包含 NULL 值，可重复使用，但是不能用来定义外键。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PRIMARY KEY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;主键约束。NOT NULL 和 UNIQUE 的结合。
确保某列（或多个列的结合）有唯一标识，有助于更容易更快速地找到表中的一个特定的记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FOREIGN KEY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;外键约束。保证一个表中的数据匹配另一个表中的值的参照完整性。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CHECK&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;保证列中的值符合指定的条件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;规定没有给列赋值时的默认值。
在插入行时如果不给出值，则用默认值赋值。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;主键约束&lt;/span&gt;
    column1  Type1  &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;默认为允许&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，可以不用指出&lt;/span&gt;
    column2  Type2  [&lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;], 
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;不允许&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;的列，必须用&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;指出&lt;/span&gt;
    column3  Type3  &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;用&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;指定默认值&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; default_val &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;是&lt;/span&gt; Type4 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;类型的值&lt;/span&gt;
    column4  Type4  &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; default_val,
    ...
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;not-null-非空约束&#34;&gt;NOT NULL 非空约束&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;添加 NOT NULL 约束：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;MODIFY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;column_name&lt;/span&gt; Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;unique-唯一约束&#34;&gt;UNIQUE 唯一约束&lt;/h2&gt;
&lt;p&gt;每个表可以有多个 UNIQUE 约束。&lt;/p&gt;
&lt;p&gt;创建表时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;方法一：直接在列定义中用&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关键字指出&lt;/span&gt;
    column2 Type2 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;方法二：定义列后使用&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt;()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; (column1)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 UNIQUE 约束，并定义多个列的 UNIQUE 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    column2 Type2 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;可以不用定义&lt;/span&gt; u_name
    &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; [u_name] &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; (column1, column2, ...)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;更新表定义时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;column_name&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 UNIQUE 约束，并定义多个列的 UNIQUE 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; name &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;可以省略&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; u_name &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; (column1, column2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;撤销 UNIQUE 约束：&lt;/p&gt;
&lt;p&gt;MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; u_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL Server / Oracle / MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; u_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;primary-key-主键约束&#34;&gt;PRIMARY KEY 主键约束&lt;/h2&gt;
&lt;p&gt;只要满足以下条件，就可以被用作主键：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;任意两行的主键值都不相同（主键必须包含唯一值）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每行都具有一个主键值（主键列不能包含 NULL 值）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;包含主键值的列从不修改或更新。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主键值不能重用。如果从表中删除某一行，其主键值不分配给新行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;创建表时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 在列定义中直接指出主键
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;,
    ...
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 通过 PRIMARY KEY () 定义
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (column1)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 PRIMARY KEY 约束，并定义多个列的 PRIMARY KEY 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;可以不用定义&lt;/span&gt; pk_name
    &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; [pk_name] &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (column1, column2, ...)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;更新表定义时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;column_name&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 PRIMARY KEY 约束，并定义多个列的 PRIMARY KEY 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; name &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;可以省略&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; pk_name &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; (column1, column2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;撤销 PRIMARY KEY 约束：&lt;/p&gt;
&lt;p&gt;MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL Server / Oracle / MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; pk_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;foreign-key-外键约束&#34;&gt;FOREIGN KEY 外键约束&lt;/h2&gt;
&lt;p&gt;创建表时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;方法一：使用&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关键字&lt;/span&gt;
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; table1(column_1),
    column2 Type2 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    column2 Type2 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;方法二：使用&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; ()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (column2) &lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; table2(column_2),
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;命名&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;约束&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; [fk_name] &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (column3)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; table3(column_3)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;更新表定义时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (column1)
&lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; table1(column_1);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 FOREIGN KEY 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; fk_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (column1)
&lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; table1(column_1);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;撤销 FOREIGN KEY 约束：&lt;/p&gt;
&lt;p&gt;MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; fk_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL Server / Oracle / MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; fk_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;check-检查约束&#34;&gt;CHECK 检查约束&lt;/h2&gt;
&lt;p&gt;CHECK 约束常见用途：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;检查最小或最大值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指定范围。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只允许特定值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;创建表时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;限制&lt;/span&gt; column1 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;的值大于&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; (column1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
    column2 Type2 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;限制&lt;/span&gt; column2 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;只能取&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;或&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;N&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; (column2 &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[YN]&amp;#39;&lt;/span&gt;)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 CHECK 约束，并定义多个列的 CHECK 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 Type1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    column2 Type2 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    ...
    &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; chk_name &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; (column1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; column2 &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[YN]&amp;#39;&lt;/span&gt;)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;修改表定义时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; (column1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 命名 CHECK 约束，并定义多个列的 CHECK 约束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; chk_name &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; (column1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; column2 &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[YN]&amp;#39;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;撤销 CHECK 约束：&lt;/p&gt;
&lt;p&gt;MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; chk_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL Server / Oracle / MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; chk_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;default-默认约束&#34;&gt;DEFAULT 默认约束&lt;/h2&gt;
&lt;p&gt;创建表时：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; default_val &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;是&lt;/span&gt; Type4 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;类型的值&lt;/span&gt;
    column1  Type1  &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; default_val,
    ...
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 可以使用类似 GETDATE() 的函数插入系统值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;默认值为当前的日期&lt;/span&gt;
    birthday  DATE  &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; GETDATE(),
    ...
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;更新表结构时：&lt;/p&gt;
&lt;p&gt;MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; column1 &lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; default_val;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL Server / MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; name &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; default_val &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; column1;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Oracle：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;MODIFY&lt;/span&gt; column1 &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; default_val;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;撤销 DEFAULT 约束：&lt;/p&gt;
&lt;p&gt;MySQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; column1 &lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL Server / Oracle / MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COLUMN&lt;/span&gt; column1 &lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;auto-increment-字段&#34;&gt;AUTO INCREMENT 字段&lt;/h1&gt;
&lt;p&gt;在定义表时，在列中添加 auto-increment 字段可以在新纪录插入表时对该列生成一个唯一的数字。&lt;/p&gt;
&lt;p&gt;定义为 auto-increment 字段的列必须是整数类型。&lt;/p&gt;
&lt;p&gt;定义为 auto-increment 的列常常被定义为 &lt;code&gt;PRIMARY KEY&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;MySQL 使用 &lt;code&gt;AUTO_INCREMENT&lt;/code&gt; 关键字来执行 auto-increment 任务：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;定义&lt;/span&gt; column1 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;为&lt;/span&gt; AUTO &lt;span style=&#34;color:#66d9ef&#34;&gt;INCREMENT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;主键字段&lt;/span&gt;
    column1 TYPE1 &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; AUTO_INCREMENT,
    column2 TYPE2,
    column3 TYPE3,
    ...
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;定义了 AUTO_INCREMENT 字段后，可以不用对该列指定值，或者对该列指定为 NULL 值（会自动添加一个唯一的值）。&lt;/p&gt;
&lt;p&gt;MySQL 的 AUTO_INCREMENT 只能在 key 上被定义。PRIMARY KEY 和 UNIQUE 都是有效的定义。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- val2 和 val3 是分别与 column2 和 column3 同类型的值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;-- 不对 auto-increment 列指定值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tab_name ( column2, column3 )
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; ( val2, val3 );

&lt;span style=&#34;color:#75715e&#34;&gt;-- 指定为 NULL 值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tab_name ( column1, column2, column3)
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; ( &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;, val2, val3);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;AUTO_INCREMENT 默认的开始值是 &lt;code&gt;1&lt;/code&gt;，每新增一条记录都会递增 &lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;让 AUTO_INCREMENT 序列以其他的值起始：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- number 是任意数字
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name AUTO_INCREMENT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;number;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MySQL 设定起始值只能在建表后使用 &lt;code&gt;ALTER TABLE&lt;/code&gt; 语句。也可以在建表后直接使用 &lt;code&gt;ALTER TABLE&lt;/code&gt; 语句定义 AUTO_INCREMENT 以及它的起始值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 INT &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;,
    ...
);
&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_test AUTO_INCREMENT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;number;
&lt;span style=&#34;color:#75715e&#34;&gt;-- number 是任意数字
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;MS SQL Server 使用 &lt;code&gt;IDENTITY()&lt;/code&gt; 来执行 auto-increment 任务：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- IDENTITY(initial, incremental) 中，
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- initial 是初始值，incremental 是递增值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 即，以 initial 作为初始值，每新增一条记录递增 incremental
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    column1 INT &lt;span style=&#34;color:#66d9ef&#34;&gt;IDENTITY&lt;/span&gt;(initial, incremental) &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;,
    ...
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;插入数据的方法同 MySQL。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Oracle 通过创建 &lt;code&gt;sequence&lt;/code&gt; 对象（该对象生成数字序列）创建 auto-increment 字段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; SEQUENCE sp_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;MINVALUE&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;最小值为&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;START&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;起始值为&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;INCREMENT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;每次递增&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;CACHE&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;缓存&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;个值以提高性能&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;插入新记录时，必须使用 &lt;code&gt;sequence&lt;/code&gt; 对象的 &lt;code&gt;nextval&lt;/code&gt; 函数（该函数从 &lt;code&gt;sp_name&lt;/code&gt; 序列中取回下一个值）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 假设 tab_name 已被创建，
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 且要对 column1 使用 nextval() 函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tab_name ( column1, column2, column3)
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; ( sp_name.nextval, val2, val3);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;视图&#34;&gt;视图&lt;/h1&gt;
&lt;p&gt;视图是虚拟的表。视图并不包含数据，它只包含使用时动态检索数据的查询。视图的 SELECT 用法与表的用法基本相同。&lt;/p&gt;
&lt;p&gt;使用视图的原因：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;重用 SQL 语句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简化复杂的 SQL 操作（无需知道视图的基本查询细节）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用表的一部分而不是整个表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保护数据。
可以授予用户访问表的特定部分的权限，而不是整个表的访问权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更改数据格式和表示。
视图可返回与底层表的表示和格式不同的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;视图的使用规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;视图名必须为一且不能与其他视图或表重名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于可创建的视图数目没有限制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建视图，必须具有足够的访问权限（通常由数据库管理人员授予）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视图可以嵌套，但允许的嵌套层数在不同的 DBMS 中有所不同。
嵌套视图、使用多个联结和过滤创建复杂的视图都会使性能下降。在产品环境中使用之前，应该对其进行全面测试。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;许多 DBMS 禁止在视图查询中使用 &lt;code&gt;ORDER BY&lt;/code&gt; 子句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有些 DBMS 要求对返回的所有列进行命名，如果列是计算字段，则需要使用别名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视图不能索引，也不能有关联的触发器或默认值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有些 DBMS 把视图作为只读的查询（不能将数据写回底层表，如 SQLite）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有些 DBMS 禁止对视图中的行进行插入或更新后，该行不再属于该视图的操作。
默认情况下，如果删除视图中的某行的某列后，可能会导致该行不属于该视图。但是某些 DBMS 会防止这种情况发生。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;create-view-创建视图&#34;&gt;CREATE VIEW 创建视图&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;CREATE VIEW&lt;/code&gt; 语句创建视图，通常包含两部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;视图名；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SELECT&lt;/code&gt; 查询语句。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;视图的用途：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;利用视图简化复杂的联结：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VIEW&lt;/span&gt; view_name &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1, filed2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table1, table2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition1;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用视图重新格式话检索出的数据：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- filed1, filed2, ... 指需要重命名的字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VIEW&lt;/span&gt; view_name &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; filed1 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; alias1, filed2 &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; alias2, ...
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用视图过滤不想要的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一般创建的视图都不会绑定特定的数据，这会提高视图的可重用性。&lt;/p&gt;
&lt;p&gt;从视图检索数据时如果使用了一条 &lt;code&gt;WHERE&lt;/code&gt; 子句，则两组子句（一组在视图中，另一组是传递给视图的）将自动组合。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;drop-view-删除视图&#34;&gt;DROP VIEW 删除视图&lt;/h2&gt;
&lt;p&gt;通过 &lt;code&gt;DROP VIEW&lt;/code&gt; 删除视图（仅删除视图的定义，视图中并包含真实的数据）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VIEW&lt;/span&gt; view_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;索引&#34;&gt;索引&lt;/h1&gt;
&lt;p&gt;索引通过排序数据以加快搜索和排序操作的速度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;索引改善检索操作的性能，但降低了数据插入、修改和删除的性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引数据可能要占用大量的存储空间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户无法看到索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;并非所有数据都适合做索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引用于数据过滤和数据排序。如果经常以某种特定的顺序排序数据，则该数据可能适合做索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以在索引中定义多个列。这样的索引仅在以这个列组合排序时有用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;create-index-创建索引&#34;&gt;CREATE INDEX 创建索引&lt;/h2&gt;
&lt;p&gt;索引使用 &lt;code&gt;CREATE INDEX&lt;/code&gt; 语句创建（不同的 DBMS 创建索引的语句变化很大）。&lt;/p&gt;
&lt;p&gt;创建一个允许使用重复值的索引：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; index_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; tab_name (column1, column2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建唯一索引（不允许两个行拥有相同的索引值）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; index_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; tab_name (column1, column2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;索引必须唯一命名。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;drop-index-删除索引&#34;&gt;DROP INDEX 删除索引&lt;/h2&gt;
&lt;p&gt;MySQL:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; index_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MS Access：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; index_name &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; tab_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MS SQL Server：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; tab_name.index_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;DB2 / Oracle：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; index_name;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
</description>
        </item>
        
    </channel>
</rss>
