<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>数学 on Linner&#39;s Blog</title>
        <link>https://blog.linner.asia/tags/%E6%95%B0%E5%AD%A6/</link>
        <description>Recent content in 数学 on Linner&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh</language>
        <lastBuildDate>Fri, 02 Sep 2022 12:43:41 +0800</lastBuildDate><atom:link href="https://blog.linner.asia/tags/%E6%95%B0%E5%AD%A6/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>集合论</title>
        <link>https://blog.linner.asia/p/%E9%9B%86%E5%90%88%E8%AE%BA/</link>
        <pubDate>Fri, 02 Sep 2022 12:43:41 +0800</pubDate>
        
        <guid>https://blog.linner.asia/p/%E9%9B%86%E5%90%88%E8%AE%BA/</guid>
        <description>&lt;h1 id=&#34;集合的概念&#34;&gt;集合的概念&lt;/h1&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;set&lt;/strong&gt; is a group of objects. (simplest way)&lt;/li&gt;
&lt;li&gt;By a &lt;strong&gt;set&lt;/strong&gt; we mean any collection M into a whole of definite disinct objects m (which we called &lt;strong&gt;elements&lt;/strong&gt; of M) of our perception or thought. (Cantor&amp;rsquo;s way)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;集合&lt;/strong&gt;（set）是由 &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;指定范围 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;内的 &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;满足给定条件的所有对象 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;聚集在一起构成的，指定范围内的每一个对象称为这个集合的&lt;strong&gt;元素&lt;/strong&gt;（element）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集合中的元素是&lt;strong&gt;无序&lt;/strong&gt;的。&lt;/li&gt;
&lt;li&gt;集合中的元素是&lt;strong&gt;不同&lt;/strong&gt;的（即，同个集合中相同或重复的元素被认为是一个元素）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常情况下，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用带（或不带）下标的 &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;大写 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;英文字母表示 &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;集合 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;：$A,B,C,\dots,A_1,B_1,C_1,\dots$&lt;/li&gt;
&lt;li&gt;用带（或不带）下标的 &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;小写 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;英文字母表示 &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;元素 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;：$a,b,c,\dots,a_1,b_1,c_1,\dots$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ZFC 公理化集合论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;外延公理，&lt;/li&gt;
&lt;li&gt;空集存在公理，&lt;/li&gt;
&lt;li&gt;无序对公理，&lt;/li&gt;
&lt;li&gt;并集公理，&lt;/li&gt;
&lt;li&gt;幂集公理，&lt;/li&gt;
&lt;li&gt;无穷公理，&lt;/li&gt;
&lt;li&gt;替换公理，&lt;/li&gt;
&lt;li&gt;正则公理，&lt;/li&gt;
&lt;li&gt;选择公理。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;常见的集合&#34;&gt;常见的集合&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;空集 $\emptyset$；&lt;/li&gt;
&lt;li&gt;正整数集 $\mathbf{N^+}$ or $\mathbf{W}$：$1,2,3,\cdots$&lt;/li&gt;
&lt;li&gt;自然数集 $\mathbf{N}$：$0,1,2,3,\cdots$&lt;/li&gt;
&lt;li&gt;整数集 $\mathbf{Z}$：$\cdots,-2,-1,0,1,2,\cdots$&lt;/li&gt;
&lt;li&gt;质数/素数集 $\mathbf{P}$：$2,3,5,7,\cdots$&lt;/li&gt;
&lt;li&gt;有理数集 $\mathbf{Q}$；&lt;/li&gt;
&lt;li&gt;无理数集 $\mathbf{I}$；&lt;/li&gt;
&lt;li&gt;实数集 $\mathbf{R}$；&lt;/li&gt;
&lt;li&gt;复数集 $\mathbf{C}$；&lt;/li&gt;
&lt;li&gt;$\cdots\cdots$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系：&lt;/p&gt;
&lt;p&gt;$$
\mathbf{W} \subseteq \mathbf{N} \subseteq \mathbf{Z} \subseteq \mathbf{Q} \subseteq \mathbf{R} \subseteq \mathbf{C}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;集合的表示方法&#34;&gt;集合的表示方法&lt;/h1&gt;
&lt;h2 id=&#34;枚举法&#34;&gt;枚举法&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;枚举法&lt;/strong&gt;又称&lt;strong&gt;列举法&lt;/strong&gt;或&lt;strong&gt;显示法&lt;/strong&gt;，是枚举出集合中的所有或部分元素（要能看出其他元素之间的规律）。&lt;/p&gt;
&lt;p&gt;Example：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;枚举出集合中的所有元素：$A = {a,b,c,d}$；&lt;/li&gt;
&lt;li&gt;枚举出集合中的部分元素：$B = {1,3,5,\cdots,2n+1,\cdots}$。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;叙述法&#34;&gt;叙述法&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;叙述法&lt;/strong&gt;又称&lt;strong&gt;隐式法&lt;/strong&gt;，是通过刻画（或用自然语言描述）集合中元素所具备的某种特性来表示集合的方法，通常用符号 $P(x)$ 来表示不同对象 $x$ 所具有的性质 $P$ ，由 $P(x)$ 所定义的集合常记为&lt;/p&gt;
&lt;p&gt;$$
{x|P(x)}。
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;文氏图&#34;&gt;文氏图&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;文氏图&lt;/strong&gt;（&lt;strong&gt;Venn diagram&lt;/strong&gt;）又叫&lt;strong&gt;维恩图&lt;/strong&gt;，用于展示集合或类之间的大致关系。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/%E7%BB%B4%E6%81%A9%E5%9B%BE.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;维恩图&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;一般用方向表示全集，用圆形表示某一特定集合。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;递归指定集合法&#34;&gt;递归指定集合法&lt;/h2&gt;
&lt;p&gt;递归指定集合法是指通过计算规则定义集合中的元素的方法。&lt;/p&gt;
&lt;p&gt;Example：&lt;/p&gt;
&lt;p&gt;设 $a_0 = 1$，$a_{i+1}=2a_i(i \ge 0)$，定义 $S={a_0,a_1,\cdots,a_n,\cdots}={a_k|k\ge0}$，可以得出集合 $S$ 为&lt;/p&gt;
&lt;p&gt;$$
S={1,2,2^2,\cdots,2^n,\cdots}。
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;归纳法&#34;&gt;归纳法&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;指出集合至少要包含的元素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：基础，指出某些最 &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;基本元素 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;属于某集合；&lt;/li&gt;
&lt;li&gt;第二部分：归纳，指出 &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;由基本元素构造新元素的方法 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指出集合至多要包含的元素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第三部分：极小性，指出该 &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;集合的界限 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;基数&#34;&gt;基数&lt;/h1&gt;
&lt;p&gt;Definition：&lt;/p&gt;
&lt;p&gt;集合 $A$ 中的元素个数称为集合的&lt;strong&gt;基数&lt;/strong&gt;（base number），记为 $|A|$。&lt;/p&gt;
&lt;p&gt;对于任意集合 $A$ 来说，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若 $|A|$ 是 &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;有限的 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;，称该集合为&lt;strong&gt;有限集&lt;/strong&gt;（finite set）；&lt;/li&gt;
&lt;li&gt;若 $|A|$ 是 &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;无限的 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;，称该集合为&lt;strong&gt;无限集&lt;/strong&gt;（infinite set）。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;集合与元素的关系&#34;&gt;集合与元素的关系&lt;/h1&gt;
&lt;p&gt;元素与集合之间有两种关系：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;属于：如 “$a$ 是集合 $A$ 中的元素” 或 “$a$ 属于 $A$ ” 记为&lt;/p&gt;
&lt;p&gt;$$
a \in A。
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不属于：如 “$a$ 不是是集合 $A$ 中的元素” 或 “$a$ 不属于 $A$” 记为&lt;/p&gt;
&lt;p&gt;$$
a \notin A。
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;集合与集合的关系&#34;&gt;集合与集合的关系&lt;/h1&gt;
&lt;h2 id=&#34;外延性原理&#34;&gt;外延性原理&lt;/h2&gt;
&lt;p&gt;Theorem：&lt;/p&gt;
&lt;p&gt;两个集合 $A$ 和 $B$ &lt;strong&gt;相等&lt;/strong&gt;，当且仅当它们的&lt;strong&gt;元素完全相同&lt;/strong&gt;，记为 $A\ =\ B$，否则 $A$ 和 $B$ &lt;strong&gt;不相等&lt;/strong&gt;，记为 $A\ \neq\ B$。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;包含关系&#34;&gt;包含关系&lt;/h2&gt;
&lt;p&gt;Definitions：&lt;/p&gt;
&lt;p&gt;设 $A$，$B$ 是任意两个集合，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;包含与不包含&lt;/strong&gt;：如果 $B$ 的每个元素都是 $A$ 中的元素，则称 $B$ 是 $A$ 的&lt;strong&gt;子集&lt;/strong&gt;（subset），也称 ${B}$ &lt;strong&gt;被&lt;/strong&gt; ${A}$ &lt;strong&gt;包含&lt;/strong&gt;或 ${A}$ &lt;strong&gt;包含&lt;/strong&gt; ${B}$，记作 ${B \subseteq A}$ 或 $A \supseteq B$，称 $\subseteq$ 或 $\supseteq$ 为&lt;strong&gt;被包含关系&lt;/strong&gt;（included relation）或&lt;strong&gt;包含关系&lt;/strong&gt;（inclusion relation）；否则记作 ${B \nsubseteq A}$。&lt;/p&gt;
&lt;p&gt;“$\subseteq$” 定义的数学语言描述为：&lt;/p&gt;
&lt;p&gt;$$
B \subseteq A&lt;br&gt;
\Longleftrightarrow\ \forall x，
如果 x \subseteq B，
则 x \subseteq A。
$$&lt;/p&gt;
&lt;p&gt;由子集的定义可推出 $A \subseteq A$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;真包含&lt;/strong&gt;：如果 $B \subseteq A$ 并且 $A \neq B$，则称 $B$ 是 $A$ 的&lt;strong&gt;真子集&lt;/strong&gt;（proper subset），也称做 ${B}$ &lt;strong&gt;被&lt;/strong&gt; ${A}$ &lt;strong&gt;真包含&lt;/strong&gt;或 ${A}$ &lt;strong&gt;真包含&lt;/strong&gt; ${B}$，记作 ${B \subset A}$，称 $\subset$ 为&lt;strong&gt;真包含关系&lt;/strong&gt;（properly inclusion relation）。&lt;/p&gt;
&lt;p&gt;“$\subset$” 定义的数学语言描述为：&lt;/p&gt;
&lt;p&gt;$$
B \subset A \Longleftrightarrow 对 \forall x，若 x \in B，则 x \in A，并且 \exists y \in A，但 y \notin B。
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;相等关系&#34;&gt;相等关系&lt;/h2&gt;
&lt;p&gt;Theorem：&lt;/p&gt;
&lt;p&gt;设 $A$，$B$ 为任意两个集合，则 ${A\ =\ B}\ \Longleftrightarrow\ {A \subseteq B}$ 并且 ${B \subseteq A}$。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;常见特殊的集合&#34;&gt;常见特殊的集合&lt;/h1&gt;
&lt;h2 id=&#34;空集&#34;&gt;空集&lt;/h2&gt;
&lt;p&gt;Definition：&lt;/p&gt;
&lt;p&gt;不含任何元素的集合叫做&lt;strong&gt;空集&lt;/strong&gt;（empty set），记作 $\emptyset$。&lt;/p&gt;
&lt;p&gt;$$
\emptyset = {x|x \neq x}
$$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空集是一切集合的子集。&lt;/li&gt;
&lt;li&gt;空集是&lt;strong&gt;绝对唯一&lt;/strong&gt;的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$|\emptyset| = 0$，&lt;/li&gt;
&lt;li&gt;$|{\emptyset}| = 1$。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;证明空集是绝对唯一的&#34;&gt;证明空集是绝对唯一的&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;对 “唯一性” 的证明通常采用反证法（先假设 “不唯一”，得出矛盾，从而证明 “唯一性” 是正确的）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;p&gt;假设有两个不同的空集 $\emptyset_1$ 和 $\emptyset_2$ ，由空集是一切集合的子集得&lt;/p&gt;
&lt;p&gt;$$
\empty_1 \subseteq \emptyset_2\ 和\ \emptyset_2 \subseteq \emptyset_1
$$&lt;/p&gt;
&lt;p&gt;根据集合的相等关系，得 $\emptyset_1 = \emptyset_2$，与假设矛盾。因此空集是绝对唯一的。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;全集&#34;&gt;全集&lt;/h2&gt;
&lt;p&gt;Definition：&lt;/p&gt;
&lt;p&gt;在一个相对固定的范围内，包含此范围内所有元素的集合，称为&lt;strong&gt;全集&lt;/strong&gt;或&lt;strong&gt;论集&lt;/strong&gt;（universal set），用 $U$ 或 $E$ 表示。&lt;/p&gt;
&lt;p&gt;在维恩图中一般用方形表示全集。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/%E5%85%A8%E9%9B%86.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;全集&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;全集是&lt;strong&gt;相对唯一&lt;/strong&gt;的。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;m-元子集&#34;&gt;m 元子集&lt;/h2&gt;
&lt;p&gt;Definition：&lt;/p&gt;
&lt;p&gt;如果一个集合含有 $n$ 个元素，则称集合 $A$ 为 $n$ 元子集，称含有 $A$ 中 $m(0 \le m \le n)$个元素的子集为它的 $m$ 元子集。&lt;/p&gt;
&lt;p&gt;对于任意 $n$ 元集合 $A$，它的 $m$ 元（$0 \le m \le n$）子集（包含空集）个数为 $C_n^m$ 个，所以不同的子集个数为：&lt;/p&gt;
&lt;p&gt;$$
C_n^0 + C_n^1 + \cdots + C_n^n = (1 + 1)^n = 2^n。
\tag{1}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;幂集&#34;&gt;幂集&lt;/h2&gt;
&lt;p&gt;Definition：&lt;/p&gt;
&lt;p&gt;设 $A$ 为任意集合，把 $A$ 的所有不同子集构成的集合叫做 $A$ 的&lt;strong&gt;幂集&lt;/strong&gt;（power set），记作 $P(A)$，即&lt;/p&gt;
&lt;p&gt;$$
P(A)\ =\ {x|x \subseteq A}。
$$&lt;/p&gt;
&lt;p&gt;由公式 $(1)$ 可得 $|A| = 2^n(n=|A|)$。&lt;/p&gt;
&lt;p&gt;幂集也叫做&lt;strong&gt;集族&lt;/strong&gt;（family of set）或&lt;strong&gt;集合的集合&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对集族的研究在数学方面、知识库和表处理语言以及人工智能等方面都有十分重要的意义。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;集合的运算&#34;&gt;集合的运算&lt;/h1&gt;
&lt;h2 id=&#34;集合运算的定义&#34;&gt;集合运算的定义&lt;/h2&gt;
&lt;p&gt;Definition：&lt;/p&gt;
&lt;p&gt;设 $U$ 是全集，$A$、$B$ 是 $U$ 的两个子集，则&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;“$\cup$” &lt;strong&gt;并运算&lt;/strong&gt;（union operation）：$A \cup B = {x|x \in A\ or\ x \in B}$ 是 $A$ 与 $B$ 的&lt;strong&gt;并集&lt;/strong&gt;（union）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/%E5%B9%B6%E9%9B%86.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;并集&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;并集可代表两个集合 “相加”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“$\cap$” &lt;strong&gt;交运算&lt;/strong&gt;（intersection operation）：$A \cap B = {x|x \in A\ and\ B}$ 是 $A$ 与 $B$ 的&lt;strong&gt;交集&lt;/strong&gt;（intersection）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/%E4%BA%A4%E9%9B%86.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;交集&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“$\overline{A}$” &lt;strong&gt;补运算&lt;/strong&gt;（complement operation）：$\overline{A} = U - A$ 是集合 $A$ 的&lt;strong&gt;补集&lt;/strong&gt;（complement）（也可记为 $A&amp;rsquo;$、$~A$、$A^c$ 等）。$A$ 对于全集 $U$ 的补集是&lt;strong&gt;绝对补集&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/%E8%A1%A5%E9%9B%86.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;补集&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“$-$” &lt;strong&gt;差运算&lt;/strong&gt;（subtraction operation）：$A-B={x|x \in A\ and\ x \notin B} = A \cap \overline{B}$ 是 $A$ 与 $B$ 的&lt;strong&gt;差集&lt;/strong&gt;（subtraction)，又称 $B$ 在 $A$ 中的&lt;strong&gt;相对补集&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/%E5%B7%AE%E9%9B%86.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;差集&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;当 $A=U$ 时，$A-B=\overline{B}$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“$\oplus$” &lt;strong&gt;对称差运算&lt;/strong&gt;（symmetric difference operation）：$A \oplus B = {x|(x \in A\ and\ x \notin B)\ or\ (x\in B\ and\ x \notin A} = (A-B) \cup (B-A)$ 是 $A$ 与 $B$ 的&lt;strong&gt;对称差集&lt;/strong&gt;（symmetric difference of set）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/%E7%9B%B8%E5%AF%B9%E8%A1%A5%E9%9B%86.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;相对补集&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;扩展：&lt;/p&gt;
&lt;p&gt;设 $A_1,A_2,\cdots,A_n$ 是任意 $n$ 个集合，则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;这 $\mathbf n$ &lt;strong&gt;个集合的并集&lt;/strong&gt;是包含那些&lt;strong&gt;至少是这组集合中一个集合成员的元素&lt;/strong&gt;的集合，即&lt;/p&gt;
&lt;p&gt;$$
\displaystyle \bigcup_{i=1}^{n}{A_i}
= A_1 \cup A_2 \cup \cdots \cup A_n
= {x|x \in A_1\ or\ x \in A_2 \cdots or\ x \in A_n}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这 $\mathbf n$ &lt;strong&gt;个集合的交集&lt;/strong&gt;是那些属于&lt;strong&gt;这组集合中所有集合成员的元素&lt;/strong&gt;的集合，即&lt;/p&gt;
&lt;p&gt;$$
\displaystyle \bigcap_{i=1}^{n}{A_i}
= A_1 \cap A_2 \cap \cdots \cap A_n
= {x|x \in A_1\ and\ x \in A_2 \cdots and\ x \in A_n}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当 $n$ 无限增大时，可记为&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$\displaystyle \bigcup^{\infin}_{i=1}A_i = A_1 \cup A_2 \cup \cdots$&lt;/li&gt;
&lt;li&gt;$\displaystyle \bigcap^{\infin}_{i=1}A_i = A_1 \cap A_2 \cap \cdots$&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;集合运算的基本等式&#34;&gt;集合运算的基本等式&lt;/h2&gt;
&lt;p&gt;设 $U$ 为全集，$A$，$B$，$C$ 为任意集合，&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;等式&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;性质&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$A \cup A = A$&lt;br&gt;$A \cap A = A$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;幂等率&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$A \cup B = B \cup A$&lt;br&gt;$A \cap B = B \cap A$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;交换律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$A \cup (B \cup C) = (A \cup B) \cup C$&lt;br&gt;$A \cap (B \cap C) = (A \cap B) \cap C$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;结合律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$A \cup \emptyset = A$&lt;br&gt;$A \cap U = A$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;同一律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$A \cup U = U$&lt;br&gt;$A \cap \emptyset = \emptyset$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;零律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$A \cup (B \cap C) = (A \cup B) \cap (A \cup C)$&lt;br&gt;$A \cap (B \cup C) = (A \cap B) \cup (A \cap C)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;分配律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$A \cup (A \cap B) = A$&lt;br&gt;$A \cap (A \cup B)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;吸收律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$\overline{A} \cap A = \emptyset$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;矛盾律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$\overline{A} \cup A = U$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;排中律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$\overline{\overline{A}}=A$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;双重否定律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$\overline{A \cup B} = \overline{A} \cap \overline{B}$&lt;br&gt;$\overline{A \cap B} = \overline{A}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;德摩根律&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Example：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/%E5%88%86%E9%85%8D%E5%BE%8B-16308401576391.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;分配律&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;证明德摩根律的等式之一：$\overline{A \cup B} = \overline{A} \cap \overline{B}$&lt;/p&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;证明 $\overline{A \cup B} \subseteq \overline{A} \cap \overline{B}$&lt;/p&gt;
&lt;p&gt;$\begin{aligned} \forall x \in \overline{A \cup B} \quad &amp;amp; \Rightarrow\ x \notin A \cup B\ \Rightarrow\ x \notin A\ and\ x \notin B\ &amp;amp; \Rightarrow x \in \overline{A}\ and\ x \in \overline{B}\ \Rightarrow\ x \in \overline{A} \cap \overline{B}， \end{aligned}$&lt;/p&gt;
&lt;p&gt;即 $\overline{A \cup B} \subseteq \overline{A} \cap \overline{B}$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;证明 $\overline{A} \cap \overline{B} \subseteq \overline{A \cup B}$&lt;/p&gt;
&lt;p&gt;$\begin{aligned} \forall x \in \overline{A} \cap \overline{B} \quad &amp;amp; \Rightarrow\ x \in \overline{A}\ and\ x \in \overline{B}\ \Rightarrow\ x \notin A\ and\ x \notin B\ &amp;amp; \Rightarrow\ x \notin A \cup B\ \Rightarrow\ x \in \overline{A} \cap \overline{B}， \end{aligned}$&lt;/p&gt;
&lt;p&gt;即 $\overline{A} \cap \overline{B} \subseteq \overline{A \cup B}$。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;综上可得 $\overline{A \cup B} = \overline{A} \cap \overline{B}$。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;无限集合&#34;&gt;无限集合&lt;/h1&gt;
&lt;p&gt;有限集合与无限集合的根本区别是：对于无限集合，表面上个数完全不相等的两个集合之间仍可能存在等势关系，如集合与真子集之间。&lt;/p&gt;
&lt;h2 id=&#34;等势&#34;&gt;等势&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;冯·诺依曼的自然数定义&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;基于基数，利用一个集合的序列来定义自然数。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$\emptyset \in \mathbf{N}$；&lt;/li&gt;
&lt;li&gt;若 $n \in \mathbf{N}$，则 $n&amp;rsquo; \equiv n \cup {n} \in \mathbf{N}$。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从而，这个 &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;集合序列的基数 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;可以来定义自然数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$0 \equiv \emptyset$；&lt;/li&gt;
&lt;li&gt;$1 \equiv \emptyset \cup {\emptyset} = {\emptyset} = {0}$；&lt;/li&gt;
&lt;li&gt;$2 \equiv {\emptyset} \cup {{\emptyset}} = {\emptyset, {\emptyset}} = {0,1}$；&lt;/li&gt;
&lt;li&gt;$\cdots$&lt;/li&gt;
&lt;li&gt;$n \equiv {0,1,2,3,\cdots,n-1}$；&lt;/li&gt;
&lt;li&gt;$\cdots$&lt;/li&gt;
&lt;li&gt;$\mathbf{N} \equiv {0,1,2,\cdots,n,\cdots}$。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;实际上，任意含有 $n$ 个元素的集合都可以用 $n$ 表示。即，任意两个基数相同的集合之间都可以建立一一对应关系。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Definition：&lt;/p&gt;
&lt;p&gt;设 $A$，$B$ 为两个集合，若在 $A$，$B$ 之间存在一种一一对应的关系：&lt;/p&gt;
&lt;p&gt;$$
\Psi:\ A \rightarrow B
$$&lt;/p&gt;
&lt;p&gt;则称 $A$ 与 $B$ 是&lt;strong&gt;等势的&lt;/strong&gt;（equipotential），记作：&lt;/p&gt;
&lt;p&gt;$$
A \sim B
$$&lt;/p&gt;
&lt;p&gt;也称集合 $A$、$B$ &lt;strong&gt;等势&lt;/strong&gt;（equipotent）。&lt;/p&gt;
&lt;p&gt;由等势定义可得，如果 $A = B$，那么 $A \sim B$，反之则不一定成立。&lt;/p&gt;
&lt;p&gt;Theorem：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;两个有限集合等式当且仅当它们有相同的元素个数。&lt;/li&gt;
&lt;li&gt;有限集合不和其任何真子集等势。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;可数集合可以与其可数的真子集等势 &lt;code&gt;&amp;lt;/u&amp;gt;&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;可数集合&#34;&gt;可数集合&lt;/h2&gt;
&lt;p&gt;Definition：&lt;/p&gt;
&lt;p&gt;凡与自然数集合 $\mathbf{N}$ 等势的集合，称之为&lt;strong&gt;可数集合&lt;/strong&gt;（countable set），该类集合的基数记为 $\aleph_0$（aleph，阿列夫）。&lt;/p&gt;
&lt;p&gt;Example：&lt;/p&gt;
&lt;p&gt;证明以下集合是可数集合，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;$O^+ = {x|x \in \mathbf{N}，x是正奇数}$&lt;/p&gt;
&lt;p&gt;在 $O^+$ 与 $\mathbf{N}$ 之间建立一个一一对应关系 $\varphi_1 : \mathbf{N} \rightarrow O^+$：&lt;/p&gt;
&lt;p&gt;$$
\begin{matrix}
0&amp;amp; 1&amp;amp; 2&amp;amp; \cdots&amp;amp; n&amp;amp; \cdots\
\downarrow&amp;amp; \downarrow&amp;amp; \downarrow&amp;amp; \downarrow&amp;amp; \downarrow&amp;amp; \downarrow\
1&amp;amp; 3&amp;amp; 5&amp;amp; \cdots&amp;amp; 2n+1&amp;amp; \cdots&amp;amp;\
\end{matrix}
$$&lt;/p&gt;
&lt;p&gt;所以 $O^+$ 是可数集合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$P = {x|x \in \mathbf{N}，x是素数}$&lt;/p&gt;
&lt;p&gt;在 $P$ 与 $\mathbf{N}$ 之间建立一个一一对应关系 $\varphi_2 : \mathbf{N} \rightarrow P$：&lt;/p&gt;
&lt;p&gt;$$
\begin{matrix}
0&amp;amp; 1&amp;amp; 2&amp;amp; 3&amp;amp; 4&amp;amp; \cdots\
\downarrow&amp;amp; \downarrow&amp;amp; \downarrow&amp;amp; \downarrow&amp;amp; \downarrow&amp;amp; \downarrow\
2&amp;amp; 3&amp;amp; 5&amp;amp; 7&amp;amp; 11&amp;amp; \cdots&amp;amp;\
\end{matrix}
$$&lt;/p&gt;
&lt;p&gt;所以 $P$ 是可数集合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有理数集合 $\mathbf{Q}$&lt;/p&gt;
&lt;p&gt;将 $\mathbf{Q}$ 中的所有元素都写成 $p/q$（$p$、$q$ 是整数，且 $q \neq 0$）的形式，从 $0/1^{[0]}$ 开始，将所有有理数与自然数一一配对（其中 $p/q^{[n]}$ 的上标 $[n]$ 代表对应于该有理数的自然数）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/%E8%AF%81%E6%98%8EQ%E6%98%AF%E5%8F%AF%E6%95%B0%E9%9B%86%E5%90%88-16308441770882.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;证明Q是可数集合&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;所以 $\mathbf{Q}$ 是可数集合。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;不可数集合&#34;&gt;不可数集合&lt;/h2&gt;
&lt;p&gt;Definition：&lt;/p&gt;
&lt;p&gt;开区间 $(0,1)$ 称为不可数集合，凡&lt;strong&gt;与开区间 $(0,1)$ 等势&lt;/strong&gt;的集合，都称为&lt;strong&gt;不可数集合&lt;/strong&gt;，该类集合的基数记为 $\aleph$（或 $\aleph_1$）。&lt;/p&gt;
&lt;p&gt;Example：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;闭区间 $[0,1]$ 是不可数集合。&lt;/p&gt;
&lt;p&gt;证明：在 $[0,1]$ 和 $(0,1)$ 之间建立如下对应关系：&lt;/p&gt;
&lt;p&gt;$$
R:
\begin{cases}
\begin{matrix}
0&amp;amp; \rightarrow&amp;amp; 1/4 \
1&amp;amp; \rightarrow&amp;amp; 1/2 \
\cfrac{1}{2^n}&amp;amp; \rightarrow&amp;amp; \cfrac{1}{2^{n+2}},&amp;amp; n=1,2,3,\cdots \
n&amp;amp; \rightarrow&amp;amp; n,&amp;amp; 其他 n \in (0,1)\
\end{matrix}
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;显然 $[0,1]$ 与 $(0,1)$ 是等势的，所以 $[0,1]$ 是不可数集合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实数集 $\mathbf R$ 是不可数集合。&lt;/p&gt;
&lt;p&gt;证明：在实数集 $\mathbf R$ 和开区间 $(0,1)$ 之间建立如下对应关系：&lt;/p&gt;
&lt;p&gt;$$
n \rightarrow \tan{\pi\bigg(\cfrac{2n-1}{2}\bigg)}
$$&lt;/p&gt;
&lt;p&gt;显然 $(0,1)$ 与 $\mathbf{R}$ 之间是等势的，所以 $\mathbf{R}$ 是一个不可数集合。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>命题逻辑</title>
        <link>https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/</link>
        <pubDate>Sun, 23 Jan 2022 02:03:41 +0800</pubDate>
        
        <guid>https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/</guid>
        <description>&lt;h1 id=&#34;命题的定义&#34;&gt;命题的定义&lt;/h1&gt;
&lt;p&gt;具有&lt;u&gt;确切真值的陈述句&lt;/u&gt;称为&lt;strong&gt;命题&lt;/strong&gt;（&lt;strong&gt;proposition&lt;/strong&gt;）。命题可以取一个 “值”，称为&lt;strong&gt;真值&lt;/strong&gt;。真值只有 “真”（用 “T” or “1” 表示，即 True）和 “假”（用 “F” or “0” 表示，即 False）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通常用带或不带下标的大写英文字母表示命题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;非命题&#34;&gt;非命题&lt;/h2&gt;
&lt;p&gt;一切没有判断内容的句子，如命令句（祈使句）、感叹句、疑问句、二义性的陈述句等都&lt;u&gt;不能作为命题&lt;/u&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;原子命题与复合命题&#34;&gt;原子命题与复合命题&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原子命题&lt;/strong&gt;（&lt;strong&gt;简单命题&lt;/strong&gt;）：不能再分解为更简单命题的命题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复合命题&lt;/strong&gt;：可以分解为更为简单命题的命题。这些简单命题之间是通过联结词和标点符号复合而成。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;命题变元&#34;&gt;命题变元&lt;/h2&gt;
&lt;p&gt;一个特定的命题是一个&lt;strong&gt;常值命题&lt;/strong&gt;，它不是具有值 “T”，就是具有值 “F”。&lt;/p&gt;
&lt;p&gt;一个任意的没有赋予具体内容的原子命题就是一个&lt;u&gt;变量命题&lt;/u&gt;，常称它为&lt;strong&gt;命题变量&lt;/strong&gt;（或&lt;strong&gt;命题变元&lt;/strong&gt;，&lt;strong&gt;propositional vatiable&lt;/strong&gt;）。&lt;/p&gt;
&lt;p&gt;命题变元&lt;u&gt;无具体的真值&lt;/u&gt;，它的变域是集合 ${T,F}$（或 ${0,1}$）。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;联结词&#34;&gt;联结词&lt;/h1&gt;
&lt;p&gt;联结词是&lt;strong&gt;两个命题真值之间的联结&lt;/strong&gt;，而不是命题内容之间的连接，因此复合命题的真值只取决于&lt;u&gt;构成它们的各简单命题的真值&lt;/u&gt;，而与它们的内容无关，与二者之间是否有关系无关。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264217690456.jpg&#34;
	width=&#34;1268&#34;
	height=&#34;208&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264217690456_hue2630a66e1aca6ccf2ff54ba175f94c3_76814_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264217690456_hue2630a66e1aca6ccf2ff54ba175f94c3_76814_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;609&#34;
		data-flex-basis=&#34;1463px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;否定联结词&#34;&gt;否定联结词&lt;/h2&gt;
&lt;p&gt;设 $P$ 是任意一个命题，复合命题 &lt;font color=&#34;green&#34;&gt;“非 $P$”&lt;/font&gt;（或 &lt;font color=&#34;green&#34;&gt;“$P$ 的否定”&lt;/font&gt;）称为 $P$ 的&lt;strong&gt;否定式&lt;/strong&gt;（&lt;strong&gt;negation&lt;/strong&gt;），记作 &lt;font color=&#34;red&#34;&gt;$\neg P$&lt;/font&gt;，“$\neg$” 为否定联结词。&lt;/p&gt;
&lt;p&gt;$P$ 为真当且仅当 $\neg P$ 为假。&lt;/p&gt;
&lt;p&gt;真值表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$P$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$\neg P$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;“$\neg$” 是自然语言中的 “非”、“不”、“没有” 等的逻辑抽象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;合取联结词&#34;&gt;合取联结词&lt;/h2&gt;
&lt;p&gt;设 $P$、$Q$ 是任意两个命题，复合命题 &lt;font color=&#34;green&#34;&gt;“$P$ 并且 $Q$”&lt;/font&gt;（或 &lt;font color=&#34;green&#34;&gt;“$P$ 和 $Q$”&lt;/font&gt;）称为 $P$ 与 $Q$ 的&lt;strong&gt;合取式&lt;/strong&gt;（&lt;strong&gt;conjunction&lt;/strong&gt;），记作 &lt;font color=&#34;red&#34;&gt;$P \wedge Q$&lt;/font&gt;，“$\wedge$” 为&lt;strong&gt;合取联结词&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;$P \wedge Q$ 为真当且仅当 $P$、$Q$ 同为真。&lt;/p&gt;
&lt;p&gt;真值表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$P \qquad Q$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$P \wedge Q$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0 \qquad 0$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0 \qquad 1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1 \qquad 0$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1 \qquad 1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16263438047401.jpg&#34;
	width=&#34;1246&#34;
	height=&#34;252&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16263438047401_hucfea1a08860652450ec4e90e3f76017c_92833_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16263438047401_hucfea1a08860652450ec4e90e3f76017c_92833_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;494&#34;
		data-flex-basis=&#34;1186px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;析取联结词&#34;&gt;析取联结词&lt;/h2&gt;
&lt;p&gt;设 $P$、$Q$ 是任意两个命题，复合命题 &lt;font color=&#34;green&#34;&gt;“$P$ 或 $Q$”&lt;/font&gt; 称为 $P$ 与 $Q$ 的&lt;strong&gt;析取式&lt;/strong&gt;（&lt;strong&gt;disjunction&lt;/strong&gt;），记作 &lt;font color=&#34;red&#34;&gt;$P \vee Q$&lt;/font&gt;，“$\vee$” 为&lt;strong&gt;析取联结词&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;$P \vee Q$ 为真当且仅当 $P$、$Q$ 至少有一个为真。&lt;/p&gt;
&lt;p&gt;真值表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$P \qquad Q$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$P \vee Q$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0 \qquad 0$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0 \qquad 1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1 \qquad 0$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1 \qquad 1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;联结词 “$\vee$” 是自然语言中的 “或”、“或者” 等的逻辑抽象。&lt;/p&gt;
&lt;p&gt;自然语言中的 “或” 有 “可兼或”（或称为同或）、“不可兼或”（即异或）两种。&lt;/p&gt;
&lt;p&gt;严格来讲，析取联结词实际上代表的是可兼或。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;异或联结词&#34;&gt;异或联结词&lt;/h2&gt;
&lt;p&gt;设 $P$、$Q$ 是任意两个命题，复合命题 &lt;font color=&#34;green&#34;&gt;“$P$ 或 $Q$”&lt;/font&gt; 有时代表不可兼或，记作 &lt;font color=&#34;red&#34;&gt;$P \oplus Q$ 或 $P \overline{\vee} Q$&lt;/font&gt;，“$\oplus$” 或 “$\overline{\vee}$” 为&lt;strong&gt;异或联结词&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;$P \oplus Q$ 为真当且仅当 $P$、$Q$ 中有且仅有一个为真。&lt;/p&gt;
&lt;p&gt;真值表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$P \qquad Q$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$P \vee Q$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0 \qquad 0$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0 \qquad 1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1 \qquad 0$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1 \qquad 1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;蕴涵联结词&#34;&gt;蕴涵联结词&lt;/h2&gt;
&lt;p&gt;设 $P$、$Q$ 是任意两个命题，复合命题 &lt;font color=&#34;green&#34;&gt;“如果 $P$，则 $Q$”&lt;/font&gt; 称为 $P$ 与 $Q$ 的&lt;strong&gt;蕴涵式&lt;/strong&gt;（&lt;strong&gt;implication&lt;/strong&gt;），记作 $P \rightarrow Q$，“$\rightarrow$” 为&lt;strong&gt;蕴含联结词&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;$P \rightarrow Q$ 为假当且仅当 $P$ 为真且 $Q$ 为假（$P$ 为假时，认为该蕴涵式为真）。&lt;/p&gt;
&lt;p&gt;一般把蕴涵式 $P \rightarrow Q$ 中的 $P$ 称为该蕴涵式的&lt;strong&gt;前件&lt;/strong&gt;，$Q$ 称为蕴涵式的&lt;strong&gt;后件&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;真值表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$P \qquad Q$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$P \vee Q$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0 \qquad 0$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0 \qquad 1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1 \qquad 0$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1 \qquad 1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264203339885.jpg&#34;
	width=&#34;1270&#34;
	height=&#34;255&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264203339885_hu88f5b120c041e39880e2031e2fb61706_98581_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264203339885_hu88f5b120c041e39880e2031e2fb61706_98581_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;498&#34;
		data-flex-basis=&#34;1195px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264204420358.jpg&#34;
	width=&#34;1289&#34;
	height=&#34;552&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264204420358_hu28ab853506cd94c38e145e512f3e7ad6_200103_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264204420358_hu28ab853506cd94c38e145e512f3e7ad6_200103_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;233&#34;
		data-flex-basis=&#34;560px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;等价联结词&#34;&gt;等价联结词&lt;/h2&gt;
&lt;p&gt;设 $P$、$Q$ 是任意两个命题，复合命题 &lt;font color=&#34;green&#34;&gt;“$P$ 当且仅当 $Q$”&lt;/font&gt; 称为 $P$ 与 $Q$ 的&lt;strong&gt;蕴涵式&lt;/strong&gt;（&lt;strong&gt;implication&lt;/strong&gt;），记作 $P \leftrightarrow Q$，“$\leftrightarrow$” 为&lt;strong&gt;等价联结词&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;$P \leftrightarrow Q$ 为真当且仅当 $P$、$Q$ 同为真假。&lt;/p&gt;
&lt;p&gt;真值表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$P \qquad Q$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$P \vee Q$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0 \qquad 0$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0 \qquad 1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1 \qquad 0$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$0$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1 \qquad 1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;“$\leftrightarrow$” 是自然语言中的 “等价”、“充分必要条件”、“当且仅当” 等的逻辑抽象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264212687867.jpg&#34;
	width=&#34;1139&#34;
	height=&#34;479&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264212687867_hue5ca5c010dbbba44b24e3fa22f786b4c_149023_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264212687867_hue5ca5c010dbbba44b24e3fa22f786b4c_149023_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;237&#34;
		data-flex-basis=&#34;570px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264213759514.jpg&#34;
	width=&#34;1138&#34;
	height=&#34;303&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264213759514_hu6d4967bddb04651524a9f5a0bbc9dea9_51396_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264213759514_hu6d4967bddb04651524a9f5a0bbc9dea9_51396_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;375&#34;
		data-flex-basis=&#34;901px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;命题联结词 “$\wedge$”、“$\vee$”、“$\leftrightarrow$” 具有对称性，而 “$\neg$”、“$\rightarrow$” 没有。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;优先级&#34;&gt;优先级&lt;/h2&gt;
&lt;p&gt;优先顺序：括号、否定、合取、析取、蕴涵、等价。同级的联结词，按出现的先后次序（从左到右）。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;命题联结词的应用&#34;&gt;命题联结词的应用&lt;/h1&gt;
&lt;h2 id=&#34;联结词与开关电路&#34;&gt;联结词与开关电路&lt;/h2&gt;
&lt;p&gt;设命题 $P$：开关 $S_1$ 闭合；命题 $Q$：开关 $S_2$ 闭合。则以下电路可用复合命题表示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/6264222756445.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;16264222756445&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;“串联”：$P \wedge Q$；&lt;/li&gt;
&lt;li&gt;“并联”：$P \vee Q$；&lt;/li&gt;
&lt;li&gt;“断开”：$\neg P$。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;联结词与逻辑电路&#34;&gt;联结词与逻辑电路&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;与门：$\wedge$&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264225030176-16288555505671.jpg&#34;
	width=&#34;338&#34;
	height=&#34;138&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264225030176-16288555505671_huf9ddaab5019eaa007550a0744b36740e_8361_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264225030176-16288555505671_huf9ddaab5019eaa007550a0744b36740e_8361_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;244&#34;
		data-flex-basis=&#34;587px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;或门：$\vee$&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264225922743.jpg&#34;
	width=&#34;336&#34;
	height=&#34;139&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264225922743_hu3f9653ce6a2fe72d40eb962455701cb7_8726_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264225922743_hu3f9653ce6a2fe72d40eb962455701cb7_8726_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;241&#34;
		data-flex-basis=&#34;580px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;非门：$\neg$&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264226657751.jpg&#34;
	width=&#34;330&#34;
	height=&#34;139&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264226657751_hu8acea725c0081afabd9af60bbfe33f76_6408_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264226657751_hu8acea725c0081afabd9af60bbfe33f76_6408_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;237&#34;
		data-flex-basis=&#34;569px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;联结词与网页检索&#34;&gt;联结词与网页检索&lt;/h2&gt;
&lt;p&gt;在&lt;strong&gt;布尔检索&lt;/strong&gt;中，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$\wedge$（一般用 AND 表示）用于匹配包含两个检索项的记录；&lt;/li&gt;
&lt;li&gt;$\vee$（一般用 OR 表示）用于匹配包含两个检索项至少一个的记录；&lt;/li&gt;
&lt;li&gt;$\neg$（一般用 NOT 表示）用于排除某个特定的检索项。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;联结词与位运算&#34;&gt;联结词与位运算&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;按位与：$\wedge$；&lt;/li&gt;
&lt;li&gt;按位或：$\vee$；&lt;/li&gt;
&lt;li&gt;按位取反：$\neg$。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;命题公式&#34;&gt;命题公式&lt;/h1&gt;
&lt;p&gt;复合命题是由原子命题与联结词构成的命题。所以，当其中的原子命题是&lt;a href=&#34;#命题变元&#34;&gt;命题变元&lt;/a&gt;时，此复合命题也即为命题变元的函数，且该函数的值仍为 “真” 或 “假” 值，这样的函数可形象地称为 “&lt;strong&gt;真值函数&lt;/strong&gt;” 或 “&lt;strong&gt;命题公式&lt;/strong&gt;”，此命题公式没有确切的真值。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;命题公式的定义&#34;&gt;命题公式的定义&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;命题演算的合式公式&lt;/strong&gt;（&lt;strong&gt;Well Formed Formula&lt;/strong&gt;，&lt;strong&gt;WFF&lt;/strong&gt;），又称&lt;strong&gt;命题公式&lt;/strong&gt;（简称公式），按如下规则生成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;命题变元本身是一个公式；&lt;/li&gt;
&lt;li&gt;如果 $G$ 是公式，则 $(\neg G)$ 也是公式；&lt;/li&gt;
&lt;li&gt;如果 $G$、$H$ 是公式，则 $(G \wedge H)$、$(G \vee H)$、$(G \rightarrow H)$、$(G \leftrightarrow H)$ 也是公式；&lt;/li&gt;
&lt;li&gt;仅由&lt;u&gt;有限步使用规则 1、2、3&lt;/u&gt; 后所得到的包含命题变元、联结词和括号的符号串才是命题公式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果 $G$ 是含有 $n$ 个命题变元 $P_1、P_2、P_3、\cdots、P_n$ 的公式，可记为：$G(P_1,P_2,P_3,\cdots,P_n)$ 或简写为 $G$。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;原子命题变元是最简单的合式公式，称为原子合式公式，简称原子公式；&lt;/li&gt;
&lt;li&gt;命题公式没有真值，只有对其命题变元进行真值指派后，方可确定命题公式的真值；&lt;/li&gt;
&lt;li&gt;整个公式的最外层括号可以省略，公式中不影响运算次序的括号也可以省略；&lt;/li&gt;
&lt;li&gt;在实际应用中，为了便于存储和运算，命题公式常用二元数方式来表达。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264271696146.jpg&#34;
	width=&#34;870&#34;
	height=&#34;365&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264271696146_hu86ee270a19e05374e708ae78b5662829_47775_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264271696146_hu86ee270a19e05374e708ae78b5662829_47775_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;238&#34;
		data-flex-basis=&#34;572px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;命题公式的解释&#34;&gt;命题公式的解释&lt;/h2&gt;
&lt;p&gt;设 $P_1、P_2、P_3、\cdots、P_n$ 是出现在公式 $G$ 中的所有命题变元，给 $P_1、P_2、P_3、\cdots、P_n$ 指定一组真值，则这组真值称为 $G$ 的一个&lt;strong&gt;解释&lt;/strong&gt;，常记为 &lt;font color=&#34;red&#34;&gt;$I$&lt;/font&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果公式 $G$ 在解释 $I$ 下是真的，则称 &lt;font color=&#34;green&#34;&gt;$I$ 满足 $G$&lt;/font&gt;，此时 $I$ 是 $G$ 的&lt;strong&gt;成真赋值&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;如果 $G$ 在解释 $I$ 下是假的，则称 &lt;font color=&#34;green&#34;&gt;$I$ 弄假于 $G$&lt;/font&gt;，此时 $I$ 是 $G$ 的&lt;strong&gt;成假赋值&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;命题公式的分类&#34;&gt;命题公式的分类&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;永真公式&lt;/strong&gt;（又叫&lt;strong&gt;重言式&lt;/strong&gt;，&lt;strong&gt;tautology&lt;/strong&gt;）：如果在它的所有解释之下其真值都为 “真”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;永假公式&lt;/strong&gt;（又叫&lt;strong&gt;矛盾式&lt;/strong&gt;，&lt;strong&gt;contradiction&lt;/strong&gt;）：如果在它的所有解释下其真值都为 “假”。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;不可满足公式&lt;/strong&gt;：即永假公式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可满足公式&lt;/strong&gt;（&lt;strong&gt;satisfiable&lt;/strong&gt;）：不为永假公式的公式。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;$G$ 是永真的当且仅当 $\neg G$ 是永假的；&lt;/li&gt;
&lt;li&gt;$G$ 是可满足的当且仅当至少有一个解释 $I$，使 $G$ 在 $I$ 下为真；&lt;/li&gt;
&lt;li&gt;若 $G$ 是永真式，则 $G$ 一定是可满足式，但反之可满足式不一定是永真式。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;等价的命题公式&#34;&gt;等价的命题公式&lt;/h2&gt;
&lt;p&gt;设 $G$、$H$ 是两个命题公式，$P_1、P_2、P_3、\cdots、P_n$ 是出现在 $G$、$H$ 中所有的命题变元，如果对于 $P_1、P_2、P_3、\cdots、P_n$ 的 $2^n$ 个解释，$G$ 与 $H$ 的&lt;strong&gt;真值结果都相同&lt;/strong&gt;，则称公式 $G$ 与 $H$ 是&lt;strong&gt;等价&lt;/strong&gt;的，记作 &lt;font color=&#34;red&#34;&gt;$G = H$&lt;/font&gt;（或 &lt;font color=&#34;red&#34;&gt;$G \Leftrightarrow H$&lt;/font&gt;）。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;公式等价的充分必要条件&#34;&gt;公式等价的充分必要条件&lt;/h3&gt;
&lt;p&gt;对于任意两个公式 $G$ 和 $H$，&lt;font color=&#34;red&#34;&gt;$G = H$ 的充分必要条件是公式 $G \leftrightarrow H$ 是永真公式&lt;/font&gt;。&lt;/p&gt;
&lt;p&gt;Proof：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必要性：假定 $G = H$，则 $G$、$H$ 在其任意解释 $I$ 下或同为真或同为假，于是由 “$\leftrightarrow$” 的意义知，公式 $G \leftrightarrow H$ 在其任何的解释 $I$ 下，其真值为 “真”，即 $G \leftrightarrow H$ 为永真公式。&lt;/li&gt;
&lt;li&gt;充分性：假定公式 $G \leftrightarrow H$ 是永真公式，$I$ 是它的任意解释，在 $I$ 下，$G \leftrightarrow H$ 为真，因此，$G$，$H$ 或同为真或同为假，由于 $I$ 的任意性，故有 $G = H$。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;可判定性：能否给出一个可行方法，完成对任意公式的判定问题（类型或等价判定）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;命题公式是可判定的。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;命题公式的基本等价关系&#34;&gt;命题公式的基本等价关系&lt;/h2&gt;
&lt;p&gt;设 $G$、$H$、$S$ 为任意的命题公式。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;性质&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;等式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b id=&#34;a2&#34;&gt;&lt;/b&gt;幂等律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \vee G = G$&lt;br/&gt;$G \wedge G = G$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b id=&#34;a3&#34;&gt;&lt;/b&gt;交换律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \vee H = H \vee G$&lt;br/&gt;$G \wedge H = H \wedge G$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;结合律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \vee (H \vee S) = (G \vee H) \vee S$&lt;br/&gt;$G \wedge (H \wedge S) = (G \wedge H) \wedge S$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b id=&#34;a4&#34;&gt;&lt;/b&gt;同一律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \wedge 0 = G$&lt;br/&gt;$G \vee 1 = G$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b id=&#34;a5&#34;&gt;&lt;/b&gt;零律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \vee 1 = 1$&lt;br/&gt;$G \wedge 0 = 0$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b id=&#34;a6&#34;&gt;&lt;/b&gt;分配律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \vee (H \wedge S) = (G \vee H) \wedge (G \vee S)$&lt;/br&gt;$G \wedge (H \vee S) = (G \wedge H) \vee (G \wedge S)$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;吸收率&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \vee (G \wedge H) = G$&lt;br/&gt;$G \wedge (G \vee H) = G$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b id=&#34;a7&#34;&gt;&lt;/b&gt;矛盾律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$\neg G \wedge G = 0$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b id=&#34;a8&#34;&gt;&lt;/b&gt;排中律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$\neg G \vee G = 1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b id=&#34;a9&#34;&gt;&lt;/b&gt;双重否定律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$\neg(\neg G) = G$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b id=&#34;a10&#34;&gt;&lt;/b&gt;德摩根律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$\neg(G \vee H) = \neg G \wedge \neg H$&lt;/br&gt;$\neg(G \wedge H) = \neg G \vee \neg H$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b id=&#34;a11&#34;&gt;&lt;/b&gt;蕴涵式&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \rightarrow H = \neg G \vee H$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;假言易位&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \rightarrow H = \neg H \rightarrow \neg G$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b id=&#34;a12&#34;&gt;&lt;/b&gt;等价式&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \leftrightarrow H = (G \rightarrow H) \wedge (H \rightarrow G) = (\neg G \vee H) \wedge (\neg H \vee G)$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;等价否定等式&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \leftrightarrow H = \neg G \leftrightarrow \neg H$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;归谬论&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$(G \rightarrow H) \wedge (G \rightarrow \neg H) = \neg G$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;基本等价关系的应用&#34;&gt;基本等价关系的应用&lt;/h3&gt;
&lt;p&gt;（1）判断公式类型&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264420672234.jpg&#34;
	width=&#34;620&#34;
	height=&#34;374&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264420672234_hu0a76cc8c47f9d2296d062c2fe1b4dbd6_64342_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264420672234_hu0a76cc8c47f9d2296d062c2fe1b4dbd6_64342_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;165&#34;
		data-flex-basis=&#34;397px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;（2）证明公式等价&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264420999525.jpg&#34;
	width=&#34;883&#34;
	height=&#34;430&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264420999525_huca269d7d12c8879b75f374fad79b9fe7_71517_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264420999525_huca269d7d12c8879b75f374fad79b9fe7_71517_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;205&#34;
		data-flex-basis=&#34;492px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;（3）开关电路化简&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264421759266.jpg&#34;
	width=&#34;646&#34;
	height=&#34;360&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264421759266_hu5574b9c65f9ac89a38dfa11e438e2a05_51584_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264421759266_hu5574b9c65f9ac89a38dfa11e438e2a05_51584_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;179&#34;
		data-flex-basis=&#34;430px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;（4）逻辑电路化简&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264422111932.jpg&#34;
	width=&#34;622&#34;
	height=&#34;380&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264422111932_huf4e47adfb16cfed8e0364c5edfb19a24_43057_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264422111932_huf4e47adfb16cfed8e0364c5edfb19a24_43057_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;163&#34;
		data-flex-basis=&#34;392px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;（5）其他&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264422514796.jpg&#34;
	width=&#34;1232&#34;
	height=&#34;605&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264422514796_hua2333f9022fea485e830b3ba3a2e8ad2_218049_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264422514796_hua2333f9022fea485e830b3ba3a2e8ad2_218049_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;488px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;范式&#34;&gt;范式&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;命题变元或命题变元的否定称为&lt;strong&gt;文字&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;u&gt;有限个&lt;/u&gt;文字（$\ge 1$）的析取称为&lt;strong&gt;简单析取式&lt;/strong&gt;（或&lt;strong&gt;子句&lt;/strong&gt;）。
单个文字可构成子句。&lt;/li&gt;
&lt;li&gt;&lt;u&gt;有限个&lt;/u&gt;文字（$\ge 1$）的合取称为&lt;strong&gt;简单合取式&lt;/strong&gt;（或&lt;strong&gt;短语&lt;/strong&gt;）。
单个文字可构成短语。&lt;/li&gt;
&lt;li&gt;$P$ 与 $\neg P$ 称为&lt;strong&gt;互补对&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;有限个&lt;/u&gt;（$\ge 1$）简单合取式（短语）的析取式称为&lt;strong&gt;析取范式&lt;/strong&gt;（&lt;strong&gt;disjunctive normal form&lt;/strong&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;u&gt;有限个&lt;/u&gt;（$\ge 1$）简单析取式（子句）的合取式称为&lt;strong&gt;合取范式&lt;/strong&gt;（&lt;strong&gt;conjunctive normal form&lt;/strong&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文字可以是子句、短语、析取范式、合取范式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265483645877.png&#34;
	width=&#34;1226&#34;
	height=&#34;340&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265483645877_hu1f1c7db97c461b604dd16ebdd7580e66_88208_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265483645877_hu1f1c7db97c461b604dd16ebdd7580e66_88208_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;360&#34;
		data-flex-basis=&#34;865px&#34;
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;命题公式的析取范式可以指出公式何时为真，而合取范式可以指出公式何时为假，从而能够替代真值表。&lt;/li&gt;
&lt;li&gt;命题公式的范式表达并不唯一。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Example：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;$P$、$\neg P$ 可以是文字、短语、子句、析取范式、合取范式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$P \vee Q \vee \neg R$ 是子句、合取范式、析取范式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将该式认为是子句，那么单个子句就可构成合取范式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将 $P$、$Q$、$\neg R$ 认为是短语，那么三个短语析取可构成析取范式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$(P \vee Q \vee \neg R)$ 是子句、合取范式。&lt;/p&gt;
&lt;p&gt;加了括号后该式就被认为是一个整体，不能作为析取范式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\neg P \wedge Q \wedge R$ 是短语、析取范式、合取范式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将该式认为是短语，那么单个短语就可构成析取范式。&lt;/li&gt;
&lt;li&gt;将 $\neg P$、$Q$、$R$ 认为是子句，那么三个子句合取可构成合取范式。&lt;/li&gt;
&lt;li&gt;$(\neg P \wedge Q \wedge R)$ 是短语、析取范式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$P \vee (Q \vee \neg R)$ 即不是析取范式也不是合取范式，但转换为 $P \vee Q \vee \neg R$ 后，即是析取范式又是合取范式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;范式存在定理&#34;&gt;范式存在定理&lt;/h2&gt;
&lt;p&gt;联结词之间可以通过命题公式的基本等价关系进行相互转换，因此可以通过逻辑等价公式求出等价的析取范式和合取范式，具体步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将公式中的 $\rightarrow$、$\leftrightarrow$ 用联结词 $\neg$、$\wedge$、$\vee$ 来取代（使用&lt;a href=&#34;#a11&#34;&gt;蕴涵式&lt;/a&gt;和&lt;a href=&#34;#a12&#34;&gt;等价式&lt;/a&gt;）。&lt;/li&gt;
&lt;li&gt;将否定联结词移到各个命题变元的前端，并消去多余的否定号（使用&lt;a href=&#34;#a9&#34;&gt;双重否定律&lt;/a&gt;和&lt;a href=&#34;#a10&#34;&gt;德摩根律&lt;/a&gt;）。&lt;/li&gt;
&lt;li&gt;利用&lt;a href=&#34;#a6&#34;&gt;分配律&lt;/a&gt;，可将公式化成一些合取式的析取，或化成一些析取式的合取。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对任意一个公式，经过以上步骤（期间可用其他&lt;a href=&#34;#命题公式的基本等价关系&#34;&gt;等价公式&lt;/a&gt;来化简），必能化成与其等价的析取范式和合取范式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264518371675.jpg&#34;
	width=&#34;622&#34;
	height=&#34;382&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264518371675_hu6f5dd9c3f42aa32877532d97b7cffe05_66438_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16264518371675_hu6f5dd9c3f42aa32877532d97b7cffe05_66438_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;162&#34;
		data-flex-basis=&#34;390px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;主范式&#34;&gt;主范式&lt;/h2&gt;
&lt;p&gt;范式是不唯一的，对构成范式的子句或短语进一步进行规范化，形成唯一的主析取范式和主合取范式。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;极大项和极小项&#34;&gt;极大项和极小项&lt;/h3&gt;
&lt;p&gt;在含有 $n$ 个命题变元 $P_1、P_2、P_3、\cdots、P_n$ 的&lt;u&gt;短语或子句&lt;/u&gt;中，若
&lt;u&gt;每个命题变元与其否定不同时存在&lt;/u&gt;，但&lt;u&gt;二者之一恰好出现一次且仅一次&lt;/u&gt;，并且&lt;font color=&#34;green&#34;&gt;出现的次序与 $P_1、P_2、P_3、\cdots、P_n$ 一致&lt;/font&gt;，则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;称此&lt;strong&gt;短语&lt;/strong&gt;为关于 $P_1、P_2、P_3、\cdots、P_n$ 的一个&lt;strong&gt;极小项&lt;/strong&gt;，&lt;/li&gt;
&lt;li&gt;称此&lt;strong&gt;子句&lt;/strong&gt;为关于 $P_1、P_2、P_3、\cdots、P_n$ 的一个&lt;strong&gt;极大项&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若有 $n$ 个命题，则应有 $2^n$ 个不同的极小项和 $2^n$ 个不同的极大项。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;对于极小项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有两个不同的极小项是等价的。&lt;/li&gt;
&lt;li&gt;每个极小项只有一组成假赋值，因此可用于给极大项编码。
编码规则为：命题变元与 0 对应，命题变元的否定与 1 对应。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example：&lt;/p&gt;
&lt;p&gt;设命题变元 $P$、$Q$，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265086173840.jpg&#34;
	width=&#34;1150&#34;
	height=&#34;340&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265086173840_hud68c2c5c545c4c5e1e30db196e64b7f6_69715_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265086173840_hud68c2c5c545c4c5e1e30db196e64b7f6_69715_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;338&#34;
		data-flex-basis=&#34;811px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;对于极大项（与极小项相反的规定）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有两个不同的极大项是等价的。&lt;/li&gt;
&lt;li&gt;每个极大项只有一组成假赋值，因此可用于给极大项编码。
编码规则为：命题变元与 0 对应，命题变元的否定与 1 对应。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example：&lt;/p&gt;
&lt;p&gt;设命题变元 $P$、$Q$，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265087894491.jpg&#34;
	width=&#34;1146&#34;
	height=&#34;339&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265087894491_hu637d0d6350a6f402f1576d70c2cb56cc_68220_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265087894491_hu637d0d6350a6f402f1576d70c2cb56cc_68220_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;338&#34;
		data-flex-basis=&#34;811px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;极小项的编码可对应为真情况时，相应的短语为真的真值序列。极大项的编码可对应为假情况时，相应的子句为假的真值序列。&lt;/p&gt;
&lt;p&gt;极小项和极大项还有以下性质：&lt;/p&gt;
&lt;p&gt;设有 $n$ 个命题变元，设 $i,j \in {0, 1, \cdots, 2^{n-1}}$ 且 $i \neq j$，$m_i、m_j$ 代表这 $n$ 个命题变元对应的极小项，$M_i、M_j$ 代表对应的命题变元的极大项。那么就有&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;$m_i \wedge m_j = 0$，&lt;/p&gt;
&lt;p&gt;$M_i \vee M_j = 1$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$m_i = \neg M_i$，&lt;/p&gt;
&lt;p&gt;$M_i = \neg m_i$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\displaystyle \bigvee_{i=0}^{2^n-1}{m_i} = 1$，&lt;/p&gt;
&lt;p&gt;$\displaystyle \bigwedge_{i=0}^{2^n-1}{M_i} = 0$。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;主析取范式和主合取范式&#34;&gt;主析取范式和主合取范式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在给定的&lt;u&gt;析取范式&lt;/u&gt;中，若&lt;u&gt;每一个短语都是极小项&lt;/u&gt;，且按照编码&lt;u&gt;从小到大&lt;/u&gt;的顺序排列，则称该范式为&lt;strong&gt;主析取范式&lt;/strong&gt;(&lt;strong&gt;principal disjunctive normal form&lt;/strong&gt;)。&lt;/li&gt;
&lt;li&gt;在给定的&lt;u&gt;合取范式&lt;/u&gt;中，若&lt;u&gt;每一个子句都是极大项&lt;/u&gt;，且按照编码&lt;u&gt;从小到大&lt;/u&gt;的顺序排列，则称该范式为&lt;strong&gt;主合取范式&lt;/strong&gt;(&lt;strong&gt;principal conjunctive normal form&lt;/strong&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果一个主析取范式&lt;u&gt;不包含任何极小项&lt;/u&gt;，则称该主析取范式为 “&lt;strong&gt;空&lt;/strong&gt;”；如果一个&lt;u&gt;主合取范式不包含&lt;/u&gt;任何极大项，则称主合取范式为 “&lt;strong&gt;空&lt;/strong&gt;”。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;任何一个公式都有与之等价的主析取范式和主合取范式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果某一公式的主析取范式包含所有的极小项，即主合取范式为空，则该公式为永真公式。&lt;/li&gt;
&lt;li&gt;如果某一公式主合取范式包含所有的极大项，即主析取范式为空，则该公式为永假公式。&lt;/li&gt;
&lt;li&gt;若有两个公式，它们具有相同的主析取范式或主合取范式，则两公式等价。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;主范式求解定理&#34;&gt;主范式求解定理&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;求出该公式所对应的析取范式和合取范式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;消去重复出现的命题变元，矛盾式或重言式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先利用&lt;a href=&#34;#a2&#34;&gt;幂等律&lt;/a&gt;、&lt;a href=&#34;#a7&#34;&gt;矛盾律&lt;/a&gt;和&lt;a href=&#34;#a8&#34;&gt;排中律&lt;/a&gt;消去重复出现的命题元素；&lt;/li&gt;
&lt;li&gt;再使用&lt;a href=&#34;#a4&#34;&gt;同一律&lt;/a&gt;和&lt;a href=&#34;#a5&#34;&gt;零律&lt;/a&gt;消去其中的常数。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若析取（合取）范式的某一个短语（子句）$B_i$ 中缺少命题变元 $P$，则可用如下方式将 $P$ 补进去：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;求主析取范式：$B_i = B_i \wedge 1 = B_i \wedge (\neg P \vee P) = (B_i \wedge \neg P) \vee (B_i \wedge P)$；&lt;/li&gt;
&lt;li&gt;求主合取范式：$B_i = B_i \vee 0 = B_i \vee (\neg P \wedge P) = (B_i \vee \neg P) \wedge (B_i \vee P)$。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用&lt;a href=&#34;#a2&#34;&gt;幂等律&lt;/a&gt;将重复的极小项和极大项合并，并利用&lt;a href=&#34;#a3&#34;&gt;交换律&lt;/a&gt;进行顺序调整，由此可转换成标准的主析取范式和主合取范式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;主析取范式的极小项编码序列与主合取范式的极大项变编码序列是互补的。因此，只需求出主析取范式或主合取范式中其中之一，就可对应求出主合取范式或主析取范式。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;公式转换法&#34;&gt;公式转换法&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265114352643.jpg&#34;
	width=&#34;962&#34;
	height=&#34;466&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265114352643_hu7d1a78cbe8778be31993683f7bfcfdb3_117817_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265114352643_hu7d1a78cbe8778be31993683f7bfcfdb3_117817_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;206&#34;
		data-flex-basis=&#34;495px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265112790430.jpg&#34;
	width=&#34;1014&#34;
	height=&#34;389&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265112790430_hu3722d86fd73ecb2f59e006b65a2af5bf_135678_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265112790430_hu3722d86fd73ecb2f59e006b65a2af5bf_135678_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;260&#34;
		data-flex-basis=&#34;625px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;真值表技术&#34;&gt;真值表技术&lt;/h3&gt;
&lt;p&gt;从真值表按所给的算法求出主范式的方法，称为&lt;strong&gt;真值表技术&lt;/strong&gt; (&lt;strong&gt;technique of truth table&lt;/strong&gt;)。&lt;/p&gt;
&lt;p&gt;方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;列出真值表，选出公式的真值结果为真的所有的行，在这样的每一行中，找到其每一个解释所对应的极小项，将这些极小项进行析取即可得到相应的主析取范式。&lt;/li&gt;
&lt;li&gt;列出真值表，选出公式的真值结果为假的所有的行，在这样的每一行中，找到其每一个解释所对应的极大项，将这些极大项进行合取即可得到相应的主合取范式。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;推理&#34;&gt;推理&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;推理&lt;/strong&gt;是指从一组前提合乎逻辑的推出结论的思维过程。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;基本推理形式&#34;&gt;基本推理形式&lt;/h2&gt;
&lt;p&gt;设 $G_1、G_2、\cdots、G_n、H$ 是命题公式，称 $H$ 是 $G_1、G_2、\cdots、G_n$ 的&lt;strong&gt;逻辑结果&lt;/strong&gt;当且仅当&lt;font color=&#34;green&#34;&gt;对任意解释 $I$，如果 $I$ 使得 $G_1 \wedge G_2 \wedge \cdots \wedge G_n$ 为真，则 $I$ 也会使 $H$ 为真&lt;/font&gt;，记为 $G_1、G_2、\cdots、G_n\ \Rightarrow\ H$，“$\Rightarrow$” 称为&lt;strong&gt;蕴涵关系&lt;/strong&gt;，此时称 $G_1、G_2、\cdots、G_n\ \Rightarrow\ H$ 为有效的，否则称为无效的。&lt;/p&gt;
&lt;p&gt;$G_1、G_2、\cdots、G_n$ 称为一组&lt;strong&gt;前提&lt;/strong&gt;，有时用集合 $\Gamma$ 来表示，记为 $\Gamma = {G_1,G_2,\cdots,G_n}$，$H$ 称为&lt;strong&gt;结论&lt;/strong&gt;。此时也称 $H$ 是前提集合 $\Gamma$ 的逻辑结果，记为 $\Gamma \Rightarrow H$。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;推理的判定定理&#34;&gt;推理的判定定理&lt;/h2&gt;
&lt;p&gt;公式 $H$ 是前提集合 $\Gamma = {G_1,G_2,\cdots,G_n}$ 的逻辑结果当且仅当 $(G_1 \wedge G_2 \wedge \cdots \wedge G_n) \rightarrow H$ 为永真公式。&lt;/p&gt;
&lt;p&gt;判定方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;真值表技术，&lt;/li&gt;
&lt;li&gt;公式转换法，&lt;/li&gt;
&lt;li&gt;主析取范式法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265511416012.jpg&#34;
	width=&#34;620&#34;
	height=&#34;370&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265511416012_hu4f69ecab90c11db92623539de0c26b2a_64831_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265511416012_hu4f69ecab90c11db92623539de0c26b2a_64831_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;16265511416012&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;402px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;基本蕴涵关系&#34;&gt;基本蕴涵关系&lt;/h2&gt;
&lt;p&gt;设 $G$、$H$、$I$ 为任意命题公式。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;规则&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;公式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;简化规则&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \wedge H \Rightarrow G$&lt;br/&gt;$G \wedge H \Rightarrow H$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;添加规则&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \Rightarrow G \vee H$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;合取引入规则&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G,H \Rightarrow G \wedge H$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;选言三段论&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \vee H, \neg G \Rightarrow H$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;假言推理规则&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \rightarrow H, G \Rightarrow H$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否定后件式&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \rightarrow H, \neg H \Rightarrow \neg G$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;假言三段论&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \rightarrow H, H \rightarrow I \Rightarrow G \rightarrow I$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;二难推论&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$G \vee H, G \rightarrow I, H \rightarrow I \Rightarrow I$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;![])(16265520749814.jpg)&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;自然演绎法推理&#34;&gt;自然演绎法推理&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;规则 $\mathbf{P}$（称为&lt;strong&gt;前提引用规则&lt;/strong&gt;）：在推导过程中，可随时引入前提集合中的任意一个前提，引入附加前提时需作声明。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;规则 $\mathbf{T}$（称为&lt;strong&gt;逻辑结果引用规则&lt;/strong&gt;）：在推导过程中，可随时引入公式 $S$，该公式 $S$ 是由其前的一个或多个公式（可以是前提条件或推导出来的公式）推导出来的逻辑结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;规则 $\mathbf{CP}$（称为&lt;strong&gt;附加前提规则&lt;/strong&gt;）：如果能从给定的前提集合 $\Gamma$ 与公式 $P$ 推导出 $S$，则能从此前提集合 $\Gamma$ 推导出 $P \rightarrow S$。&lt;/p&gt;
&lt;p&gt;原理：$P \rightarrow (Q \rightarrow R) = (P \wedge Q) \rightarrow R$。
使用场合：当结论公式是&lt;u&gt;蕴涵式或析取式&lt;/u&gt;时使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命题演算推理系统 = 三个推理规则 + 基本等价公式 + 基本蕴涵公式。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;从前提集合 $\Gamma$ 推出结论 $H$ 的一个&lt;strong&gt;演绎&lt;/strong&gt;是构造命题公式的一个有限序列：&lt;/p&gt;
&lt;p&gt;$$
H_1, H_2, H_3, \cdots, H_{n-1}, H_n
$$&lt;/p&gt;
&lt;p&gt;其中，$H_i$ 或者是 $\Gamma$ 中的某个前提，或者是前面的某些 $H_j(j &amp;lt; i)$ 的有效结论，并且 $H_n$ 就是 $H$，则称公式 $H$ 为该演绎的有效结论，或者称从前提 $\Gamma$ 能够演绎出结论 $H$ 来。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;直接证明法&#34;&gt;直接证明法&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265912526773.jpg&#34;
	width=&#34;620&#34;
	height=&#34;442&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265912526773_hu9fce9ec6710361cdd982c145c066ea5b_63797_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265912526773_hu9fce9ec6710361cdd982c145c066ea5b_63797_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;140&#34;
		data-flex-basis=&#34;336px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;规则-cp-证明法&#34;&gt;规则 CP 证明法&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265902308226.jpg&#34;
	width=&#34;622&#34;
	height=&#34;426&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265902308226_hu53d70442b55469605bf65e94b551e0f8_62466_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265902308226_hu53d70442b55469605bf65e94b551e0f8_62466_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;146&#34;
		data-flex-basis=&#34;350px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;间接证明法&#34;&gt;间接证明法&lt;/h3&gt;
&lt;p&gt;间接证明法又叫反证法、归谬法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265935152814.jpg&#34;
	width=&#34;1206&#34;
	height=&#34;620&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265935152814_hue3f6a886efcba3882ecbd35df5902d02_143594_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265935152814_hue3f6a886efcba3882ecbd35df5902d02_143594_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;194&#34;
		data-flex-basis=&#34;466px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265936708923.jpg&#34;
	width=&#34;622&#34;
	height=&#34;362&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265936708923_hu2f66b093c9f692b40699c6aa027f74e2_55977_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16265936708923_hu2f66b093c9f692b40699c6aa027f74e2_55977_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;412px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;反证法在逻辑推理中有时十分方便。反证法实际上是规则 CP 的一种变形，所以可以使用 CP 证明法来代替它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;谓词逻辑&#34;&gt;谓词逻辑&lt;/h1&gt;
&lt;p&gt;对简单命题进行分解，利用&lt;u&gt;个体词、谓词和量词&lt;/u&gt;来描述简单命题句子，从而研究其中的逻辑关系，并研究个体与总体的内在联系和数量关系。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;个体词&#34;&gt;个体词&lt;/h2&gt;
&lt;p&gt;在原子命题中，可以&lt;u&gt;独立存在的客体&lt;/u&gt;（句子中的主语、宾语等），称为&lt;strong&gt;个体词&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;个体词可分为个体常量和个体变量，均在个体域内取值。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;表示具体或特定的个体词称为&lt;strong&gt;个体常量&lt;/strong&gt;。一般用带或不带下标的小写英文字母 $a, b, c, \cdots, a_1, b_1, c_1, \cdots$ 等表示。&lt;/li&gt;
&lt;li&gt;表示抽象的或泛指的个体词称为&lt;strong&gt;个体变量&lt;/strong&gt;。一般用带或不带下标的小写英文字母 $x, y, z, \cdots, x_1, y_1, z_1, \cdots$ 等表示。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;个体词的取值范围称为&lt;strong&gt;个体域&lt;/strong&gt;（或&lt;strong&gt;论域&lt;/strong&gt;），常用 $D$ 表示。&lt;/li&gt;
&lt;li&gt;宇宙间的所有个体域聚集在一起所构成的个体域称为&lt;strong&gt;全总个体域&lt;/strong&gt;。无特别说明时，默认使用全总个体域。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;谓词&#34;&gt;谓词&lt;/h2&gt;
&lt;p&gt;在原子命题中，用以刻划&lt;u&gt;客体的性质或客体之间的关系&lt;/u&gt;即是&lt;strong&gt;谓词&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;设 $D$ 为非空的个体域，定义在 $D^n$ 上取值为 ${0,1}$ 上的 $n$ 元函数，称为 $n$ 元命题函数或 $n$ 元谓词，记为 $P(x_1, x_2, \cdots, x_n)$。其中，个体变量 $x_1, x_2, \cdots, x_n \in D$。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;表示具体性质或关系的谓词称为&lt;strong&gt;谓词常量&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;表示抽象的或泛指的性质或关系的谓词称为&lt;strong&gt;谓词变量&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;谓词均使用大写英文字母 $P, Q, R, \cdots, F, G, H, \cdots$ 来表示。&lt;/p&gt;
&lt;p&gt;$D^n$ 表示 $n$ 个个体都在个体域 $D$ 上取值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;谓词中个体词的顺序不能随意变更。&lt;/li&gt;
&lt;li&gt;一元谓词用以描述某一个个体的某种&lt;strong&gt;特性&lt;/strong&gt;，而 $n$ 元谓词（$n \ge 2$）则用以描述 $n$ 个个体之间的&lt;strong&gt;关系&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;谓词 $P(x_1, x_2, \cdots, x_n)$ 包含了个体变量，因而本身并不是命题，只有用谓词常量取代 $P$，用个体常量取代 $x_1, x_2, \cdots, x_n$ 后才会称为命题。&lt;/li&gt;
&lt;li&gt;一般将&lt;u&gt;没有任何个体变量&lt;/u&gt;的谓词称为 &lt;strong&gt;0 元谓词&lt;/strong&gt;（如，$F(a_1, a_2, \cdots, a_n$）。当 $F$ 为谓词常量时，0 元谓词就成为命题。命题逻辑中的所有命题都可以表示成 0 元谓词。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267215046524.jpg&#34;
	width=&#34;1204&#34;
	height=&#34;546&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267215046524_huf0f2184347c285609b6bc5ef1e98741b_181883_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267215046524_huf0f2184347c285609b6bc5ef1e98741b_181883_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;220&#34;
		data-flex-basis=&#34;529px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;量词&#34;&gt;量词&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;全称量词&lt;/strong&gt;（$\forall x$）：所有的 $x$；任意的 $x$；一切的 $x$；每一个 $x$；……&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;存在量词&lt;/strong&gt;（$\exists x$）：有些 $x$；至少有一个 $x$；某一些 $x$；存在 $x$；……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中的 $x$ 称为作用变量。一般将其量词加在其谓词之前，记为 $(\forall x)F(x)$、$(\exists x)F(x)$。此时，$F(x)$ 称为全称量词和存在量词的&lt;strong&gt;辖域&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;![16267650196113.jpg]&lt;/p&gt;
&lt;p&gt;引入更准确的表达方式：以上符号化必须要特别注明个体域，在表达比较复杂的命题时会容易混淆。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267651119352.jpg&#34;
	width=&#34;622&#34;
	height=&#34;392&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267651119352_hu484d7f2326b55ac28820d56d516b0c6f_84619_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267651119352_hu484d7f2326b55ac28820d56d516b0c6f_84619_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;158&#34;
		data-flex-basis=&#34;380px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;其中，$T(x)$、$C(x)$、$H(x)$ 和 $N(x)$ 分别是各自个体变量的&lt;strong&gt;个性谓词&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;统一一个&lt;strong&gt;全总个体域&lt;/strong&gt;，而对每一个句子中个体变量的变化范围用一元&lt;strong&gt;特性谓词&lt;/strong&gt;刻划之。这种特性谓词在加入到命题函数中时必定遵循如下原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于&lt;strong&gt;全称量词&lt;/strong&gt;（$\forall x$），刻划其对应个体域的特性谓词作为&lt;strong&gt;蕴涵式的前件&lt;/strong&gt;加入。&lt;/li&gt;
&lt;li&gt;对于&lt;strong&gt;存在量词&lt;/strong&gt;（$\exists x$），刻划其对应个体域的特性谓词作为&lt;strong&gt;合取式的合取项&lt;/strong&gt;加入。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;谓词逻辑的真值&#34;&gt;谓词逻辑的真值&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;$(\forall x)G(x)$：对 $\forall x \in D$，$G(x)$ 都成立。
&lt;ul&gt;
&lt;li&gt;$(\forall x)G(x)$ 取值为 1 当且仅当对任意 $x \in D$，$G(x)$ 都取值为 1；&lt;/li&gt;
&lt;li&gt;$(\forall x)G(x)$ 取值为 0 当且仅当存在 $x_0 \in D$，使得 $G(x_0)$ 取值为 0。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$(\exists x)G(x)$：存在一个 $x_0 \in D$（是有一个的意思，即可以存在一个以上，且包括一个），使得 $G(x_0)$ 成立。
&lt;ul&gt;
&lt;li&gt;$(\exists x)G(x)$ 取值为 1 当且仅当存在 $x_0 \in D$，使得 $G(x_0)$ 取值为 1；&lt;/li&gt;
&lt;li&gt;$(\exists x)G(x)$ 取值为 0 当且仅当对任意 $x \in D$，$G(x)$ 都取值为 0。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267661575626.jpg&#34;
	width=&#34;1261&#34;
	height=&#34;559&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267661575626_hu792ddbcba722a6c70167a92fb8d2aae5_180348_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267661575626_hu792ddbcba722a6c70167a92fb8d2aae5_180348_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;225&#34;
		data-flex-basis=&#34;541px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;当个体域 $D = {x_0, x_1, \cdots, x_n}$ 是&lt;strong&gt;有限集合&lt;/strong&gt;时，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$(\forall x)G(x) = G(x_0) \wedge G(x_1) \wedge \cdots \wedge G(x_n)$；&lt;/li&gt;
&lt;li&gt;$(\exists x)G(x) = G(x_0) \vee G(x_1) \vee \cdots \vee G(x_n)$。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：量词对变元的约束往往与量词的次序有关。不同的量词次序，可以产生不同的真值。因此当多个量词同时出现时，不能随意颠倒它们的顺序，否则会改变原有的含义。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;谓词合式公式&#34;&gt;谓词合式公式&lt;/h1&gt;
&lt;p&gt;在基于谓词的形式化中，将使用如下四种符号：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;常量符号&lt;/strong&gt;：指所属个体域 $D$ 中的某个元素，用带或不带下标的小写英文字母 $a, b, c, \cdots, a_1, b_1, c_1, \cdots$ 来表示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;变量符号&lt;/strong&gt;：指所属个体域 $D$ 中的任意元素，用带或不带下标的小写英文字母 $x, y, z, \cdots, x_1, y_1, z_1, \cdots$ 来表示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;函数符号&lt;/strong&gt;：$n$ 元函数符号 $f(x_1, x_2, \cdots, x_n)$ 可以是所属个体域集合 $D^n \rightarrow D$ 的任意一个函数，用带或不带下标的小写英文字母 $f, g, h, \cdots, f_1, g_1, h_1, \cdots$ 来表示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;谓词符号&lt;/strong&gt;：$n$ 元谓词符号 $P(x_1, x_2, \cdots, x_n)$ 可以是所属个体域集合 $D_n \rightarrow {0, 1}$ 的任意一个谓词，用带或不带下标的大写英文字母 $P, Q, R, \cdots, P_1, Q_1, R_1, \cdots$ 来表示。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;函数可用于表达个体词之间的转换关系，可以更方便地表示谓词逻辑中的个体词。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267707683350.jpg&#34;
	width=&#34;1188&#34;
	height=&#34;301&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267707683350_hu36152155255286a6e65a3e64efb07a3f_94583_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267707683350_hu36152155255286a6e65a3e64efb07a3f_94583_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;394&#34;
		data-flex-basis=&#34;947px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;$n$ 元函数是个体域集合 $D^n$ 到 $D$ 的映射。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;项的定义&#34;&gt;项的定义&lt;/h2&gt;
&lt;p&gt;谓词逻辑中的&lt;strong&gt;项&lt;/strong&gt;（&lt;strong&gt;Term&lt;/strong&gt;），被递归地定义为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;任意的常量符号或任意的变量符号&lt;/u&gt;是项。&lt;/li&gt;
&lt;li&gt;若 $f(x_1, x_2, \cdots, x_n)$ 是 $n$ 元函数符号，$t_1, t_2, \cdots, t_n$ 是项，则 $f(t_1, t_2, \cdots, t_n)$ 是项。&lt;/li&gt;
&lt;li&gt;仅由&lt;u&gt;有限次&lt;/u&gt;使用以上两个规则产生的符号串才是项。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;合式公式的定义&#34;&gt;合式公式的定义&lt;/h2&gt;
&lt;p&gt;若 $P(x_1, x_2, \cdots, x_n)$ 是 $n$ 元谓词， $t_1, t_2, \cdots, t_n$ 是项，则称 $P(t_1, t_2, \cdots, t_n)$ 为&lt;strong&gt;原子谓词公式&lt;/strong&gt;，简称&lt;strong&gt;原子公式&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;满足下列条件的表达式，称为&lt;strong&gt;合式公式&lt;/strong&gt;（&lt;strong&gt;well-formed formulae/wff&lt;/strong&gt;），简称公式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;u&gt;原子公式&lt;/u&gt;是合式公式。&lt;/li&gt;
&lt;li&gt;若 $G$、$H$ 是合式公式，则 $(\neg G), (\neg H), (G \vee H), (G \wedge H), (G \rightarrow H), (G \leftrightarrow H)$ 也是合式公式。&lt;/li&gt;
&lt;li&gt;若 $G$ 是合式公式，$x$ 是个体变量，则 $(\forall x)G$、$(\exists x)G$ 也是合式公式。&lt;/li&gt;
&lt;li&gt;由&lt;u&gt;有限次&lt;/u&gt;使用以上三个规则产生的表达式是合式公式。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;公式的最外层括号可省略。&lt;/li&gt;
&lt;li&gt;量词后面的括号省略方式为：一个量词的辖域中仅出现一个原子公式，则此辖域的外层括号可省略，否则不能省略。&lt;/li&gt;
&lt;li&gt;一个个体词只能接受一个量词的约束，否则就是没有意义的。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;自由变元与约束变元&#34;&gt;自由变元与约束变元&lt;/h2&gt;
&lt;p&gt;给定一个合式公式 $G$，若变元 $x$ 出现&lt;u&gt;在使用变元的量词的辖域之内&lt;/u&gt;，则称变元 $x$ 的出现为&lt;strong&gt;约束出现&lt;/strong&gt;，此时的变元 $x$ 称为&lt;strong&gt;约束变元&lt;/strong&gt;。若 $x$ 的出现&lt;u&gt;不是约束出现&lt;/u&gt;，则称它为&lt;strong&gt;自由出现&lt;/strong&gt;，此时的变元 $x$ 称为&lt;strong&gt;自由变元&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若量词后有括号，则括号内的子公式就是该量词的辖域；&lt;/li&gt;
&lt;li&gt;若量词后无括号，则与量词邻接的子公式为该量词的辖域。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267722145151.jpg&#34;
	width=&#34;1273&#34;
	height=&#34;591&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267722145151_hu9bdf1f357c56b7b889283c72820ea1f1_197212_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16267722145151_hu9bdf1f357c56b7b889283c72820ea1f1_197212_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;215&#34;
		data-flex-basis=&#34;516px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;为了区分同一公式中，变量符号相同但不是同为自由变元或约束变元的符号（这样的变量是不同的变量，仅是符号相同），可以分别使用不同的变量符号来表示。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;约束变元的命名规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将量词中的变元以及该量词辖域中此变量的所有约束出现都用新的个体变元替换；&lt;/li&gt;
&lt;li&gt;新的变元一定要有别于改名辖域中的其他变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自由变元的命名规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将公式中出现该自由变元的每一处都用新的个体变元替换；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新的变元不允许在源公式中以任何约束形式出现。&lt;/p&gt;
&lt;p&gt;也可用个体常量代入。但是代入个体常量后，公式的含义就发生了变化，即公式从具有普遍意义变为仅针对该个体变量有意义。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;闭式&#34;&gt;闭式&lt;/h2&gt;
&lt;p&gt;设 $G$ 是任意一个公式，若 $G$ 中无自由出现的个体变元，则称 $G$ 为封闭的合式公式，简称&lt;strong&gt;闭式&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;闭式是一个命题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;谓词逻辑公式的解释&#34;&gt;谓词逻辑公式的解释&lt;/h2&gt;
&lt;p&gt;谓词逻辑中，公式 $G$ 的每一个解释 $I$ 由如下四部分组成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;非空的个体域&lt;/strong&gt;集合 $D$。&lt;/li&gt;
&lt;li&gt;$G$ 中的每个&lt;strong&gt;常量符号&lt;/strong&gt;，指定 $D$ 中的某个特定元素。&lt;/li&gt;
&lt;li&gt;$G$ 中的每个 $n$ 元&lt;strong&gt;函数符号&lt;/strong&gt;，指定 $D^n$ 到 $D$ 中的某个特定的函数。&lt;/li&gt;
&lt;li&gt;$G$ 中的每个 $n$ 元&lt;strong&gt;谓词符号&lt;/strong&gt;，指定 $D^n$ 到 ${0,1}$ 中的某个特定的谓词。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;规定：公式中无自由变元，或将自由变元看成是常量符号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16268605039802.jpg&#34;
	width=&#34;1141&#34;
	height=&#34;592&#34;
	srcset=&#34;https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16268605039802_huf32cd1e4677245d811c97bbafba145d1_141399_480x0_resize_q75_box.jpg 480w, https://blog.linner.asia/p/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91/16268605039802_huf32cd1e4677245d811c97bbafba145d1_141399_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;192&#34;
		data-flex-basis=&#34;462px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;谓词公式的分类&#34;&gt;谓词公式的分类&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;如果公式 $G$ 在它&lt;u&gt;所有的解释下都取值为真&lt;/u&gt;，则称 $G$ 为&lt;strong&gt;有效公式&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如 $(\forall x)(\forall y)(P(x, y) \wedge Q(x, y) \rightarrow P(x, y))$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果公式 $G$ 在它&lt;u&gt;所有的解释下都取值为假&lt;/u&gt;，则称 $G$ 为&lt;strong&gt;矛盾公式&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如，$(\forall x)(\forall y)(\neg P(x, y) \wedge P(x, y))$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果&lt;font color=&#34;green&#34;&gt;至少有一种解释使得公式 $G$ 取值为真&lt;/font&gt;，则称 $G$ 为&lt;strong&gt;可满足公式&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;谓词公式的可判定性&#34;&gt;谓词公式的可判定性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一般情况下，谓词逻辑是不可判定的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只含有一元谓词变项的公式是可判定的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如下形式的公式：&lt;/p&gt;
&lt;p&gt;$(\forall x_1) (\forall x_2) \cdots (\forall x_n) P(x_1, x_2, \cdots, x_n)$，&lt;/p&gt;
&lt;p&gt;$(\exists x_1) (\exists x_2) \cdots (\exists x_n) P(x_1, x_2, \cdots, x_n)$。&lt;/p&gt;
&lt;p&gt;若 $P$ 中无量词和其他自由变元时，是可判定的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;个体域有穷时的谓词公式是可判定的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;谓词公式的等价关系&#34;&gt;谓词公式的等价关系&lt;/h2&gt;
&lt;p&gt;如果公式 $G \leftrightarrow H$ 是&lt;strong&gt;有效公式&lt;/strong&gt;，则公式 $G$、$H$ 称为&lt;strong&gt;等价&lt;/strong&gt;的，记为 $G=H$。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;设 $G(P_1, P_2, \cdots, P_n)$ 是命题演算&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;中的&lt;a href=&#34;#命题公式&#34;&gt;命题公式&lt;/a&gt;，$P_1, P_2, \cdots, P_n$ 是出现在 $G$ 中的命题变元，当用任意的谓词公式 $G_i(1\le i \le n)$ 分别代入 $P_i$ 后，得到的新谓词公式 $G(G_1, G_2, \cdots, G_n)$​ 称为原公式的&lt;strong&gt;代入实例&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;定理：永真公式的任意一个代入实例必为有效公式。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;##谓词演算中的基本等价公式&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;#命题公式的基本等价关系&#34;&gt;命题演算中的基本等价公式&lt;/a&gt;在谓词演算中依然成立。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;性质&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;等式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;改名规则&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;(\exists x)G(x) = (\exists y)G(y)&lt;/code&gt;&lt;br/&gt;&lt;code&gt;(\forall x)G(x) = (\forall y)G(y)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;量词转换律&lt;br/&gt;or&lt;br/&gt;量词否定等价式&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;\neg (\exists x)G(x) = (\forall x)G(x)&lt;/code&gt;&lt;br/&gt;&lt;code&gt;\neg (\forall x) \neg G(x) = (\exists x) \neg G(x)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;命题公式、范式和推理都是针对命题演算，它们的对象都是命题。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        
    </channel>
</rss>
