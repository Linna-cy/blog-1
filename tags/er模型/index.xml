<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>ER模型 on Linner&#39;s Blog</title>
        <link>https://blog.linner.asia/tags/er%E6%A8%A1%E5%9E%8B/</link>
        <description>Recent content in ER模型 on Linner&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh</language>
        <lastBuildDate>Sat, 22 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.linner.asia/tags/er%E6%A8%A1%E5%9E%8B/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>数据库篇</title>
        <link>https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/</link>
        <pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate>
        
        <guid>https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/</guid>
        <description>&lt;h1 id=&#34;数据库体系结构&#34;&gt;数据库体系结构&lt;/h1&gt;
&lt;p&gt;数据描述有两种形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;逻辑描述：指程序员或用户用以操作的数据形式，是抽象的概念化数据。&lt;/li&gt;
&lt;li&gt;物理描述：指数据在存储设备上的存储方式，物理数据是实际存放在存储设备上的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三级模式结构&#34;&gt;三级模式结构&lt;/h2&gt;
&lt;p&gt;实际上有许多不同的数据库产品，但它们的体系结构基本上都具有相同的特征，采用“三级模式和两级映像”：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681373319410.png&#34;
	width=&#34;486&#34;
	height=&#34;377&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681373319410_hu9b9f67605df5247fa6ccd5bd0d000f11_51804_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681373319410_hu9b9f67605df5247fa6ccd5bd0d000f11_51804_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;三级模式两级映像&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;128&#34;
		data-flex-basis=&#34;309px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;三级结构有3类数据模型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;外模型&lt;/strong&gt;：用户使用的&lt;strong&gt;数据视图&lt;/strong&gt;，是一种局部的逻辑数据视图，表示用户所理解的实体、实体属性和实体关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;概念模型&lt;/strong&gt;：全局的&lt;strong&gt;逻辑数据视图&lt;/strong&gt;，是数据库管理员所看到的实体、实体属性和实体之间的联系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内模型&lt;/strong&gt;：数据的物理&lt;strong&gt;存储模型&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;三个物理模型分别对应数据库系统的3层结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;外模式（子模式、用户模式）&lt;/strong&gt;：数据库用户的数据视图，是与某一应用程序有关的数据的逻辑表示。&lt;/p&gt;
&lt;p&gt;外模式用DBMS的外模式描述语言（外模式DDL)来定义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;概念模式（模式）&lt;/strong&gt;：所有用户的公共数据视图，与具体的应用程序和应用程序开发工具无关。&lt;/p&gt;
&lt;p&gt;概念模式用DBMS的模式描述语言（模式DDL)来定义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;内模式（物理模式、存储模式）&lt;/strong&gt;：是数据在数据库内部的表示方式。&lt;/p&gt;
&lt;p&gt;内模式由DBMS的内模式描述语言（内模式DDL)来描述，由设备介质语言来定义。&lt;/p&gt;
&lt;p&gt;定义&lt;u&gt;所有的&lt;strong&gt;内部记录类型&lt;/strong&gt;、&lt;strong&gt;索引&lt;/strong&gt;和&lt;strong&gt;文件&lt;/strong&gt;的组织方式&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;两级模式映象&#34;&gt;两级模式映象&lt;/h2&gt;
&lt;p&gt;数据库系统在三级模式之间提供了两级映像：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模式——内模式映像存在于&lt;u&gt;概念级和内部级&lt;/u&gt;之间，实现&lt;u&gt;概念模式和内模式&lt;/u&gt;间的相互转换。&lt;/li&gt;
&lt;li&gt;外模式——模式映像：存在于&lt;u&gt;外部级和概念级&lt;/u&gt;之间，实现了&lt;u&gt;外模式和概念模式&lt;/u&gt;之间的相互转换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据的独立性（指数据与程序独立）是由DBMS的二级映像功能来保证的。数据的独立性包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;物理独立性&lt;/strong&gt;：指当数据库的&lt;u&gt;内模式发生改变时，数据的逻辑结构不变&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;物理独立性可以保证，当数据的物理结构改变时，应用程序不用改变。&lt;/p&gt;
&lt;p&gt;但是，为了保证应用程序能够正确执行，&lt;u&gt;需要修改概念模式和内模式之间的映像&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;逻辑独立性&lt;/strong&gt;：指用户的&lt;u&gt;应用程序与数据库的逻辑结构是相互独立的&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;数据的逻辑结构发生变化后，用户程序也可以不修改。&lt;/p&gt;
&lt;p&gt;但是，为了保证应用程序能够正确执行，&lt;u&gt;需要修改外模式和概念模式之间的映像&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;数据模型&#34;&gt;数据模型&lt;/h1&gt;
&lt;p&gt;在数据库技术中，表示实体类型及实体类型间联系的模型称为数据模型。&lt;/p&gt;
&lt;p&gt;数据模型有以下类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念数据模型：从信息世界中抽象的数据模型；&lt;/li&gt;
&lt;li&gt;结构数据模型：从计算机世界中抽象出的DBMS支持的数据模型。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;概念数据模型&#34;&gt;概念数据模型&lt;/h2&gt;
&lt;p&gt;概念数据模型用于信息世界建模，一般采用实体-联系方法（E-R方法）。概念数据模型的常用术语有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实体&lt;/strong&gt;：客观存在并可以相互区别的事物称为实体。&lt;/p&gt;
&lt;p&gt;如一个单位、一个职工、一个部门或一个项目等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;属性&lt;/strong&gt;：描述实体的特性称为属性，一个实体可以由若干个属性来刻画。&lt;/p&gt;
&lt;p&gt;属性的具体取值称为属性值，用以表示一个具体实体。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;码&lt;/strong&gt;：&lt;u&gt;唯一标识&lt;/u&gt;实体的属性集称为码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;域&lt;/strong&gt;：属性的&lt;u&gt;取值范围&lt;/u&gt;称为该属性的域。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实体型&lt;/strong&gt;：具有相同属性的实体必然具有共同的特征和性质，用实体名及其属性名集合来抽象和刻画同类实体，称为实体型。&lt;/p&gt;
&lt;p&gt;例如，学生（学号，姓名，性别，班号）就是一个实体型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实体集&lt;/strong&gt;：同型实体的集合称为实体集。&lt;/p&gt;
&lt;p&gt;例如，全体学生就是一个实体集。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;联系&lt;/strong&gt;：实体（型）之间的对应关系称为联系。联系分为两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实体内部各属性之间的联系；&lt;/li&gt;
&lt;li&gt;实体之间的联系。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个实体型之间的联系有3种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一对一联系(1:1)；&lt;/li&gt;
&lt;li&gt;一对多联系(1:n)；&lt;/li&gt;
&lt;li&gt;多对多联系(m:n)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实体-联系方法表示的概念数据模型称为E-R图。E-R图是抽象和描述现实世界的有力工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;实体型&lt;/strong&gt;：用&lt;strong&gt;矩形&lt;/strong&gt;表示，矩形框内写明实体名；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;属性&lt;/strong&gt;：用&lt;strong&gt;椭圆形&lt;/strong&gt;表示，并用无向边将其与相应的实体连接起来；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;联系&lt;/strong&gt;：用&lt;strong&gt;菱形&lt;/strong&gt;表示，菱形框内写明联系名，并用无向边将其分别与有关实体连接起来，同时在无向边旁标上联系的类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681289395117.png&#34;
	width=&#34;240&#34;
	height=&#34;242&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681289395117_hube981d9754c37a567c83a04aad71de33_18088_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681289395117_hube981d9754c37a567c83a04aad71de33_18088_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;E-R图示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;99&#34;
		data-flex-basis=&#34;238px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;结构数据模型&#34;&gt;结构数据模型&lt;/h2&gt;
&lt;p&gt;结构数据模型是直接面向数据库的逻辑结构。这类模型涉及到计算机系统和数据库管理系统，所以称为结构数据模型。任何一个DBMS都以某个结构数据模型为基础，或者说支持某个结构数据模型。&lt;/p&gt;
&lt;p&gt;常用术语：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数据项&lt;/strong&gt;：又称&lt;strong&gt;字段&lt;/strong&gt;，是数据库中可以命名的最小逻辑数据单位。可以是一个数或个字符串，用它描述属性的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;记录&lt;/strong&gt;：是数据项的有序集，即一个记录是由若干个数据项或字段组成，用它描述实体。&lt;/p&gt;
&lt;p&gt;一般来说，数据只有被组成记录的形式才有实际意义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;：文件是一个具有符号名的一组同类记录的集合。文件包含记录的结构和记录的值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结构数据模型主要包括：层次、网状、关系和面向对象模型。&lt;/p&gt;
&lt;p&gt;关系模型是一种用二维表格结构快表示实体以及实体之间联系的数据模型。每个二维表由行、列组成，又可称为关系，关系模式是对关系的描述。因此可以说，关系模型是由关系模式组成的集合。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目前大多数数据库管理系统都是关系型的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;关系模型&#34;&gt;关系模型&lt;/h1&gt;
&lt;h2 id=&#34;术语&#34;&gt;术语&lt;/h2&gt;
&lt;p&gt;有关关系模型的术语：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关系&lt;/strong&gt;：一个关系就是一张&lt;strong&gt;二维表&lt;/strong&gt;，每个关系有一个关系名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;元组&lt;/strong&gt;：表中的一行即为一个&lt;strong&gt;元组&lt;/strong&gt;，对应存储文件中的一个&lt;strong&gt;记录值&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;属性&lt;/strong&gt;：表中的&lt;strong&gt;列&lt;/strong&gt;称为属性，每一列有一个属性名。&lt;/p&gt;
&lt;p&gt;属性值相当于记录中的数据项或者字段值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;域&lt;/strong&gt;：属性的&lt;strong&gt;取值范围&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关系模式&lt;/strong&gt;：对关系的&lt;strong&gt;描述&lt;/strong&gt;称为关系模式，由关系名和其属性集合构成，关系模式的格式为：关系名（属性名1，属性名2，…，属性名n）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;候选码&lt;/strong&gt;（候选健）：属性或属性组合其值能够&lt;strong&gt;唯一地标识&lt;/strong&gt;一个元组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;主码&lt;/strong&gt;（主键）：在一个关系中可能有&lt;u&gt;多个候选码，从中选择一个&lt;/u&gt;作为主码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;主属性&lt;/strong&gt;：所有候选键都称为主属性，其他的属性都称为&lt;strong&gt;非码属性&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;外码&lt;/strong&gt;（或外键）：如果一个关系中的属性或属性组并非该关系（二维表）的码，但它们是&lt;u&gt;另外一个关系（二维表）的码&lt;/u&gt;，则称其为该关系的外码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;全码&lt;/strong&gt;：关系模式的&lt;u&gt;所有属性组是这个关系模式的候选码&lt;/u&gt;，称为全码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;超码&lt;/strong&gt;（超键）：一个&lt;u&gt;包含码的属性集称为超码&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;例如学号是码，则（学号，姓名）就是一个超码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;完整性约束&#34;&gt;完整性约束&lt;/h2&gt;
&lt;p&gt;完整性规则保证用户对数据库做修改时不会破坏数据的一致性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实体完整性&lt;/strong&gt;（Entity Integrity，引用完整性）：规定基本关系R的主属性A不能取空值。&lt;/p&gt;
&lt;p&gt;即&lt;u&gt;主属性不能为空&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;参照完整性&lt;/strong&gt;（Referential Integrity）：若F是基本关系R的外码，它与基本关系S的主码K&lt;sub&gt;s&lt;/sub&gt;相对应（基本关系R和S不一定是不同的关系），则对于R中每个元组在F上的值可以取：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空值（F的每个属性值均为空值）；&lt;/li&gt;
&lt;li&gt;S中某个元组的主码值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即实体之间的关联可以变现为：关系R用外码F与关系S关联，外码F的值可以为空也可以为关系S中某个元组（记录）的主码值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;用户定义完整性&lt;/strong&gt;（User Defined Integrity）：针对某一具体的关系数据库的约束条件，反映某一具体应用所涉及的数据必须满足的语义要求，由应用的环境决定。&lt;/p&gt;
&lt;p&gt;例如，银行的用户账户规定必须大于等于100000、小于999999。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;关系代数运算符&#34;&gt;关系代数运算符&lt;/h2&gt;
&lt;p&gt;关系操作的特点是操作对象和操作结果都是集合，而非关系数据模型的数据操作方式则为一次一个记录的方式。&lt;/p&gt;
&lt;p&gt;关系数据语言分为三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关系代数语言；&lt;/li&gt;
&lt;li&gt;关系演算语言；&lt;/li&gt;
&lt;li&gt;具有关系代数和关系演算双重特点的语言。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系演算语言包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元组关系演算语言；&lt;/li&gt;
&lt;li&gt;域关系演算语言。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系代数运算符有4类：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681431891302.png&#34;
	width=&#34;735&#34;
	height=&#34;301&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681431891302_hu474e5e1683bfce1832772e13dcf3cc90_42174_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681431891302_hu474e5e1683bfce1832772e13dcf3cc90_42174_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;关系代数运算符&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;244&#34;
		data-flex-basis=&#34;586px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;基本关系代数运算是对两个具有&lt;u&gt;相同的关系模式&lt;/u&gt;的关系进行运算。关系$R$与$S$具有&lt;u&gt;相同的关系模式&lt;/u&gt;，即$R$与$S$的元数相同（结构相同）。&lt;/p&gt;
&lt;p&gt;基本关系代数运算包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;并&lt;/strong&gt;（Union）：关系$R$与$S$的并是由属于$R$或属于$S$的元组构成的集合，记作$R \cup S$，其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R \cup S = \{ t | (t \in R) \vee (t \in S) \}
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;式中$t$为元组变量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;差&lt;/strong&gt;（Difference）：关系$R$与$S$的差是由&lt;u&gt;属于$R$但不属于$S$&lt;/u&gt;的元组构成的集合，记作$R-S$，其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R-S = \{ t| (t \in R) \wedge (t \not\in S) \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;交&lt;/strong&gt;（Intersection）：关系$R$与$S$的交是由属于$R$同时又属于$S$的元组构成的集合，记作$R \cap S$,其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R \cap S = \{ t| (t \in R) \wedge (t \in S) \}
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$R \cap S = R-(R-S)$，或者$R \cap S = S-(S-R)$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扩展的关系代数运算可以从基本的关系运算中导出，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;广义笛卡儿积&lt;/strong&gt;（Extended Cartesian Product）：两个元组分别为$n$目和$m$目的关系$R$和$S$的广义笛卡儿积是一个$(n+m)$列的元组的集合。&lt;/p&gt;
&lt;p&gt;元组的前$n$列是关系$R$的一个元组，后$m$列是关系$S$的一个元组，记作$R \times S$，其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R \times S = \{ t| (t \ = \ &amp;lt;t^n, t^m&amp;gt;) \wedge (t^n \in R) \wedge (t^m \in S) \}
$$&lt;/p&gt;
&lt;p&gt;如果$R$和$S$中有相同的属性名，可在属性名前加关系名作为限定，以示区别。若$R$有$K_1$,个元组，$S$有$K_2$个元组，则$R$和$S$的广义笛卡儿积有$K_1 \times K2$个元组。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$&amp;lt;t^n, t^m&amp;gt;$是一个元组$t^n$和$t^m$拼接成的一个元组。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;投影&lt;/strong&gt;（Projection）：投影运算是从关系的&lt;u&gt;垂直方向&lt;/u&gt;进行运算，在关系$R$中选出若干属性列$A$组成新的关系，记作$\pi_A (R)$，其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
\pi_A (R) = \{ t[A]|t \in R \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;选择&lt;/strong&gt;（Selection）：选择运算是从关系的&lt;u&gt;水平方向&lt;/u&gt;进行运算，是从关系$R$中选择满足给定条件的诸元组，记作$\sigma_F (R)$其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
\sigma_A (R) = \{ t| (t \in R) \wedge F(t) = True \}
$$&lt;/p&gt;
&lt;p&gt;其中，$F(t)$中的运算对象可以是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;属性名（或列的序号）；&lt;/li&gt;
&lt;li&gt;常数；&lt;/li&gt;
&lt;li&gt;运算符；&lt;/li&gt;
&lt;li&gt;算术比较符（$&amp;lt;, \le, &amp;gt;, \ge, \neq$）；&lt;/li&gt;
&lt;li&gt;逻辑运算符（$\wedge, \vee, \neg$）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;连接&lt;/strong&gt;（Join）：连接运算是从两个关系$R$和$S$的笛卡儿积中选取满足条件的元组。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以认为笛卡儿积是无条件连接，其他的连接操作认为是有条件连接。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;$\theta$连接&lt;/strong&gt;：从$R$与$S$的笛卡儿积中选取属性间满足一定条件的元组。记作：&lt;/p&gt;
&lt;p&gt;$$
R \mathop{\Join}\limits_{X \theta Y} S = \{ t| (t=&amp;lt;t^n,t^m&amp;gt;) \wedge (t^n \in R) \wedge (t^m \in S) \wedge (t^n[X] \ \theta \ t^m[Y]) \}
$$&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$X \theta Y$：连接的条件；&lt;/li&gt;
&lt;li&gt;$\theta$：比较运算符；&lt;/li&gt;
&lt;li&gt;$X$和$Y$分别为$R$和$S$上度数相等且可比的属性组；&lt;/li&gt;
&lt;li&gt;$t^n\left[ X \right]$表示$R$中$t^n$元组的对应于属性$X$的一个分量；&lt;/li&gt;
&lt;li&gt;$t^m[Y]$表示$S$中$t^m$元组的对应于属性$Y$的一个分量。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$\theta$连接也可以表示为：&lt;/p&gt;
&lt;p&gt;$$
R \mathop{\Join}\limits_{i \theta j} S = \{ t| (t=&amp;lt;t^n,t^m&amp;gt;) \wedge (t^n \in R) \wedge (t^m \in S) \wedge (t^n[i] \ \theta \ t^m[j]) \}
$$&lt;/p&gt;
&lt;p&gt;其中，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$i=1,2,3,\cdots,n$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$j=1,2,3,\cdots,m$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$i \theta j$：&lt;/p&gt;
&lt;p&gt;从两个关系$R$和$S$中选取$R$的第$i$列和$S$的第$j$列之间满足$\theta$运算的元组进行连接。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$\theta$连接可以由基本的关系运算笛卡儿积和选取运算导出。因此，$\theta$连接可表示为：&lt;/p&gt;
&lt;p&gt;$$
R \mathop{\Join}\limits_{X \theta Y} S = \sigma_{X \theta Y}(R \times S)
$$&lt;/p&gt;
&lt;p&gt;或：&lt;/p&gt;
&lt;p&gt;$$
R \mathop{\Join}\limits_{i \theta j} S = \sigma_{i \theta j}(R \times S)
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;等值连接&lt;/strong&gt;：当$\theta$为“=”时，称之为等值连接，记为$R \mathop{\Join}\limits_{i = j} S$，其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R \mathop{\Join}\limits_{i = j} S = \{ t| (t=&amp;lt;t^n,t^m&amp;gt;) \wedge (t^n \in R) \wedge (t^m \in S) \wedge (t^n[i] = t^m[j]) \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$F$连接：从关系$R$和$S$的笛卡尔积中选取属性值满足某一公式$F$的元组，记为$\mathop{\Join}\limits_{F}$。&lt;/p&gt;
&lt;p&gt;$F$是形为$F_1 \wedge F_2 \wedge \cdots \wedge F_n$的公式，每个$F_p$是形为$i \theta j$的式子。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自然连接&lt;/strong&gt;：自然连接是一种特殊的等值连接，它要求两个关系中&lt;u&gt;进行比较的分量必须是相同的属性组&lt;/u&gt;，并且在结果集中&lt;u&gt;将重复属性列去掉&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;若：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$t^n \in R$，$t^m \in S$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$R$和$S$具有相同的属性组$B$，且$B=(B_1,B_2,,B_k)$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假定$R$关系的属性：&lt;/p&gt;
&lt;p&gt;$$
A_1,A_2,\cdots,A_{n-k},B_1,B_2,\cdots,B_k
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$S$关系的属性：&lt;/p&gt;
&lt;p&gt;$$
B_1,B2,\cdots,B_k,B_{k+1},B_{k+2},\cdots,B_m
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自然连接可以记为$R \Join S$,其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R \Join S = \{ t| (t = &amp;lt;t^n, t^m&amp;gt;) \wedge (t^n \in R) \wedge (t^m \in S) \wedge (R.B_1 = S.B_1) \wedge (R.B_2 = S.B_2) \wedge \cdots \wedge (R.B_k = S.B_k) \}
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一般连接是从关系的水平方向运算，而自然连接&lt;u&gt;不仅要从关系的水平方向运算，而且要从关系的垂直方向运算&lt;/u&gt;（去掉重复属性）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;外连接&lt;/strong&gt;（Outer Jion）：外连接运算是连接运算的扩展，可以处理由于连接运算而缺失的信息。&lt;/p&gt;
&lt;p&gt;外连接运算有3种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;左外连接&lt;/strong&gt;（Left Outer Jion，⟕）：取出左侧关系中所有与右侧关系中任一元组都不匹配的元组，用空值$null$充填所有来自右侧关系的属性，构成新的元组，将其加入自然连接的结果中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;右外连接&lt;/strong&gt;（Right Outer Jion，⟖）：取出右侧关系中所有与左侧关系中任一元组都不匹配的元组，用空值$null$填充所有来自左侧关系的属性，构成新的元组，将其加入自然连接的结果中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;全外连接&lt;/strong&gt;（Full Outer Jion，⟗）。完成左外连接和右外连接的操作。即填充左侧关系中所有与右侧关系中任一元组都不匹配的元组，并填充右侧关系中所有与左侧关系中任一元组都不匹配的元组，将产生的新元组加入自然连接的结果中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681454087063.png&#34;
	width=&#34;762&#34;
	height=&#34;575&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681454087063_hud13edc09469e2a4b2eff4fd4a8bf7c0a_99173_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681454087063_hud13edc09469e2a4b2eff4fd4a8bf7c0a_99173_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;318px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;除&lt;/strong&gt;（Division）：给定关系$R(X,Y)$和$S(Y,Z)$，$X、Y、Z$为属性组。$R \div S$应当满足元组在$X$上的分量值$x$的象集$Y_x$包含关系$S$在属性组$Y$上投影的集合。其形式定义如下：&lt;/p&gt;
&lt;p&gt;$$
R \div S = \{ t^n[X] | (t^n \in R) \wedge (\pi_y (S) \subseteq Y_x) \}
$$&lt;/p&gt;
&lt;p&gt;其中，$Y_x$为$x$在$R$中的象集，$x=t^n[X]$，且$R \div S$的结果集的属性组为$X$。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;除运算是同时从关系的水平方向和垂直方向进行运算。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;sql-语句&#34;&gt;SQL 语句&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;SQL&lt;/strong&gt;（&lt;strong&gt;Structured Query Language&lt;/strong&gt;，发音为 sequal）是一种专门用来与数据库沟通的语言。通过 SQL，用户可以对数据库进行各种操作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;标准 SQL 由 ANSI 标准委员会管理，从而称为 ANSISQL。&lt;/p&gt;
&lt;p&gt;查看更多 &lt;a class=&#34;link&#34; href=&#34;../sql-%e8%af%ad%e5%8f%a5&#34; &gt;SQL语句&lt;/a&gt; 相关内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;分类&#34;&gt;分类&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DDL&lt;/strong&gt;（&lt;strong&gt;Data Definition Language&lt;/strong&gt;，&lt;strong&gt;数据定义语言&lt;/strong&gt;）：用来定义数据库对象：数据库，表，列等。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;CREATE&lt;/code&gt;、&lt;code&gt;DROP&lt;/code&gt;、&lt;code&gt;ALTER&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DML&lt;/strong&gt;（&lt;strong&gt;Data Manipulation Language&lt;/strong&gt;，&lt;strong&gt;数据操作语言&lt;/strong&gt;）：用来对数据库中表的数据进行增删改。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;INSERT&lt;/code&gt;、&lt;code&gt;DELETE&lt;/code&gt;、&lt;code&gt;UPDATE&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DQL&lt;/strong&gt;（&lt;strong&gt;Data Query Language&lt;/strong&gt;，&lt;strong&gt;数据查询语言&lt;/strong&gt;）：用来查询数据库中表的记录。&lt;/p&gt;
&lt;p&gt;关键字：&lt;code&gt;SELECT&lt;/code&gt;等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DCL&lt;/strong&gt;（&lt;strong&gt;Data Control Language&lt;/strong&gt;，&lt;strong&gt;数据控制语言&lt;/strong&gt;）：用来定义数据库的访问权限和安全级别，及创建用户。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;数据定义语言ddl&#34;&gt;数据定义语言（DDL）&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;CREATE&lt;/code&gt;——创建：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;建立数据库：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;数据库名&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立基本表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tab_name
(
    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;数据类型&lt;/span&gt; [&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列级完整性约束条件&lt;/span&gt;],
    ...
    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表级完整性约束条件&lt;/span&gt;,
    ...
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;完整性约束有3种子句：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PRIMARY KEY&lt;/code&gt;：主键约束；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CHECK&lt;/code&gt;：检查约束；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FOREIGN KEY&lt;/code&gt;：外键约束；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NOT NULL&lt;/code&gt;：非空约束；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UNIQUE&lt;/code&gt;：唯一约束；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DEFAULT&lt;/code&gt;：默认约束。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;定义列时使用的基本数据类型如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NTEGER&lt;/code&gt;：整数（也可写成&lt;code&gt;INT&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FLOAT(n)&lt;/code&gt;：浮点数，精度至少为n位数字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NUMERIC(p,d)&lt;/code&gt;：定点数，由p位数字（不包括符号、小数点）组成，小数点后面有d位数字（也可写成&lt;code&gt;DECIMAL(p,d)&lt;/code&gt;或&lt;code&gt;DEC(p,d)&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CHAR(n)&lt;/code&gt;：长度为n的定长字符串。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DATETIME&lt;/code&gt;：日期时间型。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ALTER TABLE&lt;/code&gt;——修改表结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;增加新列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;类型&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改列的定义：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COLUMN&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;新类型&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COLUMN&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;DROP TABLE&lt;/code&gt;——删除基本表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;数据操纵语言dml&#34;&gt;数据操纵语言（DML）&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;INSERT INTO&lt;/code&gt;——插入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;直接插入元组值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名（列名序列）&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;元组值&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;序列&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;元组值&lt;/span&gt;), (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;元组值&lt;/span&gt;), ...)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;插入一个查询的结果值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名序列&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;查询语句&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;DELETE FROM&lt;/code&gt;——删除：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;条件表达式&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;UPDATE&lt;/code&gt;——修改：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;表名&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;值表达式&lt;/span&gt;[, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;值表达式&lt;/span&gt;...]
[WHERE条件表达式]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;数据查询语言dql&#34;&gt;数据查询语言（DQL）&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;SELECT&lt;/code&gt;——查询：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;目标表的列名或列表达式序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;
[&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;行条件表达式&lt;/span&gt;]
[&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名序列&lt;/span&gt;
[&lt;span style=&#34;color:#66d9ef&#34;&gt;HAVING&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;组条件表达式&lt;/span&gt;]]
[&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt;[&lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;]...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;where-条件查询&#34;&gt;WHERE 条件查询&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;目标表的列名或列表达式序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;行条件表达式&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运算符：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 或 &lt;code&gt;!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大于等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不大于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小于等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BETWEEN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;范围在指定的两个值之间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;!&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不小于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;IS NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;为 NULL 的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;IS NOT NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不为 NULL 的值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;AND&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;逻辑与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;OR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;逻辑或&lt;/td&gt;
&lt;td&gt;&lt;code&gt;NOT&lt;/code&gt;逻辑非&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;IN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配包含在集合中的值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;NOT IN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定不包含在集合中的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LIKE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;字符模糊配对&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;LIKE&lt;/code&gt;字符模糊配对包含以下通配符：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;目标表的列名或列表达式序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;
WHRER &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_ABC%&amp;#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%&lt;/code&gt;：表示任何字符出现任意次数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_&lt;/code&gt;：表示匹配单个任意字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;order-by-排序数据&#34;&gt;ORDER BY 排序数据&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ORDER BY&lt;/code&gt;可以指定多个列来排序，排序规则有：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;关键字&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;规则说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;ASC&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;升序排序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;DESC&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;降序排序&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;目标表的列名或列表达式序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;
[...]
[&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;] ...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;ORDER BY子句必须是SELECT命令中的最后一个子句。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;group-by-分组数据&#34;&gt;GROUP BY 分组数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;目标表的列名或列表达式序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;
[&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列名序列&lt;/span&gt;
[&lt;span style=&#34;color:#66d9ef&#34;&gt;HAVING&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;组条件表达式&lt;/span&gt;]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HAVING&lt;/code&gt;是&lt;code&gt;GROUP BY&lt;/code&gt;的分组条件控制语句。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HAVING&lt;/code&gt;的操作符和&lt;code&gt;WHERE&lt;/code&gt;相同。&lt;/li&gt;
&lt;li&gt;被&lt;code&gt;WHERE&lt;/code&gt;过滤掉的记录并不会出现在分组中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;聚合函数&#34;&gt;聚合函数&lt;/h3&gt;
&lt;p&gt;聚合函数实现数据统计等功能。&lt;/p&gt;
&lt;p&gt;函数名|功能
&lt;code&gt;AVG&lt;/code&gt;|计算一个数值型表达式的平均值
&lt;code&gt;COUNT&lt;/code&gt;|计算指定表达式中选择的项数，&lt;code&gt;COUNT(*)&lt;/code&gt;统计查询输出的行数
&lt;code&gt;MIN&lt;/code&gt;|计算指定表达式中的最小值
&lt;code&gt;MAX&lt;/code&gt;|计算指定表达式中的最大值
&lt;code&gt;SUM&lt;/code&gt;|计算指定表达式中的数值总和
&lt;code&gt;STDEV&lt;/code&gt;|计算指定表达式中所有数据的标准差
&lt;code&gt;STDEVP&lt;/code&gt;|计算总体标准差&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;目标表的列名或列表达式序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;使用了聚合函数的条件判断&lt;/span&gt;
[ ... ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;聚合函数&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关系名表序列&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;聚合函数可以使用算数运算符。&lt;/p&gt;
&lt;p&gt;聚合函数常与&lt;code&gt;GROUP BY&lt;/code&gt;子句一起使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;连接&#34;&gt;连接&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;连接符号&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;INNER JOIN&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;内连接（默认）。&lt;br&gt;内连接又包括等值连接、非等值连接和自连接。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;OUTER JOIN&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;外连接。&lt;br&gt;又包括：&lt;br&gt;&lt;code&gt;LEFT OUTER JOIN&lt;/code&gt;（左外连接）；&lt;br&gt;&lt;code&gt;RIGHT OUTER JOIN&lt;/code&gt;（右外连接）；&lt;br&gt;&lt;code&gt;FULL OUTER JOIN&lt;/code&gt;（全外连接）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;子查询&#34;&gt;子查询&lt;/h3&gt;
&lt;p&gt;子查询是指将&lt;code&gt;SELECT&lt;/code&gt;作为其它语句的子句使用。例如在&lt;code&gt;WHERE&lt;/code&gt;、&lt;code&gt;FROM&lt;/code&gt;中使用&lt;code&gt;SELECT&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;数据控制语言dcl&#34;&gt;数据控制语言（DCL）&lt;/h2&gt;
&lt;p&gt;数据控制控制的是&lt;strong&gt;用户对数据的存储访问权力&lt;/strong&gt;，是由DBA决定的。但是，某个用户对某类数据具有何种权利，是个&lt;strong&gt;政策问题&lt;/strong&gt;而不是技术问题。&lt;/p&gt;
&lt;p&gt;授权语句格式（&lt;code&gt;GRANT&lt;/code&gt;）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;权限&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;[, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;权限&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;] ...
[&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;对象类型&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;对象名&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;TO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;用户&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;[, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;用户&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;]...
[&lt;span style=&#34;color:#66d9ef&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OPTION&lt;/span&gt;];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不同类型的操作对象有不同的操作权限，常见的操作权限如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;对象&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;对象类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;操作权限&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;属性列&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;TABLE&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;SELECT&lt;/code&gt;、&lt;br&gt;&lt;code&gt;INSERT&lt;/code&gt;、&lt;br&gt;&lt;code&gt;UPDATE&lt;/code&gt;、&lt;br&gt;&lt;code&gt;DELETE&lt;/code&gt;、&lt;br&gt;&lt;code&gt;ALL PRIVILEGES&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;视图&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;TABLE&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;SELECT&lt;/code&gt;、&lt;br&gt;&lt;code&gt;INSERT&lt;/code&gt;、&lt;br&gt;&lt;code&gt;UPDATE&lt;/code&gt;、&lt;br&gt;&lt;code&gt;DELETE&lt;/code&gt;、&lt;br&gt;&lt;code&gt;ALL PRIVILEGES&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;基本表&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;TABLE&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;SELECT&lt;/code&gt;、&lt;br&gt;&lt;code&gt;INSERT&lt;/code&gt;、&lt;br&gt;&lt;code&gt;UPDATE&lt;/code&gt;、&lt;br&gt;&lt;code&gt;DELETE&lt;/code&gt;、&lt;br&gt;&lt;code&gt;ALTER&lt;/code&gt;、&lt;br&gt;&lt;code&gt;INDEX&lt;/code&gt;、&lt;br&gt;&lt;code&gt;ALL PRIVILEGES&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;数据库&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;DATABASE&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;CREATETAB&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;建立表的权限，可由DBA授予普通用户；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WITH GRANT OPTION&lt;/code&gt;：表示获得了这些权限的用户还可以将权限赋给其他用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;收回权限语句格式（&lt;code&gt;REVOKE&lt;/code&gt;）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;REVOKE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;权限&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;[, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;权限&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;]...
[&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;对象类型&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;对象名&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;用户&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;[, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;用户&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;视图&#34;&gt;视图&lt;/h2&gt;
&lt;p&gt;视图是从一个或者多个基本表或视图中导出的虚拟表。&lt;/p&gt;
&lt;p&gt;创建视图：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;视图名&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;列表名&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;查询子句&lt;/span&gt;
[&lt;span style=&#34;color:#66d9ef&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OPTION&lt;/span&gt;];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;子查询可以是任意复杂的&lt;code&gt;SELECT&lt;/code&gt;语句，但通常不允许含有&lt;code&gt;ORDER BY&lt;/code&gt;子句和&lt;code&gt;DISTINCT&lt;/code&gt;短语。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WITH CHECK OPTION&lt;/code&gt;：表示对&lt;code&gt;UPDATE&lt;/code&gt;、&lt;code&gt;INSERT&lt;/code&gt;、&lt;code&gt;DELETE&lt;/code&gt;操作时保证更新、插入或删除的行满足视图定义中的谓词条件（即子查询中的条件表达式）。&lt;/li&gt;
&lt;li&gt;组成视图的属性列名或者全部省略或者全部指定。如果省略属性列名，则隐含该视图由&lt;code&gt;SELECT&lt;/code&gt;子查询目标列的主属性组成。&lt;/li&gt;
&lt;li&gt;对视图进行的增改操作实际上是对基本表进行操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;删除视图：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;视图名&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;索引&#34;&gt;索引&lt;/h2&gt;
&lt;p&gt;数据库中的索引是&lt;u&gt;某个表中一列或者若干列值的集合&lt;/u&gt;和&lt;u&gt;相应的指向表中物理标识这些值的数据页的逻辑指针清单&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;索引分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;聚集索引：指索引表中索引项的顺序与表中记录的物理顺序一致的索引；&lt;/li&gt;
&lt;li&gt;非聚集索引。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;对数据库表创建和删除索引，修改的是数据库的内模式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;关系数据库的规范化&#34;&gt;关系数据库的规范化&lt;/h1&gt;
&lt;h2 id=&#34;关系模式&#34;&gt;关系模式&lt;/h2&gt;
&lt;p&gt;一个关系模式应当是一个五元组（含关系名）：$R&amp;lt;U,D,dom,F&amp;gt;$。&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$R$：&lt;u&gt;关系名，是符号化的元祖语义；&lt;/u&gt;&lt;/li&gt;
&lt;li&gt;$U$：&lt;u&gt;一组属性名；&lt;/u&gt;&lt;/li&gt;
&lt;li&gt;$D$：属性组$U$中的属性来自域$D$；&lt;/li&gt;
&lt;li&gt;$dom$：属性到域的映射；&lt;/li&gt;
&lt;li&gt;$F$：&lt;u&gt;属性组$U$上的一组数据依赖（函数依赖）。&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$D$和$dom$对模式设计关系不大，通常将关系模式看作是一个三元组：$R&amp;lt;U,F&amp;gt;$。&lt;/p&gt;
&lt;p&gt;当且仅当$U$上的一个关系$r$满足$F$时，称$r$为关系模式$R&amp;lt;U,F&amp;gt;$的一个关系。&lt;/p&gt;
&lt;h2 id=&#34;函数依赖&#34;&gt;函数依赖&lt;/h2&gt;
&lt;p&gt;数据依赖是&lt;u&gt;通过一个关系中属性间值的相等与否&lt;/u&gt;体现出来的&lt;u&gt;数据间的相互关系&lt;/u&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;函数依赖&lt;/strong&gt;：设$R(U)$是属性集U上的关系模式，&lt;u&gt;$X$、$Y$是$U$的子集&lt;/u&gt;。若对$R(U)$的任何一个可能的关系$r$，$r$中不可能存在两个元组在$X$上的属性值相等，而在$Y$上的属性值不等（即，&lt;u&gt;在关系$r$中，元组在$X$上的属性值相等，那么在$Y$上的属性值也相等&lt;/u&gt;），则称&lt;strong&gt;X函数决定Y&lt;/strong&gt;或&lt;strong&gt;Y函数依赖于X&lt;/strong&gt;，记作$X \rightarrow Y$。&lt;/p&gt;
&lt;p&gt;如，学生表中，$学号 \rightarrow 姓名$。&lt;/p&gt;
&lt;p&gt;属性之间有3种关系，但并不是每一种都存在函数依赖。如果$X$和$Y$之间的对应关系是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$1-1$：存在函数依赖$X \rightarrow Y$和$Y \rightarrow Y$；&lt;/li&gt;
&lt;li&gt;$n:1$：存在函数依赖$X \rightarrow Y$；&lt;/li&gt;
&lt;li&gt;$n:m$：不存在函数依赖。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;非平凡的函数依赖&lt;/strong&gt;：$X \rightarrow Y$，但$Y \not\subseteq X$，则称$X \rightarrow Y$是非平凡的函数依赖。&lt;/p&gt;
&lt;p&gt;例如，$姓名 \not\subseteq 学号$，则$学号 \rightarrow 姓名$是一个非平凡的函数依赖。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;平凡的函数依赖&lt;/strong&gt;：如果$X \rightarrow Y$，但$Y \subseteq X$，则称$X \rightarrow Y$是平凡的函数依赖。&lt;/p&gt;
&lt;p&gt;例如，$学号 \subset (学号,课程号)$，则$(学号,课程号) \rightarrow 学号$是一个平凡的函数依赖。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;完全函数依赖&lt;/strong&gt;：在R(U)中，如果$X \rightarrow Y$，并且对于X的任何一个真子集$X&#39;$都有**$X&#39;$不能决定$Y$**，则称$Y$对$X$完全函数依赖，记作$X \stackrel{f}{\longrightarrow} Y$。&lt;/p&gt;
&lt;p&gt;即需要由$X$的所有属性才能决定$Y$的，才能称为完全函数依赖。&lt;/p&gt;
&lt;p&gt;如，$(学号,课程号) \rightarrow 成绩$。&lt;/p&gt;
&lt;p&gt;如果$X$仅包含一个属性，那么此时必为完全函数依赖。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;部分函数依赖&lt;/strong&gt;：如果$X \rightarrow Y$，但&lt;strong&gt;Y不完全函数依赖于X&lt;/strong&gt;，则称Y对X部分函数依赖，记作$X \stackrel{P}{\longrightarrow} Y$。部分函数依赖也称为局部函数依赖。&lt;/p&gt;
&lt;p&gt;如，（学号，班级代号） $\rightarrow$ 姓名，因为学号 $\rightarrow$ 姓名，所以（学号，班级代号） $\stackrel{P}{\longrightarrow}$ 姓名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;传递依赖&lt;/strong&gt;：在$R(U,F)$中（F是U上的一组函数依赖），如果$X \rightarrow Y,\ Y \not\subseteq X,\ Y \rightarrow Z$，则称&lt;strong&gt;Z对X传递依赖&lt;/strong&gt;（$X \rightarrow Z$）。&lt;/p&gt;
&lt;p&gt;即$X \stackrel{f}{\longrightarrow} Y$，且$Y \rightarrow Z$，则$X \rightarrow Z$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;码&lt;/strong&gt;：设$K$为$R(U,F)$中属性的组合，若$K \rightarrow U$，且对于$K$的任何一个真子集$K&#39;$都有$K&#39;$不能决定$U$，则$K$为$R$的候选码。&lt;/p&gt;
&lt;p&gt;即$K \stackrel{f}{\rightarrow} U$，那么K是R的候选码。&lt;/p&gt;
&lt;p&gt;若有多个候选码，则选一个作为主码（主键，主关键字）。候选码通常也称为&lt;strong&gt;候选关键字&lt;/strong&gt;（候选键，键）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;主属性&lt;/strong&gt;和&lt;strong&gt;非主属性&lt;/strong&gt;：&lt;strong&gt;包含在任何一个候选码中&lt;/strong&gt;的属性称为主属性，否则称为非主属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;外码&lt;/strong&gt;：若$R(U)$中的属性或属性组&lt;u&gt;$X$非$R$的码，但$X$是另一个关系的码&lt;/u&gt;，则称$X$为外码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;函数依赖的公理系统&lt;/strong&gt;（Armstrong公理系统）：&lt;/p&gt;
&lt;p&gt;设关系模式$R(U,F)$，其中$U$为属性集，$F是$U$上的一组函数依赖，那么有以下推理规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自反律&lt;/strong&gt;（A1）：若$Y \subseteq X \subseteq U$，则$X \rightarrow Y$为$F$所蕴涵（蕴含）。&lt;/p&gt;
&lt;p&gt;如，（学号，姓名） $\rightarrow$ 姓名是函数依赖所蕴涵的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;增广律&lt;/strong&gt;（A2）：若$X \rightarrow Y$为F所蕴涵，且$Z \subseteq U$,则$XZ \rightarrow YZ$为$F$所蕴涵。&lt;/p&gt;
&lt;p&gt;如，学号 $\rightarrow$ 姓名，班级 $\subseteq$ 学生表，那么（学号，班级） $\rightarrow$ （姓名，班级）是函数依赖所蕴涵的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;传递律&lt;/strong&gt;（A3）：若$X \rightarrow Y,\ Y \rightarrow Z$为$F$所蕴涵，则$X \rightarrow Z$为$F$所蕴涵。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据上述3条推理规则又可推出下述3条推理规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;合并规则&lt;/strong&gt;：若$X \rightarrow Y,\ X \rightarrow Z$，则$X \rightarrow YZ$为F所蕴涵。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;伪传递律&lt;/strong&gt;：若$X \rightarrow Y,\ WY \rightarrow Z$，则$XW \rightarrow Z$为F所蕴涵。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分解规则&lt;/strong&gt;：若$X \rightarrow Y,\ Z \subseteq Y$，则$X \rightarrow Z$为F所蕴涵。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;合并规则和分解规则是两个互逆的规则。即$X \rightarrow Y,\ X \rightarrow Z$，可得$X \rightarrow YZ$；那么$X \rightarrow YZ$，也可得$X \rightarrow Y,\ X \rightarrow Z$（因为$Y,Z \sub YZ$）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;名称&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;条件&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;结论&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;函数依赖&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;元组在$X$上的属性值相等，那么在$Y$上的属性值也相等&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X$函数决定$Y$或$Y$函数依赖于$X$，记作$X \rightarrow Y$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;非平凡的函数依赖&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$，$Y \not\subseteq X$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$是非平凡的函数依赖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;平凡的函数依赖&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$，$Y \subseteq X$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$是平凡的函数依赖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;完全函数依赖&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$，$X&#39; \subset X$，$X&#39; \not\rightarrow Y$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$Y$对$X$完全函数依赖，记作$X \stackrel{f}{\longrightarrow} Y$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;部分函数依赖（局部函数依赖）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$，$X \stackrel{f}{\not\longrightarrow} Y$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$Y$对$X$部分函数依赖，记作$X \stackrel{P}{\longrightarrow} Y$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;传递依赖&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$，$Y \not\subseteq X$，$Y \rightarrow Z$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$Z$对$X$传递依赖&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;名称&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;定义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;码（候选码，候选关键字）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;若$K \stackrel{f}{\rightarrow} U$，则$K$为$R$的候选码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;主属性&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;包含在任何一个候选码中的属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;非主属性&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;不包含在任何一个候选码中的属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;外码&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X$非$R$的码，但$X$是另一个关系的码，则称$X$为外码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Armstrong公理系统：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;定律&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;条件&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;F蕴含&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;自反律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$Y \subseteq X \subseteq U$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;增广律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y$，$Z \subseteq U$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$XZ \rightarrow XZ$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;传递律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y,\ Y \rightarrow Z$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Z$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;规则&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;条件&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;F蕴含&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;合并规则&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y,\ X \rightarrow Z$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow YZ$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;伪传递律&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y,\ WY \rightarrow Z$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$XW \rightarrow Z$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;分解规则&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Y,\ Z \subseteq Y$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$X \rightarrow Z$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;闭包计算&#34;&gt;闭包计算&lt;/h2&gt;
&lt;p&gt;设关系模式$R&amp;lt;U,F&amp;gt;$，其中$U$为属性集，$F$是$U$上的一组函数依赖。称所有用Armstrong公理从F推出的函数依赖$X \rightarrow A_i$中，$A_i(X,A_i \subseteq U)$的属性集合为$X$的属性闭包，记为$X^{+}_{F}$或$X^{+}$。&lt;/p&gt;
&lt;p&gt;定理：&lt;/p&gt;
&lt;p&gt;设关系模式$R&amp;lt;U,F&amp;gt;$，其中$F$为函数依赖集，$X,Y \subseteq U$，则从$F$推出$X \rightarrow Y$的充要条件是$Y \subseteq X^{+}$。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;属性的闭包计算用于求主键。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如，给定关系$R(U,F)$，其中$U={A,B,C,D,E,H}$，$F={A \rightarrow B, B \rightarrow DH, A \rightarrow H, C \rightarrow E }$。&lt;/p&gt;
&lt;p&gt;先根据$F$选取仅在$\rightarrow$左边出现的属性集（例如，$A$、$C$和$AC$）。根据选取的属性集进行闭包运算（先对$A$进行运算）：&lt;/p&gt;
&lt;p&gt;$$
(A)^{+} \rightarrow (A \ BH)^{+} \rightarrow (AB \ D \ H)^{+} \rightarrow (ABDH)
$$&lt;/p&gt;
&lt;p&gt;此时，$(ABDH)^{+}$无论再怎么推，结果都是$(ABDH)$，说明对$A$的闭包计算已经结束了，结果就是$(ABDH)$。&lt;/p&gt;
&lt;p&gt;而$(ABDH) \neq U$，说明$A$并不是关系$R$的主键。&lt;/p&gt;
&lt;p&gt;而对于$C$的函数依赖仅有$C \rightarrow E$，所以此时应该对$(AC)$进行闭包运算：&lt;/p&gt;
&lt;p&gt;$$
(AC)^{+} \rightarrow (ABDH \ CE)^{+} \rightarrow (ABCDEH)
$$&lt;/p&gt;
&lt;p&gt;此时对$(AC)$的闭包计算结果$(ABCDEH) = U$，说明$(AC)$是关系$R$的主键。&lt;/p&gt;
&lt;h2 id=&#34;关系模式的分解&#34;&gt;关系模式的分解&lt;/h2&gt;
&lt;p&gt;对存在&lt;strong&gt;数据冗余&lt;/strong&gt;、&lt;strong&gt;插入异常&lt;/strong&gt;、&lt;strong&gt;删除异常&lt;/strong&gt;问题的关系模式，应采取&lt;u&gt;将一个关系模式分解为多个关系模式的方法进行处理&lt;/u&gt;（原来存储在一个二维表内的数据就要分散到多个二维表中）。要求是分解后的二维表不能丢失分解前二维表的信息。&lt;/p&gt;
&lt;p&gt;为使分解后的模式保持原模式所满足的特性，其基本要求是模式分解具有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无损连接性；&lt;/li&gt;
&lt;li&gt;保持函数依赖性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;无损连接&#34;&gt;无损连接&lt;/h3&gt;
&lt;p&gt;无损连接性指的是对关系模式分解时，原关系模式下，任一合法的关系实例，在&lt;u&gt;分解之后应能通过&lt;strong&gt;自然连接&lt;/strong&gt;运算恢复&lt;/u&gt;起来。&lt;/p&gt;
&lt;p&gt;设$\rho = \{ R_1&amp;lt;U_1,F_1&amp;gt;,\ R_2&amp;lt;U_2,F_2&amp;gt;,\ \cdots,\ R_k&amp;lt;U_k,F_k&amp;gt; \}$是关系模式$R&amp;lt;U,F&amp;gt;$的一个分解，如果对于$R$的任一满足$F$的关系$r$都有：&lt;/p&gt;
&lt;p&gt;$$
r = \pi_{R1}(r) \Join \pi_{R2}(r) \Join \cdots \Join \pi_{Rk}(r)
$$&lt;/p&gt;
&lt;p&gt;则称这个分解$\rho$是满足依赖集$F$的无损连接。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$\pi()$运算是投影运算。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;例如$\pi_{R1}(r)$，表示关系$r$在$R_1$上的投影。
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\Join$运算是自然连接运算。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;个人理解：&lt;/p&gt;
&lt;p&gt;无损连接性就是指，关系模式拆分后（分成若干个小的关系模式，即$\rho$），$\rho$中的关系模式从总体上看，保持着与$R$一致的连接。$\rho$中的关系模式通过自然连接保持着原本的关系模式。&lt;u&gt;重要的是$rho$中的关系模式可以通过&lt;strong&gt;自然连接&lt;/strong&gt;恢复到原关系模式。&lt;/u&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;验证无损连接的充要条件：&lt;/p&gt;
&lt;p&gt;如果$R$的分解为$\rho = \{R_1,R_2\}$，$F$为$R$所满足的函数依赖集合，则分解$\rho$具有无损连接性的充分必要条件为：&lt;/p&gt;
&lt;p&gt;$$
R_1 \cap R_2 \rightarrow (R_1 - R_2) \\
或 \\
R_1 \cap R_2 \rightarrow (R_2 - R_1)
$$&lt;/p&gt;
&lt;p&gt;无损连接的判定算法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;构造一个$k$行$n$列的表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每一列对应一个属性$A_j$；&lt;/li&gt;
&lt;li&gt;每一行对应分解$rho$中的一个关系模式$R_i&amp;lt;U_i, F_i&amp;gt;$。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若属性$A_j$属于$U_i$，则在第$i$行第$j$列上放符号$a_j$，否则放符号$b_{ij}$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逐个检查$F$中的每一个函数依赖$FD_i$，并修改表中的元素：&lt;/p&gt;
&lt;p&gt;取$F$中一个函数依赖$X_i \rightarrow A_j$（$X_i$要属于$rho$中的任一关系），考虑这些行中第$j$列元素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若其中有$a_j$，则全部改为$a_j$；&lt;/li&gt;
&lt;li&gt;否则全部改为$b_{mj}$，$m$为这些行的行号最小值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若某一行变成了$(a_1, a_2, \cdots, a_n)$，则分解$rho$具有无损连接性，算法终止。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;比较扫描前后，表有无变化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如有变化，则返回第2步；&lt;/li&gt;
&lt;li&gt;否则算法终止，分解$rho$是有损连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例如，关系模式$R&amp;lt;U,F&amp;gt;$，其中，$U = \{ A, B, C \}$，$F = \{ A \rightarrow B, C \rightarrow B \}$。&lt;/p&gt;
&lt;p&gt;判断$\rho = \{ AC, BC \}$是否具有无损连接性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;构造初始表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$R_i$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$A$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$B$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$C$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;AC&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$b_{12}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;BC&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$b_{21}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_2$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_3$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;考察$A \rightarrow B$，将$AC$行的$B$列改为$a_2$：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$R_i$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$A$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$B$&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$C$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;AC&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_2$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;BC&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$b_{21}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_2$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_3$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从上表中看出$AC$行为${a_1, a_2, a_3}$，所以判断该关系模式具有无损连接性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;保持函数依赖&#34;&gt;保持函数依赖&lt;/h3&gt;
&lt;p&gt;设有关系模式$R$，$F$是$R$的函数依赖集，$Z$是$R$的一个属性集合，则称$Z$所涉及到的$F^+$中所有函数依赖为$F$在$Z$上的投影，即为$\pi_Z(F)$，有：&lt;/p&gt;
&lt;p&gt;$$
\pi_Z(F) = \{ x \rightarrow y | (x \rightarrow y) \in F^+ 且 xy \subseteq z \}
$$&lt;/p&gt;
&lt;p&gt;设关系模式$R$的一个分解$\rho = \{ R_1&amp;lt;U_1,F_1&amp;gt;,\ R_2&amp;lt;U_2,F_2&amp;gt;,\ \cdots,\ R_k&amp;lt;U_k,F_k&amp;gt; \}$，$F$是$R$的依赖集，如果$F$等价于$\pi_{R1}(F) \cup \pi_{R2}(F) \cup \cdots \cup \pi_{Rk}(F)$，则称分解$\rho$具有依赖保持性。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;该定义中的&amp;quot;等价&amp;quot;并不代表相等，而是$F$中所包含的函数依赖在分解的函数依赖中也被包含，或者在分解的函数依赖中能被推出。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;一个无损连接分解不一定具有依赖保持性；&lt;/li&gt;
&lt;li&gt;一个依赖保持性分解不一定具有无损连接性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;范式&#34;&gt;范式&lt;/h2&gt;
&lt;p&gt;关系数据库中的&lt;u&gt;关系必须满足一定的规范化要求&lt;/u&gt;，对于不同的规范化程度可用范式来衡量。&lt;/p&gt;
&lt;p&gt;&lt;u&gt;范式是符合某一种级别的关系模式的集合&lt;/u&gt;，是衡量关系模式规范化程度的标准，达到范式的关系才是规范化的。&lt;/p&gt;
&lt;p&gt;一个低一级范式的关系模式，通过模式分解可以转换为若干个高一级范式的关系模式的集合，这个过程称为规范化。&lt;/p&gt;
&lt;p&gt;主要有6种范式，高一级范式是在低一级范式的基础上进一步满足一些要求，按要求从低到高分为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;第一范式（1NF）：若关系模式R的&lt;u&gt;每一个分量是不可再分的数据项&lt;/u&gt;，则关系模式R属于第一范式。&lt;/p&gt;
&lt;p&gt;如，关系模式$R&amp;lt;U,F&amp;gt;$：&lt;/p&gt;
&lt;p&gt;$$
U = \{ 学号,姓名,学院,院长,课程号,课程名,成绩 \} \\
F = \{ 学号 \rightarrow 姓名,学号 \rightarrow 学院,学院 \rightarrow 院长,课程号 \rightarrow 课程名,(学号,课程号) \rightarrow 成绩 \}
$$&lt;/p&gt;
&lt;p&gt;1NF可能存在的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数据冗余&lt;/strong&gt;：数据的冗余度大，R中可能出现多个元组在多个属性集中值相同；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;修改异常&lt;/strong&gt;：引起修改操作的不一致性，修改一条记录可能需要修改其他多条记录才能保持数据一致性（由数据冗余引起）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;插入异常&lt;/strong&gt;：主码不能取空值或部分空值，会出现插入异常；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;删除异常&lt;/strong&gt;：本该删除但又客观存在的元组，会出现删除异常。&lt;/p&gt;
&lt;p&gt;即，删除掉的数据可能包含着其他本不该被删除的属性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问题的原因是1NF中可能存在&lt;u&gt;部分函数依赖&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二范式（2NF）：若关系模式$R \in 1NF$，且&lt;u&gt;每一个非主属性完全依赖于码&lt;/u&gt;，则关系模式$R \in 2NF$。&lt;/p&gt;
&lt;p&gt;即当&lt;u&gt;1NF消除了对主键的部分函数依赖后就能满足2NF&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;例如，$学号 \rightarrow 学院$，即$(学号,课程号) \stackrel{P}{\rightarrow} 学院$（部分依赖于码），所以$R \not\in 2NF$。&lt;/p&gt;
&lt;p&gt;&lt;u&gt;模式的分解需要保持函数依赖。&lt;/u&gt;根据$F$，将$R$分解为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$R_1&amp;lt;U_1,F_1&amp;gt;$：&lt;/p&gt;
&lt;p&gt;$$
U_1 = \{ 学号,姓名,学院,院长 \} \\
F_1 = \{ 学号 \rightarrow 姓名,学号 \rightarrow 学院,学院 \rightarrow 院长 \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$R_2&amp;lt;U_2,F_2&amp;gt;$：&lt;/p&gt;
&lt;p&gt;$$
U_2 = \{ 课程号,课程名 \} \\
F_2 = \{ 课程号 \rightarrow 课程名 \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$R_3&amp;lt;U_3,F_3&amp;gt;$：&lt;/p&gt;
&lt;p&gt;$$
U_3 = \{ 学号,课程号,成绩 \} \\
F_3 = \{ (学号,课程号) \rightarrow 成绩 \}&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;则，$R1 \in 2NF$，$R2 \in 2NF$，$R3 \in 2NF$。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2NF可能依然会存在数据冗余、修改异常、插入异常删除异常等问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第三范式（3NF）：若关系模式$R(R \in 2NF)$中&lt;u&gt;任何一个非主属性都不传递函数依赖于码&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;若关系模式$R&amp;lt;U,F&amp;gt;$（$U$为关系集，$F$为函数依赖集）中不存在这样的码$X$，使得：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$X \rightarrow Y(Y \not\rightarrow X)$，&lt;/li&gt;
&lt;li&gt;$Y \rightarrow Z$，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;则关系模式$R \in 3NF$，其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$Y$为属性组，&lt;/li&gt;
&lt;li&gt;$Z(Z \not\subseteq Y)$为非主属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即当&lt;u&gt;2NF消除了非主属性对主键的传递函数依赖&lt;/u&gt;，则称为3NF。&lt;/p&gt;
&lt;p&gt;如，$R_1$中有$学号 \rightarrow 学院$，$学院 \rightarrow 院长$（非主属性&amp;quot;院长&amp;quot;传递依赖于主键&amp;quot;学号&amp;quot;）。可将$R_1$分解为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$R_{11}&amp;lt;U_{11},F_{11}&amp;gt;$：&lt;/p&gt;
&lt;p&gt;$$
U_{11} = \{ 学号,姓名,学院 \} \\
F_{11} = \{ 学号 \rightarrow 姓名, 学号 \rightarrow 学院 \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$R_{12}&amp;lt;U_{12},F_{12}&amp;gt;$：&lt;/p&gt;
&lt;p&gt;$$
U_{12} = \{ 学院,院长 \} \\
F_{12} = \{ 学院 \rightarrow 院长 \}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BC范式（BCNF）：关系模式$R&amp;lt;U,F&amp;gt;$属于BCNF（$R$首先得满足3NF），当且仅当其$F$中&lt;u&gt;每个依赖的决定因素必定包含R的某个候选码&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;由BCNF的定义可以得到结论，一个满足BCNF的关系模式有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;满足3NF。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有&lt;u&gt;非主属性&lt;/u&gt;对每一个&lt;u&gt;码&lt;/u&gt;都是&lt;u&gt;完全函数依赖&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;$$
码 \stackrel{f}{\longrightarrow} 非主属性
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有的&lt;u&gt;主属性对每一个&lt;/u&gt;不包含它的码&lt;/u&gt;，也是&lt;u&gt;完全函数依赖&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;没有任何属性完全函数依赖于非码的任何一组属性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个满足BCNF的关系模式R己&lt;u&gt;消除了&lt;strong&gt;插入&lt;/strong&gt;和&lt;strong&gt;删除异常&lt;/strong&gt;&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第四范式（4NF）：&lt;/p&gt;
&lt;p&gt;多值依赖：&lt;/p&gt;
&lt;p&gt;给定的关系模式$R(U,F)$：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$X,Y,Z \subseteq U$，&lt;/li&gt;
&lt;li&gt;$Z=U-X-Y$（$Z$是$X \cup Y$的差集）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当且仅当对$R$的任一关系$r$，给定的一对$(x,z)$值，有一组$Y$的值，这组值仅仅决定于$x$值而与$z$值无关。则关系模式$R$中的多值依赖$X \rightarrow\rightarrow Y$成立。&lt;/p&gt;
&lt;p&gt;平凡的多值依赖：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$X \rightarrow\rightarrow Y$成立，&lt;/li&gt;
&lt;li&gt;$Z = \Phi$，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;则$X \rightarrow\rightarrow Y$为平凡的多值依赖。&lt;/p&gt;
&lt;p&gt;例如，课程$\rightarrow\rightarrow$任课老师，课程$\rightarrow\rightarrow$参考书。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681986736869.png&#34;
	width=&#34;401&#34;
	height=&#34;168&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681986736869_hub94b74037a183c6a89e4bcd8421bb42f_31992_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681986736869_hub94b74037a183c6a89e4bcd8421bb42f_31992_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;多值依赖表示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;238&#34;
		data-flex-basis=&#34;572px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;4NF定义：&lt;/p&gt;
&lt;p&gt;设有一关系模式$R(U,F)$是1NF，如果对于$R$的每个&lt;u&gt;非平凡多值依赖&lt;/u&gt;$X \rightarrow\rightarrow Y(Y \not\subseteq X)$，&lt;u&gt;$X$都包含了$R$的一个候选码&lt;/u&gt;，则称$R$是第四范式，记为4NF。&lt;/p&gt;
&lt;p&gt;例如，课程$\rightarrow\rightarrow$任课老师，课程$\rightarrow\rightarrow$参考书都是非平凡多值依赖，而课程不是码，所以不属于4NF。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第五范式（5NF）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;范式之间的关系：&lt;/p&gt;
&lt;p&gt;$$
5NF \sub 4NF \sub BCNF \sub 3NF \sub 2NF \sub 1NF
$$&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681894653450.png&#34;
	width=&#34;564&#34;
	height=&#34;309&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681894653450_hufd0c331a204cb2191b602cbf89c9254e_19807_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681894653450_hufd0c331a204cb2191b602cbf89c9254e_19807_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;规范化范式的包含关系&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;438px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;3NF和BCNE它们是进行规范化的主要目标。&lt;/p&gt;
&lt;p&gt;1NF到4NF之间的转换关系：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;范式&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;转换关系&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1NF&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;每一个分量是不可再分的数据项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2NF&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1NF消除了部分函数依赖后满足2NF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3NF&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2NF消除了非主属性对码的传递函数依赖后满足3NF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;BCNF&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;3NF消除了主属性对码的部分和传递函数依赖后满足BCNF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4NF&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;BCNF消除非平凡且非函数依赖的多值依赖后满足4NF&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681988070233.png&#34;
	width=&#34;288&#34;
	height=&#34;303&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681988070233_huc82f8c088bb0c067181a613d8b65e62c_36441_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1681988070233_huc82f8c088bb0c067181a613d8b65e62c_36441_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;规范化步骤&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;95&#34;
		data-flex-basis=&#34;228px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;几种范式及其分解的性质：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;性质&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;3NF&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;BCNF&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;4NF&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;消除函数依赖带来冗余&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;消除多值函数依赖带来冗余&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;保持函数依赖&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;保持多值函数依赖&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h1 id=&#34;数据库设计&#34;&gt;数据库设计&lt;/h1&gt;
&lt;p&gt;新奥尔良（New Orleans）法式目前公认的数据库设计方法，它将数据库设计分为以下几个阶段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户需求分析&lt;/li&gt;
&lt;li&gt;概念结构设计&lt;/li&gt;
&lt;li&gt;逻辑结构设计&lt;/li&gt;
&lt;li&gt;物理结构设计&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这几个阶段之后是与数据库建立和运行有关的阶段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据库实施&lt;/li&gt;
&lt;li&gt;数据库运行和维护&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682505975157.png&#34;
	width=&#34;382&#34;
	height=&#34;711&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682505975157_hu7950d0a7bbf6248186699719c01d30ad_79693_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682505975157_hu7950d0a7bbf6248186699719c01d30ad_79693_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;数据库设计步骤&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;53&#34;
		data-flex-basis=&#34;128px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;需求分析&#34;&gt;需求分析&lt;/h2&gt;
&lt;p&gt;需求分析是项目确定后，对数据库应用系统所要设计的&lt;u&gt;内容（数据）&lt;/u&gt;和&lt;u&gt;功能（行为）&lt;/u&gt;的整理和描述，是以用户的角度来认识系统。&lt;/p&gt;
&lt;p&gt;需求分析是后面几个阶段，&lt;u&gt;逻辑结构设计&lt;/u&gt;、&lt;u&gt;物理结构设计&lt;/u&gt;以及&lt;u&gt;应用程序设计&lt;/u&gt;的依据。&lt;/p&gt;
&lt;p&gt;需求分析将收集到的零碎的、局部的数据分析整理后，建立&lt;u&gt;需求说明文档&lt;/u&gt;、&lt;u&gt;数据字典&lt;/u&gt;和&lt;u&gt;数据流程图&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;需求分析还包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据流分析：是对事务处理所需的原始数据的收集，及经过处理后所得数据及其流向。&lt;/p&gt;
&lt;p&gt;使用数据流图（DFD）表示。DFD能指出数据的流向和需要进行的事物处理（不涉及如何处理）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据字典：是关于数据库中数据的描述，即元数据（不是数据本身）。&lt;/p&gt;
&lt;p&gt;数据字典包括5个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据项；&lt;/li&gt;
&lt;li&gt;数据结构；&lt;/li&gt;
&lt;li&gt;数据流；&lt;/li&gt;
&lt;li&gt;数据存储；&lt;/li&gt;
&lt;li&gt;加工。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;u&gt;系统需求说明书是需求分析阶段的成果&lt;/u&gt;，主要包括&lt;u&gt;数据流图&lt;/u&gt;、&lt;u&gt;数据字典&lt;/u&gt;、&lt;u&gt;各种说明性表格&lt;/u&gt;、&lt;u&gt;统计输出表和系统功能结构图&lt;/u&gt;等。&lt;/p&gt;
&lt;p&gt;需求分析阶段的工作：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682560887456.png&#34;
	width=&#34;646&#34;
	height=&#34;291&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682560887456_hub24d924f6ecdb59b0c05cde9f6a94c8c_58795_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682560887456_hub24d924f6ecdb59b0c05cde9f6a94c8c_58795_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;需求分析阶段的工作步骤&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;221&#34;
		data-flex-basis=&#34;532px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;概念结构设计&#34;&gt;概念结构设计&lt;/h2&gt;
&lt;p&gt;概念设计阶段的目标是产生整体数据库概念结构，即概念模型，它是与DBMS无关的。&lt;/p&gt;
&lt;p&gt;概念结构设计的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自顶向下&lt;/li&gt;
&lt;li&gt;自底向上&lt;/li&gt;
&lt;li&gt;逐步扩张&lt;/li&gt;
&lt;li&gt;混合策略（自顶向下和自底向上相结合）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;概念结构是对现实世界的一种抽象，从数据库设计角度看，主要是数据抽象，一般有如下3种数据抽象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分类&lt;/li&gt;
&lt;li&gt;聚集&lt;/li&gt;
&lt;li&gt;概括&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;局部视图设计就是对某个局部应用设计其分一R图，也称局部E-R图。其基本步骤如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682560993863.png&#34;
	width=&#34;717&#34;
	height=&#34;341&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682560993863_huf62446c235f8abd7d4a5d741b96b438b_65906_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682560993863_huf62446c235f8abd7d4a5d741b96b438b_65906_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;概念结构设计的工作步骤&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;210&#34;
		data-flex-basis=&#34;504px&#34;
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确定局部结构范围；&lt;/li&gt;
&lt;li&gt;定义实体；&lt;/li&gt;
&lt;li&gt;联系定义；&lt;/li&gt;
&lt;li&gt;属性分配。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;概念模型的建立采用E-R模型。&lt;/p&gt;
&lt;h3 id=&#34;e-r-模型&#34;&gt;E-R 模型&lt;/h3&gt;
&lt;p&gt;E-R模型用E-R图（ERD）表示，E-R图有以下几个成分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实体&lt;/strong&gt;：用&lt;strong&gt;矩形&lt;/strong&gt;表示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;联系&lt;/strong&gt;：用&lt;strong&gt;棱形&lt;/strong&gt;表示，并用无向边分别与有关实体连接起来，同时在无向边标注联系的类型（$1:1$，$1:n$ 或 $m:n$）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;属性&lt;/strong&gt;：用&lt;strong&gt;椭圆形&lt;/strong&gt;表示，并用无向边将其与相应的实体连接起来&lt;/p&gt;
&lt;p&gt;E-R模型中的属性有以下分类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;简单属性和复合属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单属性是原子的、不可再分的；&lt;/li&gt;
&lt;li&gt;复合属性可以细分为更小的部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单值属性和多值属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单值属性是一个属性对应一个值；&lt;/li&gt;
&lt;li&gt;多值属性是一个属性对应一组值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NULL属性：实体在某个属性上没有值或属性值未知时，使用NULL值表示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;派生属性：派生属性可以从其他属性得来（通过运算等方式求出）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扩充的E-R模型（用来表达更多具有特殊语义的成分）有以下成分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;弱实体&lt;/strong&gt;：使用&lt;strong&gt;双线矩形框&lt;/strong&gt;表示。将需要依赖其他实体存在的实体。&lt;/p&gt;
&lt;p&gt;实体间的所有（Ownership，拥有）关系代表一个实体对另一些实体具有很强的依赖关系，即一个实体的存在必须以另一个实体为前提。&lt;/p&gt;
&lt;p&gt;例如职工与家属的联系，家属总是属于某职工的（在关系模式中需要依赖职工而存在），所以家属是弱实体。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特殊化&lt;/strong&gt;：将一个实体集&lt;u&gt;按照某些特性区分为几个&lt;strong&gt;子实体&lt;/strong&gt;&lt;/u&gt;。这种从普遍到特殊的过程即为特殊化。&lt;/p&gt;
&lt;p&gt;子实体的图形表示如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1684564987147.png&#34;
	width=&#34;256&#34;
	height=&#34;145&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1684564987147_huad14f3e1152e9df0e94e04c64131c1cf_1087_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1684564987147_huad14f3e1152e9df0e94e04c64131c1cf_1087_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;子实体&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;176&#34;
		data-flex-basis=&#34;423px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;子实体由称为子类，它会有一个超类，并且能继承超类的属性，超类的属性是实体集中所有子实体的相同属性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;E-R图中的主要构件（包含扩充的E-R模型成分）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682508598814.png&#34;
	width=&#34;1035&#34;
	height=&#34;391&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682508598814_hub0bc3034b48557bb84109435ab8e458e_191424_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682508598814_hub0bc3034b48557bb84109435ab8e458e_191424_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;E-R图中的主要构件&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;264&#34;
		data-flex-basis=&#34;635px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;建立概念结构模型&#34;&gt;建立概念结构模型&lt;/h3&gt;
&lt;p&gt;建立概念结构模型的步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;选择局部应用：&lt;/p&gt;
&lt;p&gt;需求分析阶段得到的大量数据分散杂乱，许多数据会应用于不同的处理，数据与数据之间关联关系也较为复杂。要最终&lt;u&gt;确定实体、属性和联系，必须根据数据流图这一线索理清数据&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;数据流图是对业务处理过程从高层到底层的一级抽象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高层抽象流图一般反映系统的概貌，对数据的引用较为笼统；&lt;/li&gt;
&lt;li&gt;底层又可能过于细致，不能体现数据的关联关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此要&lt;u&gt;选择适当层次的数据流图，让这一层的每一部分对应一个局部应用，实现某一项功能。从这一层入手，就能很好地设计&lt;strong&gt;分E-R图&lt;/strong&gt;&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逐一设计分E-R图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;E-R图合并：&lt;/p&gt;
&lt;p&gt;根据局部应用设计好各局部E-R图之后，就可以对各分E-R图进行合并。&lt;/p&gt;
&lt;p&gt;合并的目的在于，在合并过程中解决分E-R图中相互存在的冲突。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;分E-R图之间的冲突主要有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;属性冲突&lt;/strong&gt;：同一属性在不同的分E-R图上的属性类型、取值范围和数据单位等可能会不一致。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;命名冲突&lt;/strong&gt;：相同意义的属性在不同的分E-R图上可能会有不同的命名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结构冲突&lt;/strong&gt;：同一实体在不同的分E-R图中可能会有不同的属性；同一对象在某一分E-R图中被抽象为实体，而在另一分E-R图中又可能被抽象为属性，反之亦然。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;逻辑结构设计&#34;&gt;逻辑结构设计&lt;/h2&gt;
&lt;p&gt;逻辑结构设计就是在概念结构设计的基础上进行数据模型设计，可以是层次模型、网状模型和关系模型。&lt;/p&gt;
&lt;p&gt;通常是把概念模型转换成为&lt;u&gt;某个具体的数据库管理系统所支持的结构数据模型&lt;/u&gt;（与DBMS有关）。即，将概念结构设计所得的E-R模型转换成关系模式。&lt;/p&gt;
&lt;p&gt;逻辑结构设计的工作步骤：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682577339219.png&#34;
	width=&#34;581&#34;
	height=&#34;296&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682577339219_hu0e28af6a5a7453a0a5eb6666d48c94c7_44563_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682577339219_hu0e28af6a5a7453a0a5eb6666d48c94c7_44563_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;逻辑结构设计的工作步骤&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;196&#34;
		data-flex-basis=&#34;471px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;e-r-模型转换关系模式&#34;&gt;E-R 模型转换关系模式&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;实体向关系模式的转换：&lt;/p&gt;
&lt;p&gt;将E-R图中的实体逐一转换成为一个关系模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实体名：对应关系模式的名称；&lt;/li&gt;
&lt;li&gt;实体的属性：转换成关系模式的属性；&lt;/li&gt;
&lt;li&gt;实体标识符：关系的码（键）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;超类和子类的转换：超类和子类定义为两个关系模式，将超类的主键加到子类中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;联系向关系模式的转换：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一对一联系的转换：&lt;/p&gt;
&lt;p&gt;有两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;方式1：将联系转换成一个独立的关系模式，关系模式的名称取联系的名称，关系模式的属性包括该联系所关联的两个实体的码及联系的属性，关系的码取自任一方实体的码。&lt;/p&gt;
&lt;p&gt;那么一个一对一联系需要转换成三个关系模式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方式2（一般使用该方式）：将联系归并到关联的两个实体的任一方，给待归并的一方实体属性集中增加另一方实体的码和该联系的属性即可，归并后的实体码保持不变。&lt;/p&gt;
&lt;p&gt;一个一对一联系仅需转换成两个关系模式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682562445900.png&#34;
	width=&#34;304&#34;
	height=&#34;358&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682562445900_hu39b33fe28157809884f3b45df834a34e_28041_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682562445900_hu39b33fe28157809884f3b45df834a34e_28041_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;联系向关系模式的转换示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;84&#34;
		data-flex-basis=&#34;203px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;方式1：&lt;/p&gt;
&lt;p&gt;厂长（&lt;strong&gt;姓名&lt;/strong&gt;，性别，年龄）&lt;/p&gt;
&lt;p&gt;工厂（&lt;strong&gt;厂号&lt;/strong&gt;，厂名，地点）&lt;/p&gt;
&lt;p&gt;管理（（厂长）&lt;strong&gt;姓名&lt;/strong&gt;，厂号，任期）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;粗体代表该关系模式的码。管理的码可以为姓名或厂号。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方式2：&lt;/p&gt;
&lt;p&gt;厂长（姓名，性别，年龄）&lt;/p&gt;
&lt;p&gt;工厂（厂号，厂名，地点，（厂长）姓名，任期）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一对多联系的转换：&lt;/p&gt;
&lt;p&gt;两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方式1：将联系转换成一个独立的关系模式，关系模式的名称取联系的名称，关系模式的属性取该联系所关联的两个实体的码及联系的属性，&lt;u&gt;关系的码是多方实体的码&lt;/u&gt;；&lt;/li&gt;
&lt;li&gt;方式2（一般使用该方式）：将联系&lt;u&gt;归并到关联的两个实体的多方&lt;/u&gt;，给待归并的多方实体属性集中增加一方实体的码和该联系的属性即可，归并后的多方实体码保持不变。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682563544291.png&#34;
	width=&#34;315&#34;
	height=&#34;361&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682563544291_hue1cce8af0395e2bd704f6df0a3e3321e_30915_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682563544291_hue1cce8af0395e2bd704f6df0a3e3321e_30915_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;一对多联系转换的例子&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;87&#34;
		data-flex-basis=&#34;209px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;方式1:&lt;/p&gt;
&lt;p&gt;仓库（&lt;strong&gt;仓库号&lt;/strong&gt;，地点，面积）&lt;/p&gt;
&lt;p&gt;商品（&lt;strong&gt;货号&lt;/strong&gt;，商品名，价格）&lt;/p&gt;
&lt;p&gt;仓储（&lt;strong&gt;货号&lt;/strong&gt;，仓库号，数量）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方式2：&lt;/p&gt;
&lt;p&gt;仓库（&lt;strong&gt;仓库号&lt;/strong&gt;，地点，面积）&lt;/p&gt;
&lt;p&gt;商品（&lt;strong&gt;货号&lt;/strong&gt;，商品名，价格，仓库号，数量）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多对多联系的转换：&lt;/p&gt;
&lt;p&gt;多对多联系只能转换成一个独立的关系模式，关系模式的名称取联系的名称，关系模式的属性取该联系所关联的两个多方实体的码及联系的属性，关系的码是多方实体的码构成的属性组。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682564018777.png&#34;
	width=&#34;327&#34;
	height=&#34;373&#34;
	srcset=&#34;https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682564018777_hu8cf40dc2a076405a9cb5ca4646519d5e_36334_480x0_resize_box_3.png 480w, https://blog.linner.asia/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/uTools_1682564018777_hu8cf40dc2a076405a9cb5ca4646519d5e_36334_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;多对多联系转换的示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;87&#34;
		data-flex-basis=&#34;210px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;转换成：&lt;/p&gt;
&lt;p&gt;学生（&lt;strong&gt;学号&lt;/strong&gt;，姓名，性别，年龄）&lt;/p&gt;
&lt;p&gt;课程（&lt;strong&gt;课程号&lt;/strong&gt;，课程名，学时）&lt;/p&gt;
&lt;p&gt;选修（&lt;strong&gt;（学号，课程号）&lt;/strong&gt;，成绩）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;关系模式的规范化&#34;&gt;关系模式的规范化&lt;/h3&gt;
&lt;p&gt;转换后的关系模式可能存在数据冗余、更新异常等问题，所以需要进一步的规范化处理。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;根据语义确定各关系模式的数据依赖（函数依赖）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据数据依赖确定关系模式的范式。判定关系模式是否达到了3NF或4NF。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果关系模式不符合要求，要根据关系模式的分解算法对其进行分解，达到3NF、BCNF或4NF。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关系模式的评价及修正。&lt;/p&gt;
&lt;p&gt;根据规范化理论对关系模式分解之后，就可以在理论上消除冗余和更新异常。但根据处理要求，可能还需要增加部分冗余以满足处理要求，这就需要做部分关系模式的处理，分解、合并或增加冗余属性，提高存储效率和处理效率。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;事务管理&#34;&gt;事务管理&lt;/h1&gt;
&lt;p&gt;事务是一个操作序列，这些操作“要么都做，要么都不做”。&lt;/p&gt;
&lt;p&gt;事务和程序是两个不同的概念，一般一个程序可包含多个事务。&lt;/p&gt;
&lt;p&gt;在SQL语言中，事务定义的语句有以下三条。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BEGIN TRANSACTION&lt;/code&gt;：事务开始。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;COMMIT&lt;/code&gt;：事务提交。&lt;/p&gt;
&lt;p&gt;该操作表示事务成功地结束，它将通知事务管理器该事务的&lt;u&gt;所有更新操作现在可以被提交或永久地保留&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ROLLBACK&lt;/code&gt;：事务回滚。&lt;/p&gt;
&lt;p&gt;该操作表示事务非成功地结束，它将通知事务管理器&lt;u&gt;出故障&lt;/u&gt;了，数据库可能处于不一致状态，该事务的&lt;u&gt;所有更新操作必须回滚或撤销&lt;/u&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;事务的ACID性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;原子性&lt;/strong&gt;（Atomicity）：事务是原子的，要么都做，要么都不做。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;一致性&lt;/strong&gt;（Consistency）：事务执行的结果必须保证数据库从一个一致性状态变到另一个一致性状态。&lt;/p&gt;
&lt;p&gt;因此，当数据库只包含成功事务提交的结果时，称数据库处于一致性状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;隔离性&lt;/strong&gt;（Isolation）：事务相互隔离。&lt;/p&gt;
&lt;p&gt;当多个事务并发执行时，任一事务的更新操作直到其成功提交的整个过程，对其他事务都是不可见的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;持久性&lt;/strong&gt;（Durability）：一旦事务成功提交，即使数据库崩溃，其对数据库的更新操作也将永久有效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;数据库故障&#34;&gt;数据库故障&lt;/h1&gt;
&lt;p&gt;在数据库的运行过程中，难免会出现计算机系统的软、硬件故障，这些故障会影响数据库中数据的正确性，甚至破坏数据库，使数据库中的全部或部分数据丢失。因此，数据库的关键技术在于建立冗余数据，即备份数据。如何在系统出现故障后能够及时地使数据库恢复到故障前的正确状态，就是数据库恢复技术。&lt;/p&gt;
&lt;p&gt;故障类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;事务内部故障&lt;/strong&gt;：有的可以通过事务程序本身发现；有的是非预期的，不能由事务程序处理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统故障&lt;/strong&gt;（软故障）：是指造成系统停止运行的任何事件，使得系统要重新启动，例如CPU故障、操作系统故障和突然停电等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;介质故障&lt;/strong&gt;（硬故障）：如磁盘损坏、磁头碰撞和瞬时强磁干扰。此类故障发生的几率小，但破坏性最大。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;计算机病毒&lt;/strong&gt;：计算机病毒是一种人为的故障和破坏，是在计算机程序中插入的破坏，计算机功能或者数据可以繁殖和传播的一组计算机指令或程序代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;备份方法&#34;&gt;备份方法&lt;/h2&gt;
&lt;p&gt;恢复的基本原理是“建立数据冗余”（重复存储）。建立冗余数据的方法是进行&lt;u&gt;数据转储&lt;/u&gt;和&lt;u&gt;登记日志文件&lt;/u&gt;，分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;静态转储和动态转储：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;静态转储&lt;/strong&gt;：在转储期间不允许对数据库进行任何存取、修改操作；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;动态转储&lt;/strong&gt;：在转储期间允许对数据库进行存取、修改操作。&lt;/p&gt;
&lt;p&gt;动态转储和用户事务可并发执行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;海量转储和增量转储：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;海量转储&lt;/strong&gt;：指每次转储全部数据；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;增量转储&lt;/strong&gt;：指每次只转储上次转储后更新过的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;日志文件&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;在事务处理的过程中，DBMS把以下操作写入日志文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;事务开始、事务结束；&lt;/li&gt;
&lt;li&gt;对数据库的插入、删除和修改。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一旦发生故障，DBMS的恢复子系统利用日志文件撤销事务对数据库的改变，回退到事务的初始状态。因此，DBMS利用日志文件来进行事务故障恢复和系统故障恢复，并可协助后备副本进行介质故障恢复。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;恢复&#34;&gt;恢复&lt;/h2&gt;
&lt;p&gt;事务恢复有以下3个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;反向扫描文件日志（即从最后向前扫描日志文件），查找该事务的更新操作。&lt;/li&gt;
&lt;li&gt;对事务的更新操作执行逆操作。&lt;/li&gt;
&lt;li&gt;继续反向扫描日志文件，查找该事务的其他更新操作，并做同样的处理，直到事务的开始标志。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;并发控制&#34;&gt;并发控制&lt;/h1&gt;
&lt;p&gt;所谓并发操作，是指在多用户共享的系统中许多用户可能同时对同一数据进行操作。并发操作带来的问题是数据的不一致性，主要有三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;丢失更新&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不可重复读&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;读脏数据&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其主要原因是事务的并发操作破坏了事务的隔离性。DBMS的并发控制子系统负责协调并发事务的执行，保证数据库的完整性不受破坏，避免用户得到不正确的数据。&lt;/p&gt;
&lt;h2 id=&#34;封锁&#34;&gt;封锁&lt;/h2&gt;
&lt;p&gt;并发控制的主要技术是封锁。基本封锁的类型有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;排它锁（X锁或写锁）：若事务T对数据对象A加上X锁，则&lt;u&gt;只允许T读取和修改A，其他事务都不能再对A加任何类型的锁&lt;/u&gt;，直到T释放A上的锁。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;共享锁（S锁或读锁）：若事务T对数据对象A加上S锁，则&lt;u&gt;只允许T读取A，但不能修改A，其他事务只能再对A加S锁&lt;/u&gt;，直到T释放A上的S锁。&lt;/p&gt;
&lt;p&gt;这就保证了其他事务可以读A，但在T释放A上的S锁之前不能对A进行任何修改。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;分布式数据库&#34;&gt;分布式数据库&lt;/h1&gt;
&lt;p&gt;分布式数据库系统是指数据存放在计算机网络的不同场地的计算机中，每一场地都有自治处理能力并能完成局部应用；而每一场地也参与（至少一种）全局应用程序的执行，全局应用程序可通过网络通信访问系统中多个场地的数据。其定义强调分布性和逻辑整体性两点。&lt;/p&gt;
&lt;p&gt;分布式数据库中有以下基本概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分片透明&lt;/strong&gt;：指用户或应用程序不需要知道逻辑上访问的表具体是怎么分块存储的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复制透明&lt;/strong&gt;：指采用复制技术的分布方法，用户不需要知道数据是复制到哪些节点，如何复制的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;位置透明&lt;/strong&gt;：指用户无须知道数据存放的物理位置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逻辑透明&lt;/strong&gt;：指用户或应用程序无需知道局部场地使用的是哪种数据模型。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具有以下性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;共享性&lt;/strong&gt;：数据存储在不同的结点数据共享。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自治性&lt;/strong&gt;：指每结点对本地数据都能独立管理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可用性&lt;/strong&gt;：指当某一场地故障时，系统可以使用其他场地上的副本而不至于使整个系统瘫痪。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布性&lt;/strong&gt;：指数据在不同场地上的存储。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;存储过程&#34;&gt;存储过程&lt;/h1&gt;
&lt;p&gt;存储过程（Stored Procedure）是在大型数据库系统中，一组为了完成特定功能的SQL语句集，它存储在数据库中，一次编译后永久有效，用户通过指定存储过程的名字并给出参数（如果该存储过程带有参数）来执行它。&lt;/p&gt;
&lt;p&gt;存储过程是数据库所提供的一种数据库对象，通过存储过程定义一段代码，提供给应用程序调用来执行。从安全性的角度考虑，更新数据时，通过提供存储过程正第三方调用，将需要更新的数据传入存储过程，而在存储过程内部用代码分别对需要的多个表进行更新，从而避免了向第三方提供系统的表结构，保证了系统的数据安全。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
