<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>服务器 on Linner&#39;s Blog</title>
        <link>https://blog1.linner.asia/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
        <description>Recent content in 服务器 on Linner&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh</language>
        <lastBuildDate>Sat, 10 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog1.linner.asia/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Tomcat</title>
        <link>https://blog1.linner.asia/p/tomcat/</link>
        <pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate>
        
        <guid>https://blog1.linner.asia/p/tomcat/</guid>
        <description>&lt;h1 id=&#34;tomcat基本使用&#34;&gt;Tomcat基本使用&lt;/h1&gt;
&lt;h2 id=&#34;tomcat安装&#34;&gt;Tomcat安装&lt;/h2&gt;
&lt;p&gt;访问&lt;a class=&#34;link&#34; href=&#34;https://tomcat.apache.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tomcat官网&lt;/a&gt;下载。Tomcat是绿色版，直接解压即可。&lt;/p&gt;
&lt;h2 id=&#34;启动tomcat&#34;&gt;启动Tomcat&lt;/h2&gt;
&lt;p&gt;以Windows系统为例，运行Tomcat目录下 &lt;code&gt;bin\startup.bat&lt;/code&gt; 启动脚本即可完成启动。&lt;/p&gt;
&lt;p&gt;启动后，通过浏览器访问 &lt;code&gt;http://localhost:8080&lt;/code&gt;能看到Apache Tomcat的内容就说明Tomcat已经启动成功。&lt;/p&gt;
&lt;p&gt;Windows系统下启动的过程中，如果控制台有中文乱码，需要修改&lt;code&gt;conf/logging.prooperties&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;将&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;java.util.logging.ConsoleHandler.encoding = UTF-8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改为&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;java.util.logging.ConsoleHandler.encoding = GBK
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;关闭tomcat&#34;&gt;关闭Tomcat&lt;/h2&gt;
&lt;p&gt;关闭Tomcat不应该直接关闭运行窗口来强制关闭。应该运行&lt;code&gt;bin\shutdown.bat&lt;/code&gt;或&lt;code&gt;ctrl+c&lt;/code&gt;来正常关闭。&lt;/p&gt;
&lt;h2 id=&#34;修改端口&#34;&gt;修改端口&lt;/h2&gt;
&lt;p&gt;Tomcat默认的端口是8080，通过修改 &lt;code&gt;conf/server.xml&lt;/code&gt; 来修改端口号：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;Connector&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;port=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8080&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;protocol=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HTTP/1.1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;connectionTimeout=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;20000&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;redirectPort=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8443&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;部署&#34;&gt;部署&lt;/h2&gt;
&lt;p&gt;Tomcat部署项目： 将项目放置到&lt;code&gt;webapps&lt;/code&gt;目录下，即部署完成。&lt;/p&gt;
&lt;p&gt;一般JavaWeb项目会被打包称&lt;code&gt;wa&lt;/code&gt;r包，然后将&lt;code&gt;war&lt;/code&gt;包放到&lt;code&gt;webapps&lt;/code&gt;目录下，Tomcat会自动解压缩。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;maven-创建-web-项目&#34;&gt;Maven 创建 Web 项目&lt;/h1&gt;
&lt;p&gt;使用Maven工具能更加简单快捷的创建Web项目。&lt;/p&gt;
&lt;h2 id=&#34;maven-web-项目结构&#34;&gt;Maven Web 项目结构&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;📁&lt;code&gt;project_name&lt;/code&gt; &amp;mdash; 项目主目录
&lt;ul&gt;
&lt;li&gt;📁&lt;code&gt;src&lt;/code&gt; &amp;mdash; 源代码和测试代码文件目录
&lt;ul&gt;
&lt;li&gt;📁&lt;code&gt;main&lt;/code&gt; &amp;mdash; 源代码文件目录
&lt;ul&gt;
&lt;li&gt;📁&lt;code&gt;java&lt;/code&gt; &amp;mdash; 源代码Java文件目录&lt;/li&gt;
&lt;li&gt;📁&lt;code&gt;resourcs&lt;/code&gt; &amp;mdash; 源代码配置文件目录&lt;/li&gt;
&lt;li&gt;❗📁&lt;code&gt;webapp&lt;/code&gt; 或 &lt;code&gt;web&lt;/code&gt; &amp;mdash; Web项目核心目录
存放web配置文件和web项目代码 (&lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;等)
&lt;ul&gt;
&lt;li&gt;❗📁&lt;code&gt;WEB-INF&lt;/code&gt; &amp;mdash; Web项目核心目录
&lt;ul&gt;
&lt;li&gt;📄&lt;code&gt;web.xml&lt;/code&gt; &amp;mdash; Web项目配置文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其它目录或文件，如 &lt;code&gt;index.html&lt;/code&gt;、&lt;code&gt;html&lt;/code&gt;、&lt;code&gt;css&lt;/code&gt;、&lt;code&gt;js&lt;/code&gt;等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;📁&lt;code&gt;test&lt;/code&gt; &amp;mdash; 测试代码文件目录
&lt;ul&gt;
&lt;li&gt;📁&lt;code&gt;java&lt;/code&gt; &amp;mdash; 测试代码Java文件目录&lt;/li&gt;
&lt;li&gt;📁&lt;code&gt;resource&lt;/code&gt; &amp;mdash; 测试代码配置&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;📄&lt;code&gt;pom.xml&lt;/code&gt; &amp;mdash; 项目核心配置文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开发完成部署的 Maven Web 项目结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;📁&lt;code&gt;project_name&lt;/code&gt; &amp;mdash; 项目访问路径（虚拟目录）
&lt;ul&gt;
&lt;li&gt;❗📁&lt;code&gt;WEB-INF&lt;/code&gt; &amp;mdash; Web项目核心目录
&lt;ul&gt;
&lt;li&gt;📁&lt;code&gt;classes&lt;/code&gt; &amp;mdash; Java字节码文件
编译后的Java字节码文件和&lt;code&gt;resources&lt;/code&gt;的资源文件，会被放到该目录下
包括&lt;code&gt;pom.xml&lt;/code&gt;中依赖坐标对应的jar包&lt;/li&gt;
&lt;li&gt;📁&lt;code&gt;lib&lt;/code&gt; &amp;mdash; 项目所需jar包&lt;/li&gt;
&lt;li&gt;📄&lt;code&gt;web.xml&lt;/code&gt; &amp;mdash; Web项目配置文件&lt;/li&gt;
&lt;li&gt;其它目录或文件，如 &lt;code&gt;index.html&lt;/code&gt;、&lt;code&gt;html&lt;/code&gt;、&lt;code&gt;css&lt;/code&gt;、&lt;code&gt;js&lt;/code&gt;等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;创建-maven-web-项目&#34;&gt;创建 Maven Web 项目&lt;/h2&gt;
&lt;p&gt;创建方式有两种：使用骨架和不使用骨架&lt;/p&gt;
&lt;p&gt;使用骨架大致步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建Maven项目&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;选择使用Web项目骨架&lt;/mark&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://blog1.linner.asia/p/tomcat/1627227650406.png&#34;
	width=&#34;998&#34;
	height=&#34;789&#34;
	srcset=&#34;https://blog1.linner.asia/p/tomcat/1627227650406_huf4f8cf0db624add1c763ab2bf77489a7_480515_480x0_resize_box_3.png 480w, https://blog1.linner.asia/p/tomcat/1627227650406_huf4f8cf0db624add1c763ab2bf77489a7_480515_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;303px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;输入Maven项目坐标创建项目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确认Maven相关的配置信息后，完成项目创建&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;删除pom.xml中多余内容&lt;/mark&gt;
&lt;img src=&#34;https://blog1.linner.asia/p/tomcat/1627228584625.png&#34;
	width=&#34;1255&#34;
	height=&#34;550&#34;
	srcset=&#34;https://blog1.linner.asia/p/tomcat/1627228584625_hua75347db8dd8a49e943e8d807bb75211_213215_480x0_resize_box_3.png 480w, https://blog1.linner.asia/p/tomcat/1627228584625_hua75347db8dd8a49e943e8d807bb75211_213215_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;228&#34;
		data-flex-basis=&#34;547px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;补齐Maven Web项目缺失的目录结构&lt;/p&gt;
&lt;p&gt;最终目录结构如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;📁&lt;code&gt;project_name&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;📁&lt;code&gt;src&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;📁&lt;code&gt;main&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;📁&lt;code&gt;java&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;📁&lt;code&gt;resourcs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;📁&lt;code&gt;webapp&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;📁&lt;code&gt;WEB-INF&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;📄&lt;code&gt;web.xml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;📄&lt;code&gt;pom.xml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://blog1.linner.asia/p/tomcat/1627204022604.png&#34;
	width=&#34;1603&#34;
	height=&#34;556&#34;
	srcset=&#34;https://blog1.linner.asia/p/tomcat/1627204022604_hu32242d5545b5e672b8f75a7e3f4bf225_334035_480x0_resize_box_3.png 480w, https://blog1.linner.asia/p/tomcat/1627204022604_hu32242d5545b5e672b8f75a7e3f4bf225_334035_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;288&#34;
		data-flex-basis=&#34;691px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;不使用骨架大致步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建Maven项目&lt;/li&gt;
&lt;li&gt;选择&lt;mark&gt;不使用Web项目骨架&lt;/mark&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;按照正常的方式创建，不勾选&lt;code&gt;Create from archetype&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;输入Maven项目坐标创建项目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;在pom.xml设置打包方式为war&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;project&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- ...... --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;......&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;.......&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;vesion&amp;gt;&lt;/span&gt;.......&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/vesion&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;war&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- ...... --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;补齐Maven Web项目缺失webapp的目录结构&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;文件&amp;ndash;&amp;gt;项目结构&amp;ndash;&amp;gt;Facet中按&lt;code&gt;+&lt;/code&gt;然后选择&lt;code&gt;Web&lt;/code&gt;，选择当前项目&lt;/p&gt;
&lt;p&gt;修改webapp目录，并补齐Maven Web项目缺失&lt;code&gt;WEB-INF/web.xml&lt;/code&gt;的目录结构，即可完成构建&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog1.linner.asia/p/tomcat/1627204076090.png&#34;
	width=&#34;1686&#34;
	height=&#34;533&#34;
	srcset=&#34;https://blog1.linner.asia/p/tomcat/1627204076090_huc311bbecdc1eb62664bcca918cf611b5_364413_480x0_resize_box_3.png 480w, https://blog1.linner.asia/p/tomcat/1627204076090_huc311bbecdc1eb62664bcca918cf611b5_364413_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;316&#34;
		data-flex-basis=&#34;759px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;在idea中使用tomcat&#34;&gt;在IDEA中使用Tomcat&lt;/h1&gt;
&lt;p&gt;在IDEA中集成使用Tomcat有两种方式，分别是集成本地Tomcat和Tomcat Maven插件。&lt;/p&gt;
&lt;h2 id=&#34;集成本地tomcat&#34;&gt;集成本地Tomcat&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;右上角 编辑运行/调试配置 对话框&amp;ndash;&amp;gt;编辑配置&amp;ndash;&amp;gt;&lt;code&gt;+&lt;/code&gt;&amp;ndash;&amp;gt;Tomcat服务器&amp;ndash;&amp;gt;&lt;code&gt;本地&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://blog1.linner.asia/p/tomcat/1627229992900.png&#34;
	width=&#34;1115&#34;
	height=&#34;686&#34;
	srcset=&#34;https://blog1.linner.asia/p/tomcat/1627229992900_hu5f8cc3e47912345b768c91098cf41ba7_135158_480x0_resize_box_3.png 480w, https://blog1.linner.asia/p/tomcat/1627229992900_hu5f8cc3e47912345b768c91098cf41ba7_135158_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;162&#34;
		data-flex-basis=&#34;390px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;指定本地Tomcat的具体路径&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://blog1.linner.asia/p/tomcat/1627230313062.png&#34;
	width=&#34;1347&#34;
	height=&#34;866&#34;
	srcset=&#34;https://blog1.linner.asia/p/tomcat/1627230313062_hu6d16bb4ca6689d3aaef58c322ee2322a_325387_480x0_resize_box_3.png 480w, https://blog1.linner.asia/p/tomcat/1627230313062_hu6d16bb4ca6689d3aaef58c322ee2322a_325387_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;155&#34;
		data-flex-basis=&#34;373px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;将开发项目部署项目到Tomcat中&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://blog1.linner.asia/p/tomcat/1627230913259.png&#34;
	width=&#34;877&#34;
	height=&#34;775&#34;
	srcset=&#34;https://blog1.linner.asia/p/tomcat/1627230913259_hu1e86ffc5547b033aa40d7c2629e2f38b_147832_480x0_resize_box_3.png 480w, https://blog1.linner.asia/p/tomcat/1627230913259_hu1e86ffc5547b033aa40d7c2629e2f38b_147832_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;113&#34;
		data-flex-basis=&#34;271px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;xxx.war&lt;/code&gt; 和 &lt;code&gt;xxx.war exploded&lt;/code&gt; 这两种部署项目模式的区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;war模式是将WEB工程打成war包，把war包发布到Tomcat服务器上&lt;/li&gt;
&lt;li&gt;war exploded模式是将WEB工程以当前文件夹的位置关系发布到Tomcat服务器上&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;war模式部署成功后，Tomcat的webapps目录下会有部署的项目内容&lt;/p&gt;
&lt;p&gt;war exploded模式部署成功后，Tomcat的webapps目录下没有，而使用的是项目的target目录下的内容进行部署&lt;/p&gt;
&lt;p&gt;建议选war模式进行部署，更符合项目部署的实际情况&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://blog1.linner.asia/p/tomcat/1627205657117.png&#34;
	width=&#34;1591&#34;
	height=&#34;625&#34;
	srcset=&#34;https://blog1.linner.asia/p/tomcat/1627205657117_hufe7637abc0a2ee946e7d9e2394f50189_323790_480x0_resize_box_3.png 480w, https://blog1.linner.asia/p/tomcat/1627205657117_hufe7637abc0a2ee946e7d9e2394f50189_323790_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;254&#34;
		data-flex-basis=&#34;610px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;tomcat-maven插件&#34;&gt;Tomcat Maven插件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在&lt;code&gt;pom.xml&lt;/code&gt;中添加Tomcat插件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--Tomcat插件 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.tomcat.maven&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;tomcat7-maven-plugin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.2&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用Maven Helper插件快速启动项目，选中项目，右键 &amp;ndash;&amp;gt;Run Maven &amp;ndash;&amp;gt; tomcat7:run&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;安装Maven Helper插件：File &amp;ndash;&amp;gt; Settings &amp;ndash;&amp;gt; Plugins &amp;ndash;&amp;gt; Maven Helper &amp;mdash;&amp;gt; Install，重启IDEA&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
